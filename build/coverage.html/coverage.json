{"/home/travis/build/npmtest/node-npmtest-qrcode/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_qrcode */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-qrcode/lib.npmtest_qrcode.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/lib.npmtest_qrcode.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":51}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":57}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_qrcode */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_qrcode = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_qrcode = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-qrcode/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":50}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":64},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-qrcode && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_qrcode */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_qrcode","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_qrcode.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_qrcode.rollup.js'] =","            local.assetsDict['/assets.npmtest_qrcode.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_qrcode.__dirname + '/lib.npmtest_qrcode.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":36}}},"branchMap":{},"code":["/*","*copyright Ryan Day 2012","*","* Licensed under the MIT license:","*   http://www.opensource.org/licenses/mit-license.php","*","* this is the main server side application file for node-qrcode.","* these exports use serverside canvas api methods for file IO and buffers","*","*/","","module.exports = require('./server')",""],"l":{"12":1}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/server.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/server.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":1,"33":1,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":1,"61":0,"62":0,"63":0,"64":0,"65":1,"66":1,"67":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0,0,0,0],"5":[0,0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"checkParams","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":38}}},"2":{"name":"getTypeFromFilename","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":36}}},"3":{"name":"getRendererFromType","line":31,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":36}}},"4":{"name":"getStringRendererFromType","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":42}}},"5":{"name":"render","line":61,"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":43}}},"6":{"name":"toString","line":74,"loc":{"start":{"line":74,"column":19},"end":{"line":74,"column":54}}},"7":{"name":"toDataURL","line":81,"loc":{"start":{"line":81,"column":20},"end":{"line":81,"column":56}}},"8":{"name":"toFile","line":88,"loc":{"start":{"line":88,"column":17},"end":{"line":88,"column":56}}},"9":{"name":"toFileStream","line":101,"loc":{"start":{"line":101,"column":23},"end":{"line":101,"column":66}}},"10":{"name":"(anonymous_10)","line":106,"loc":{"start":{"line":106,"column":45},"end":{"line":106,"column":57}}},"11":{"name":"(anonymous_11)","line":116,"loc":{"start":{"line":116,"column":18},"end":{"line":116,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":37}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":43}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":45}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":53}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":43}},"6":{"start":{"line":7,"column":0},"end":{"line":25,"column":1}},"7":{"start":{"line":8,"column":2},"end":{"line":10,"column":3}},"8":{"start":{"line":9,"column":4},"end":{"line":9,"column":56}},"9":{"start":{"line":12,"column":2},"end":{"line":15,"column":3}},"10":{"start":{"line":13,"column":4},"end":{"line":13,"column":13}},"11":{"start":{"line":14,"column":4},"end":{"line":14,"column":13}},"12":{"start":{"line":17,"column":2},"end":{"line":19,"column":3}},"13":{"start":{"line":18,"column":4},"end":{"line":18,"column":57}},"14":{"start":{"line":21,"column":2},"end":{"line":24,"column":3}},"15":{"start":{"line":27,"column":0},"end":{"line":29,"column":1}},"16":{"start":{"line":28,"column":2},"end":{"line":28,"column":72}},"17":{"start":{"line":31,"column":0},"end":{"line":45,"column":1}},"18":{"start":{"line":32,"column":2},"end":{"line":44,"column":3}},"19":{"start":{"line":34,"column":6},"end":{"line":34,"column":24}},"20":{"start":{"line":38,"column":6},"end":{"line":38,"column":25}},"21":{"start":{"line":43,"column":6},"end":{"line":43,"column":24}},"22":{"start":{"line":47,"column":0},"end":{"line":59,"column":1}},"23":{"start":{"line":48,"column":2},"end":{"line":58,"column":3}},"24":{"start":{"line":50,"column":6},"end":{"line":50,"column":24}},"25":{"start":{"line":53,"column":6},"end":{"line":53,"column":29}},"26":{"start":{"line":57,"column":6},"end":{"line":57,"column":25}},"27":{"start":{"line":61,"column":0},"end":{"line":68,"column":1}},"28":{"start":{"line":62,"column":2},"end":{"line":67,"column":3}},"29":{"start":{"line":63,"column":4},"end":{"line":63,"column":47}},"30":{"start":{"line":64,"column":4},"end":{"line":64,"column":51}},"31":{"start":{"line":66,"column":4},"end":{"line":66,"column":16}},"32":{"start":{"line":70,"column":0},"end":{"line":70,"column":30}},"33":{"start":{"line":72,"column":0},"end":{"line":72,"column":48}},"34":{"start":{"line":74,"column":0},"end":{"line":79,"column":1}},"35":{"start":{"line":75,"column":2},"end":{"line":75,"column":42}},"36":{"start":{"line":76,"column":2},"end":{"line":76,"column":60}},"37":{"start":{"line":77,"column":2},"end":{"line":77,"column":52}},"38":{"start":{"line":78,"column":2},"end":{"line":78,"column":37}},"39":{"start":{"line":78,"column":14},"end":{"line":78,"column":37}},"40":{"start":{"line":81,"column":0},"end":{"line":86,"column":1}},"41":{"start":{"line":82,"column":2},"end":{"line":82,"column":42}},"42":{"start":{"line":83,"column":2},"end":{"line":83,"column":54}},"43":{"start":{"line":85,"column":2},"end":{"line":85,"column":48}},"44":{"start":{"line":88,"column":0},"end":{"line":99,"column":1}},"45":{"start":{"line":89,"column":2},"end":{"line":91,"column":3}},"46":{"start":{"line":90,"column":4},"end":{"line":90,"column":49}},"47":{"start":{"line":93,"column":2},"end":{"line":93,"column":42}},"48":{"start":{"line":94,"column":2},"end":{"line":94,"column":58}},"49":{"start":{"line":95,"column":2},"end":{"line":95,"column":42}},"50":{"start":{"line":96,"column":2},"end":{"line":96,"column":59}},"51":{"start":{"line":98,"column":2},"end":{"line":98,"column":36}},"52":{"start":{"line":101,"column":0},"end":{"line":110,"column":1}},"53":{"start":{"line":102,"column":2},"end":{"line":104,"column":3}},"54":{"start":{"line":103,"column":4},"end":{"line":103,"column":49}},"55":{"start":{"line":106,"column":2},"end":{"line":106,"column":60}},"56":{"start":{"line":107,"column":2},"end":{"line":107,"column":54}},"57":{"start":{"line":108,"column":2},"end":{"line":108,"column":73}},"58":{"start":{"line":109,"column":2},"end":{"line":109,"column":42}},"59":{"start":{"line":115,"column":0},"end":{"line":115,"column":35}},"60":{"start":{"line":116,"column":0},"end":{"line":121,"column":1}},"61":{"start":{"line":117,"column":2},"end":{"line":117,"column":22}},"62":{"start":{"line":117,"column":13},"end":{"line":117,"column":22}},"63":{"start":{"line":118,"column":2},"end":{"line":118,"column":19}},"64":{"start":{"line":120,"column":2},"end":{"line":120,"column":41}},"65":{"start":{"line":123,"column":0},"end":{"line":123,"column":44}},"66":{"start":{"line":124,"column":0},"end":{"line":124,"column":29}},"67":{"start":{"line":125,"column":0},"end":{"line":125,"column":37}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":2}},{"start":{"line":8,"column":2},"end":{"line":8,"column":2}}]},"2":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":2},"end":{"line":12,"column":2}},{"start":{"line":12,"column":2},"end":{"line":12,"column":2}}]},"3":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":2},"end":{"line":17,"column":2}},{"start":{"line":17,"column":2},"end":{"line":17,"column":2}}]},"4":{"line":32,"type":"switch","locations":[{"start":{"line":33,"column":4},"end":{"line":34,"column":24}},{"start":{"line":36,"column":4},"end":{"line":36,"column":15}},{"start":{"line":37,"column":4},"end":{"line":38,"column":25}},{"start":{"line":40,"column":4},"end":{"line":40,"column":15}},{"start":{"line":41,"column":4},"end":{"line":41,"column":21}},{"start":{"line":42,"column":4},"end":{"line":43,"column":24}}]},"5":{"line":48,"type":"switch","locations":[{"start":{"line":49,"column":4},"end":{"line":50,"column":24}},{"start":{"line":52,"column":4},"end":{"line":53,"column":29}},{"start":{"line":55,"column":4},"end":{"line":55,"column":16}},{"start":{"line":56,"column":4},"end":{"line":57,"column":25}}]},"6":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":2},"end":{"line":78,"column":2}},{"start":{"line":78,"column":2},"end":{"line":78,"column":2}}]},"7":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":2},"end":{"line":89,"column":2}},{"start":{"line":89,"column":2},"end":{"line":89,"column":2}}]},"8":{"line":94,"type":"binary-expr","locations":[{"start":{"line":94,"column":13},"end":{"line":94,"column":29}},{"start":{"line":94,"column":33},"end":{"line":94,"column":58}}]},"9":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":2},"end":{"line":102,"column":2}},{"start":{"line":102,"column":2},"end":{"line":102,"column":2}}]},"10":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":33},"end":{"line":106,"column":37}},{"start":{"line":106,"column":41},"end":{"line":106,"column":43}}]},"11":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":2},"end":{"line":117,"column":2}},{"start":{"line":117,"column":2},"end":{"line":117,"column":2}}]}},"code":["var QRCode = require('./core/qrcode')","var PngRenderer = require('./renderer/png')","var Utf8Renderer = require('./renderer/utf8')","var TerminalRenderer = require('./renderer/terminal')","var SvgRenderer = require('./renderer/svg')","","function checkParams (text, opts, cb) {","  if (typeof text === 'undefined') {","    throw new Error('String required as first argument')","  }","","  if (typeof cb === 'undefined') {","    cb = opts","    opts = {}","  }","","  if (typeof cb !== 'function') {","    throw new Error('Callback required as last argument')","  }","","  return {","    opts: opts,","    cb: cb","  }","}","","function getTypeFromFilename (path) {","  return path.slice((path.lastIndexOf('.') - 1 >>> 0) + 2).toLowerCase()","}","","function getRendererFromType (type) {","  switch (type) {","    case 'svg':","      return SvgRenderer","","    case 'txt':","    case 'utf8':","      return Utf8Renderer","","    case 'png':","    case 'image/png':","    default:","      return PngRenderer","  }","}","","function getStringRendererFromType (type) {","  switch (type) {","    case 'svg':","      return SvgRenderer","","    case 'terminal':","      return TerminalRenderer","","    case 'utf8':","    default:","      return Utf8Renderer","  }","}","","function render (renderFunc, text, params) {","  try {","    var data = QRCode.create(text, params.opts)","    return renderFunc(data, params.opts, params.cb)","  } catch (e) {","    params.cb(e)","  }","}","","exports.create = QRCode.create","","exports.toCanvas = require('./browser').toCanvas","","exports.toString = function toString (text, opts, cb) {","  var params = checkParams(text, opts, cb)","  var renderer = getStringRendererFromType(params.opts.type)","  var string = render(renderer.render, text, params)","  if (string) params.cb(null, string)","}","","exports.toDataURL = function toDataURL (text, opts, cb) {","  var params = checkParams(text, opts, cb)","  var renderer = getRendererFromType(params.opts.type)","","  render(renderer.renderToDataURL, text, params)","}","","exports.toFile = function toFile (path, text, opts, cb) {","  if (arguments.length < 3) {","    throw new Error('Too few arguments provided')","  }","","  var params = checkParams(text, opts, cb)","  var type = params.opts.type || getTypeFromFilename(path)","  var renderer = getRendererFromType(type)","  var renderToFile = renderer.renderToFile.bind(null, path)","","  render(renderToFile, text, params)","}","","exports.toFileStream = function toFileStream (stream, text, opts) {","  if (arguments.length < 2) {","    throw new Error('Too few arguments provided')","  }","","  var params = checkParams(text, opts || {}, function () {})","  var renderer = getRendererFromType(params.opts.type)","  var renderToFileStream = renderer.renderToFileStream.bind(null, stream)","  render(renderToFileStream, text, params)","}","","/**"," * Legacy API"," */","exports.drawText = exports.toString","exports.drawSvg = function (text, opts, cb) {","  if (!opts) opts = {}","  opts.type = 'svg'","","  return exports.toString(text, opts, cb)","}","","exports.drawPNGStream = exports.toFileStream","exports.save = exports.toFile","exports.toDataURI = exports.toDataURL",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"7":1,"8":0,"9":0,"12":0,"13":0,"14":0,"17":0,"18":0,"21":0,"27":1,"28":0,"31":1,"32":0,"34":0,"38":0,"43":0,"47":1,"48":0,"50":0,"53":0,"57":0,"61":1,"62":0,"63":0,"64":0,"66":0,"70":1,"72":1,"74":1,"75":0,"76":0,"77":0,"78":0,"81":1,"82":0,"83":0,"85":0,"88":1,"89":0,"90":0,"93":0,"94":0,"95":0,"96":0,"98":0,"101":1,"102":0,"103":0,"106":0,"107":0,"108":0,"109":0,"115":1,"116":1,"117":0,"118":0,"120":0,"123":1,"124":1,"125":1}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/qrcode.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/qrcode.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":1,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":1,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":1,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":1,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0,0,0,0,0,0,0,0,0],"7":[0,0],"8":[0,0,0,0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"setupFinderPattern","line":49,"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":46}}},"2":{"name":"setupTimingPattern","line":82,"loc":{"start":{"line":82,"column":0},"end":{"line":82,"column":37}}},"3":{"name":"setupAlignmentPattern","line":100,"loc":{"start":{"line":100,"column":0},"end":{"line":100,"column":49}}},"4":{"name":"setupVersionInfo","line":126,"loc":{"start":{"line":126,"column":0},"end":{"line":126,"column":44}}},"5":{"name":"setupFormatInfo","line":148,"loc":{"start":{"line":148,"column":0},"end":{"line":148,"column":69}}},"6":{"name":"setupData","line":185,"loc":{"start":{"line":185,"column":0},"end":{"line":185,"column":34}}},"7":{"name":"createData","line":233,"loc":{"start":{"line":233,"column":0},"end":{"line":233,"column":62}}},"8":{"name":"(anonymous_8)","line":237,"loc":{"start":{"line":237,"column":19},"end":{"line":237,"column":35}}},"9":{"name":"createCodewords","line":298,"loc":{"start":{"line":298,"column":0},"end":{"line":298,"column":68}}},"10":{"name":"createSymbol","line":379,"loc":{"start":{"line":379,"column":0},"end":{"line":379,"column":60}}},"11":{"name":"create","line":475,"loc":{"start":{"line":475,"column":17},"end":{"line":475,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":39}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":30}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":49}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":39}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":39}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":53}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":47}},"8":{"start":{"line":8,"column":0},"end":{"line":8,"column":43}},"9":{"start":{"line":9,"column":0},"end":{"line":9,"column":47}},"10":{"start":{"line":10,"column":0},"end":{"line":10,"column":58}},"11":{"start":{"line":11,"column":0},"end":{"line":11,"column":34}},"12":{"start":{"line":12,"column":0},"end":{"line":12,"column":41}},"13":{"start":{"line":13,"column":0},"end":{"line":13,"column":28}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":36}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":32}},"16":{"start":{"line":49,"column":0},"end":{"line":73,"column":1}},"17":{"start":{"line":50,"column":2},"end":{"line":50,"column":24}},"18":{"start":{"line":51,"column":2},"end":{"line":51,"column":47}},"19":{"start":{"line":53,"column":2},"end":{"line":72,"column":3}},"20":{"start":{"line":54,"column":4},"end":{"line":54,"column":23}},"21":{"start":{"line":55,"column":4},"end":{"line":55,"column":23}},"22":{"start":{"line":57,"column":4},"end":{"line":71,"column":5}},"23":{"start":{"line":58,"column":6},"end":{"line":58,"column":52}},"24":{"start":{"line":58,"column":44},"end":{"line":58,"column":52}},"25":{"start":{"line":60,"column":6},"end":{"line":70,"column":7}},"26":{"start":{"line":61,"column":8},"end":{"line":61,"column":54}},"27":{"start":{"line":61,"column":46},"end":{"line":61,"column":54}},"28":{"start":{"line":63,"column":8},"end":{"line":69,"column":9}},"29":{"start":{"line":66,"column":10},"end":{"line":66,"column":50}},"30":{"start":{"line":68,"column":10},"end":{"line":68,"column":51}},"31":{"start":{"line":82,"column":0},"end":{"line":90,"column":1}},"32":{"start":{"line":83,"column":2},"end":{"line":83,"column":24}},"33":{"start":{"line":85,"column":2},"end":{"line":89,"column":3}},"34":{"start":{"line":86,"column":4},"end":{"line":86,"column":27}},"35":{"start":{"line":87,"column":4},"end":{"line":87,"column":33}},"36":{"start":{"line":88,"column":4},"end":{"line":88,"column":33}},"37":{"start":{"line":100,"column":0},"end":{"line":118,"column":1}},"38":{"start":{"line":101,"column":2},"end":{"line":101,"column":50}},"39":{"start":{"line":103,"column":2},"end":{"line":117,"column":3}},"40":{"start":{"line":104,"column":4},"end":{"line":104,"column":23}},"41":{"start":{"line":105,"column":4},"end":{"line":105,"column":23}},"42":{"start":{"line":107,"column":4},"end":{"line":116,"column":5}},"43":{"start":{"line":108,"column":6},"end":{"line":115,"column":7}},"44":{"start":{"line":109,"column":8},"end":{"line":114,"column":9}},"45":{"start":{"line":111,"column":10},"end":{"line":111,"column":50}},"46":{"start":{"line":113,"column":10},"end":{"line":113,"column":51}},"47":{"start":{"line":126,"column":0},"end":{"line":139,"column":1}},"48":{"start":{"line":127,"column":2},"end":{"line":127,"column":24}},"49":{"start":{"line":128,"column":2},"end":{"line":128,"column":44}},"50":{"start":{"line":129,"column":2},"end":{"line":129,"column":19}},"51":{"start":{"line":131,"column":2},"end":{"line":138,"column":3}},"52":{"start":{"line":132,"column":4},"end":{"line":132,"column":27}},"53":{"start":{"line":133,"column":4},"end":{"line":133,"column":30}},"54":{"start":{"line":134,"column":4},"end":{"line":134,"column":33}},"55":{"start":{"line":136,"column":4},"end":{"line":136,"column":35}},"56":{"start":{"line":137,"column":4},"end":{"line":137,"column":35}},"57":{"start":{"line":148,"column":0},"end":{"line":177,"column":1}},"58":{"start":{"line":149,"column":2},"end":{"line":149,"column":24}},"59":{"start":{"line":150,"column":2},"end":{"line":150,"column":73}},"60":{"start":{"line":151,"column":2},"end":{"line":151,"column":12}},"61":{"start":{"line":153,"column":2},"end":{"line":173,"column":3}},"62":{"start":{"line":154,"column":4},"end":{"line":154,"column":33}},"63":{"start":{"line":157,"column":4},"end":{"line":163,"column":5}},"64":{"start":{"line":158,"column":6},"end":{"line":158,"column":33}},"65":{"start":{"line":159,"column":11},"end":{"line":163,"column":5}},"66":{"start":{"line":160,"column":6},"end":{"line":160,"column":37}},"67":{"start":{"line":162,"column":6},"end":{"line":162,"column":45}},"68":{"start":{"line":166,"column":4},"end":{"line":172,"column":5}},"69":{"start":{"line":167,"column":6},"end":{"line":167,"column":44}},"70":{"start":{"line":168,"column":11},"end":{"line":172,"column":5}},"71":{"start":{"line":169,"column":6},"end":{"line":169,"column":46}},"72":{"start":{"line":171,"column":6},"end":{"line":171,"column":42}},"73":{"start":{"line":176,"column":2},"end":{"line":176,"column":34}},"74":{"start":{"line":185,"column":0},"end":{"line":223,"column":1}},"75":{"start":{"line":186,"column":2},"end":{"line":186,"column":24}},"76":{"start":{"line":187,"column":2},"end":{"line":187,"column":14}},"77":{"start":{"line":188,"column":2},"end":{"line":188,"column":20}},"78":{"start":{"line":189,"column":2},"end":{"line":189,"column":18}},"79":{"start":{"line":190,"column":2},"end":{"line":190,"column":19}},"80":{"start":{"line":192,"column":2},"end":{"line":222,"column":3}},"81":{"start":{"line":193,"column":4},"end":{"line":193,"column":24}},"82":{"start":{"line":193,"column":19},"end":{"line":193,"column":24}},"83":{"start":{"line":195,"column":4},"end":{"line":221,"column":5}},"84":{"start":{"line":196,"column":6},"end":{"line":212,"column":7}},"85":{"start":{"line":197,"column":8},"end":{"line":211,"column":9}},"86":{"start":{"line":198,"column":10},"end":{"line":198,"column":26}},"87":{"start":{"line":200,"column":10},"end":{"line":202,"column":11}},"88":{"start":{"line":201,"column":12},"end":{"line":201,"column":63}},"89":{"start":{"line":204,"column":10},"end":{"line":204,"column":40}},"90":{"start":{"line":205,"column":10},"end":{"line":205,"column":20}},"91":{"start":{"line":207,"column":10},"end":{"line":210,"column":11}},"92":{"start":{"line":208,"column":12},"end":{"line":208,"column":23}},"93":{"start":{"line":209,"column":12},"end":{"line":209,"column":24}},"94":{"start":{"line":214,"column":6},"end":{"line":214,"column":16}},"95":{"start":{"line":216,"column":6},"end":{"line":220,"column":7}},"96":{"start":{"line":217,"column":8},"end":{"line":217,"column":18}},"97":{"start":{"line":218,"column":8},"end":{"line":218,"column":18}},"98":{"start":{"line":219,"column":8},"end":{"line":219,"column":13}},"99":{"start":{"line":233,"column":0},"end":{"line":287,"column":1}},"100":{"start":{"line":235,"column":2},"end":{"line":235,"column":30}},"101":{"start":{"line":237,"column":2},"end":{"line":252,"column":4}},"102":{"start":{"line":239,"column":4},"end":{"line":239,"column":32}},"103":{"start":{"line":248,"column":4},"end":{"line":248,"column":80}},"104":{"start":{"line":251,"column":4},"end":{"line":251,"column":22}},"105":{"start":{"line":255,"column":2},"end":{"line":255,"column":61}},"106":{"start":{"line":256,"column":2},"end":{"line":256,"column":85}},"107":{"start":{"line":257,"column":2},"end":{"line":257,"column":70}},"108":{"start":{"line":264,"column":2},"end":{"line":266,"column":3}},"109":{"start":{"line":265,"column":4},"end":{"line":265,"column":20}},"110":{"start":{"line":273,"column":2},"end":{"line":275,"column":3}},"111":{"start":{"line":274,"column":4},"end":{"line":274,"column":20}},"112":{"start":{"line":281,"column":2},"end":{"line":281,"column":77}},"113":{"start":{"line":282,"column":2},"end":{"line":284,"column":3}},"114":{"start":{"line":283,"column":4},"end":{"line":283,"column":38}},"115":{"start":{"line":286,"column":2},"end":{"line":286,"column":63}},"116":{"start":{"line":298,"column":0},"end":{"line":369,"column":1}},"117":{"start":{"line":300,"column":2},"end":{"line":300,"column":61}},"118":{"start":{"line":303,"column":2},"end":{"line":303,"column":85}},"119":{"start":{"line":306,"column":2},"end":{"line":306,"column":60}},"120":{"start":{"line":309,"column":2},"end":{"line":309,"column":74}},"121":{"start":{"line":312,"column":2},"end":{"line":312,"column":53}},"122":{"start":{"line":313,"column":2},"end":{"line":313,"column":53}},"123":{"start":{"line":315,"column":2},"end":{"line":315,"column":73}},"124":{"start":{"line":317,"column":2},"end":{"line":317,"column":76}},"125":{"start":{"line":318,"column":2},"end":{"line":318,"column":55}},"126":{"start":{"line":321,"column":2},"end":{"line":321,"column":62}},"127":{"start":{"line":324,"column":2},"end":{"line":324,"column":42}},"128":{"start":{"line":326,"column":2},"end":{"line":326,"column":16}},"129":{"start":{"line":327,"column":2},"end":{"line":327,"column":39}},"130":{"start":{"line":328,"column":2},"end":{"line":328,"column":39}},"131":{"start":{"line":329,"column":2},"end":{"line":329,"column":21}},"132":{"start":{"line":330,"column":2},"end":{"line":330,"column":43}},"133":{"start":{"line":333,"column":2},"end":{"line":344,"column":3}},"134":{"start":{"line":334,"column":4},"end":{"line":334,"column":85}},"135":{"start":{"line":337,"column":4},"end":{"line":337,"column":55}},"136":{"start":{"line":340,"column":4},"end":{"line":340,"column":36}},"137":{"start":{"line":342,"column":4},"end":{"line":342,"column":22}},"138":{"start":{"line":343,"column":4},"end":{"line":343,"column":49}},"139":{"start":{"line":348,"column":2},"end":{"line":348,"column":39}},"140":{"start":{"line":349,"column":2},"end":{"line":349,"column":15}},"141":{"start":{"line":350,"column":2},"end":{"line":350,"column":10}},"142":{"start":{"line":353,"column":2},"end":{"line":359,"column":3}},"143":{"start":{"line":354,"column":4},"end":{"line":358,"column":5}},"144":{"start":{"line":355,"column":6},"end":{"line":357,"column":7}},"145":{"start":{"line":356,"column":8},"end":{"line":356,"column":36}},"146":{"start":{"line":362,"column":2},"end":{"line":366,"column":3}},"147":{"start":{"line":363,"column":4},"end":{"line":365,"column":5}},"148":{"start":{"line":364,"column":6},"end":{"line":364,"column":34}},"149":{"start":{"line":368,"column":2},"end":{"line":368,"column":13}},"150":{"start":{"line":379,"column":0},"end":{"line":464,"column":1}},"151":{"start":{"line":380,"column":2},"end":{"line":380,"column":14}},"152":{"start":{"line":382,"column":2},"end":{"line":400,"column":3}},"153":{"start":{"line":383,"column":4},"end":{"line":383,"column":39}},"154":{"start":{"line":384,"column":9},"end":{"line":400,"column":3}},"155":{"start":{"line":385,"column":4},"end":{"line":385,"column":34}},"156":{"start":{"line":387,"column":4},"end":{"line":393,"column":5}},"157":{"start":{"line":388,"column":6},"end":{"line":388,"column":47}},"158":{"start":{"line":391,"column":6},"end":{"line":392,"column":29}},"159":{"start":{"line":397,"column":4},"end":{"line":397,"column":58}},"160":{"start":{"line":399,"column":4},"end":{"line":399,"column":35}},"161":{"start":{"line":403,"column":2},"end":{"line":404,"column":27}},"162":{"start":{"line":407,"column":2},"end":{"line":409,"column":3}},"163":{"start":{"line":408,"column":4},"end":{"line":408,"column":78}},"164":{"start":{"line":412,"column":2},"end":{"line":421,"column":3}},"165":{"start":{"line":413,"column":4},"end":{"line":413,"column":25}},"166":{"start":{"line":416,"column":9},"end":{"line":421,"column":3}},"167":{"start":{"line":417,"column":4},"end":{"line":420,"column":5}},"168":{"start":{"line":423,"column":2},"end":{"line":423,"column":68}},"169":{"start":{"line":426,"column":2},"end":{"line":426,"column":48}},"170":{"start":{"line":427,"column":2},"end":{"line":427,"column":42}},"171":{"start":{"line":430,"column":2},"end":{"line":430,"column":38}},"172":{"start":{"line":431,"column":2},"end":{"line":431,"column":29}},"173":{"start":{"line":432,"column":2},"end":{"line":432,"column":41}},"174":{"start":{"line":438,"column":2},"end":{"line":438,"column":51}},"175":{"start":{"line":440,"column":2},"end":{"line":442,"column":3}},"176":{"start":{"line":441,"column":4},"end":{"line":441,"column":38}},"177":{"start":{"line":445,"column":2},"end":{"line":445,"column":30}},"178":{"start":{"line":448,"column":2},"end":{"line":449,"column":62}},"179":{"start":{"line":452,"column":2},"end":{"line":452,"column":45}},"180":{"start":{"line":455,"column":2},"end":{"line":455,"column":61}},"181":{"start":{"line":457,"column":2},"end":{"line":463,"column":3}},"182":{"start":{"line":475,"column":0},"end":{"line":494,"column":1}},"183":{"start":{"line":476,"column":2},"end":{"line":478,"column":3}},"184":{"start":{"line":477,"column":4},"end":{"line":477,"column":36}},"185":{"start":{"line":480,"column":2},"end":{"line":480,"column":38}},"186":{"start":{"line":481,"column":2},"end":{"line":481,"column":13}},"187":{"start":{"line":483,"column":2},"end":{"line":491,"column":3}},"188":{"start":{"line":485,"column":4},"end":{"line":485,"column":80}},"189":{"start":{"line":486,"column":4},"end":{"line":486,"column":43}},"190":{"start":{"line":488,"column":4},"end":{"line":490,"column":5}},"191":{"start":{"line":489,"column":6},"end":{"line":489,"column":49}},"192":{"start":{"line":493,"column":2},"end":{"line":493,"column":58}}},"branchMap":{"1":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":6},"end":{"line":58,"column":6}},{"start":{"line":58,"column":6},"end":{"line":58,"column":6}}]},"2":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":10},"end":{"line":58,"column":23}},{"start":{"line":58,"column":27},"end":{"line":58,"column":42}}]},"3":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":8},"end":{"line":61,"column":8}},{"start":{"line":61,"column":8},"end":{"line":61,"column":8}}]},"4":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":12},"end":{"line":61,"column":25}},{"start":{"line":61,"column":29},"end":{"line":61,"column":44}}]},"5":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":63,"column":8}},{"start":{"line":63,"column":8},"end":{"line":63,"column":8}}]},"6":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":13},"end":{"line":63,"column":19}},{"start":{"line":63,"column":23},"end":{"line":63,"column":29}},{"start":{"line":63,"column":34},"end":{"line":63,"column":41}},{"start":{"line":63,"column":45},"end":{"line":63,"column":52}},{"start":{"line":64,"column":11},"end":{"line":64,"column":17}},{"start":{"line":64,"column":21},"end":{"line":64,"column":27}},{"start":{"line":64,"column":32},"end":{"line":64,"column":39}},{"start":{"line":64,"column":43},"end":{"line":64,"column":50}},{"start":{"line":65,"column":11},"end":{"line":65,"column":17}},{"start":{"line":65,"column":21},"end":{"line":65,"column":27}},{"start":{"line":65,"column":31},"end":{"line":65,"column":37}},{"start":{"line":65,"column":41},"end":{"line":65,"column":47}}]},"7":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":8},"end":{"line":109,"column":8}},{"start":{"line":109,"column":8},"end":{"line":109,"column":8}}]},"8":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":12},"end":{"line":109,"column":20}},{"start":{"line":109,"column":24},"end":{"line":109,"column":31}},{"start":{"line":109,"column":35},"end":{"line":109,"column":43}},{"start":{"line":109,"column":47},"end":{"line":109,"column":54}},{"start":{"line":110,"column":11},"end":{"line":110,"column":18}},{"start":{"line":110,"column":22},"end":{"line":110,"column":29}}]},"9":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":4},"end":{"line":157,"column":4}},{"start":{"line":157,"column":4},"end":{"line":157,"column":4}}]},"10":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":11},"end":{"line":159,"column":11}},{"start":{"line":159,"column":11},"end":{"line":159,"column":11}}]},"11":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":4},"end":{"line":166,"column":4}},{"start":{"line":166,"column":4},"end":{"line":166,"column":4}}]},"12":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":11},"end":{"line":168,"column":11}},{"start":{"line":168,"column":11},"end":{"line":168,"column":11}}]},"13":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":4},"end":{"line":193,"column":4}},{"start":{"line":193,"column":4},"end":{"line":193,"column":4}}]},"14":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":8},"end":{"line":197,"column":8}},{"start":{"line":197,"column":8},"end":{"line":197,"column":8}}]},"15":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":10},"end":{"line":200,"column":10}},{"start":{"line":200,"column":10},"end":{"line":200,"column":10}}]},"16":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":10},"end":{"line":207,"column":10}},{"start":{"line":207,"column":10},"end":{"line":207,"column":10}}]},"17":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":6},"end":{"line":216,"column":6}},{"start":{"line":216,"column":6},"end":{"line":216,"column":6}}]},"18":{"line":216,"type":"binary-expr","locations":[{"start":{"line":216,"column":10},"end":{"line":216,"column":17}},{"start":{"line":216,"column":21},"end":{"line":216,"column":32}}]},"19":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":2},"end":{"line":264,"column":2}},{"start":{"line":264,"column":2},"end":{"line":264,"column":2}}]},"20":{"line":283,"type":"cond-expr","locations":[{"start":{"line":283,"column":23},"end":{"line":283,"column":27}},{"start":{"line":283,"column":30},"end":{"line":283,"column":34}}]},"21":{"line":334,"type":"cond-expr","locations":[{"start":{"line":334,"column":40},"end":{"line":334,"column":61}},{"start":{"line":334,"column":64},"end":{"line":334,"column":85}}]},"22":{"line":355,"type":"if","locations":[{"start":{"line":355,"column":6},"end":{"line":355,"column":6}},{"start":{"line":355,"column":6},"end":{"line":355,"column":6}}]},"23":{"line":382,"type":"if","locations":[{"start":{"line":382,"column":2},"end":{"line":382,"column":2}},{"start":{"line":382,"column":2},"end":{"line":382,"column":2}}]},"24":{"line":384,"type":"if","locations":[{"start":{"line":384,"column":9},"end":{"line":384,"column":9}},{"start":{"line":384,"column":9},"end":{"line":384,"column":9}}]},"25":{"line":387,"type":"if","locations":[{"start":{"line":387,"column":4},"end":{"line":387,"column":4}},{"start":{"line":387,"column":4},"end":{"line":387,"column":4}}]},"26":{"line":407,"type":"if","locations":[{"start":{"line":407,"column":2},"end":{"line":407,"column":2}},{"start":{"line":407,"column":2},"end":{"line":407,"column":2}}]},"27":{"line":412,"type":"if","locations":[{"start":{"line":412,"column":2},"end":{"line":412,"column":2}},{"start":{"line":412,"column":2},"end":{"line":412,"column":2}}]},"28":{"line":416,"type":"if","locations":[{"start":{"line":416,"column":9},"end":{"line":416,"column":9}},{"start":{"line":416,"column":9},"end":{"line":416,"column":9}}]},"29":{"line":440,"type":"if","locations":[{"start":{"line":440,"column":2},"end":{"line":440,"column":2}},{"start":{"line":440,"column":2},"end":{"line":440,"column":2}}]},"30":{"line":476,"type":"if","locations":[{"start":{"line":476,"column":2},"end":{"line":476,"column":2}},{"start":{"line":476,"column":2},"end":{"line":476,"column":2}}]},"31":{"line":476,"type":"binary-expr","locations":[{"start":{"line":476,"column":6},"end":{"line":476,"column":33}},{"start":{"line":476,"column":37},"end":{"line":476,"column":48}}]},"32":{"line":483,"type":"if","locations":[{"start":{"line":483,"column":2},"end":{"line":483,"column":2}},{"start":{"line":483,"column":2},"end":{"line":483,"column":2}}]},"33":{"line":488,"type":"if","locations":[{"start":{"line":488,"column":4},"end":{"line":488,"column":4}},{"start":{"line":488,"column":4},"end":{"line":488,"column":4}}]}},"code":["var Buffer = require('../utils/buffer')","var Utils = require('./utils')","var ECLevel = require('./error-correction-level')","var BitBuffer = require('./bit-buffer')","var BitMatrix = require('./bit-matrix')","var AlignmentPattern = require('./alignment-pattern')","var FinderPattern = require('./finder-pattern')","var MaskPattern = require('./mask-pattern')","var ECCode = require('./error-correction-code')","var ReedSolomonEncoder = require('./reed-solomon-encoder')","var Version = require('./version')","var FormatInfo = require('./format-info')","var Mode = require('./mode')","var Segments = require('./segments')","var isArray = require('isarray')","","/**"," * QRCode for JavaScript"," *"," * modified by Ryan Day for nodejs support"," * Copyright (c) 2011 Ryan Day"," *"," * Licensed under the MIT license:"," *   http://www.opensource.org/licenses/mit-license.php"," *","//---------------------------------------------------------------------","// QRCode for JavaScript","//","// Copyright (c) 2009 Kazuhiko Arase","//","// URL: http://www.d-project.com/","//","// Licensed under the MIT license:","//   http://www.opensource.org/licenses/mit-license.php","//","// The word \"QR Code\" is registered trademark of","// DENSO WAVE INCORPORATED","//   http://www.denso-wave.com/qrcode/faqpatent-e.html","//","//---------------------------------------------------------------------","*/","","/**"," * Add finder patterns bits to matrix"," *"," * @param  {BitMatrix} matrix  Modules matrix"," * @param  {Number}    version QR Code version"," */","function setupFinderPattern (matrix, version) {","  var size = matrix.size","  var pos = FinderPattern.getPositions(version)","","  for (var i = 0; i < pos.length; i++) {","    var row = pos[i][0]","    var col = pos[i][1]","","    for (var r = -1; r <= 7; r++) {","      if (row + r <= -1 || size <= row + r) continue","","      for (var c = -1; c <= 7; c++) {","        if (col + c <= -1 || size <= col + c) continue","","        if ((r >= 0 && r <= 6 && (c === 0 || c === 6)) ||","          (c >= 0 && c <= 6 && (r === 0 || r === 6)) ||","          (r >= 2 && r <= 4 && c >= 2 && c <= 4)) {","          matrix.set(row + r, col + c, true, true)","        } else {","          matrix.set(row + r, col + c, false, true)","        }","      }","    }","  }","}","","/**"," * Add timing pattern bits to matrix"," *"," * Note: this function must be called before {@link setupAlignmentPattern}"," *"," * @param  {BitMatrix} matrix Modules matrix"," */","function setupTimingPattern (matrix) {","  var size = matrix.size","","  for (var r = 8; r < size - 8; r++) {","    var value = r % 2 === 0","    matrix.set(r, 6, value, true)","    matrix.set(6, r, value, true)","  }","}","","/**"," * Add alignment patterns bits to matrix"," *"," * Note: this function must be called after {@link setupTimingPattern}"," *"," * @param  {BitMatrix} matrix  Modules matrix"," * @param  {Number}    version QR Code version"," */","function setupAlignmentPattern (matrix, version) {","  var pos = AlignmentPattern.getPositions(version)","","  for (var i = 0; i < pos.length; i++) {","    var row = pos[i][0]","    var col = pos[i][1]","","    for (var r = -2; r <= 2; r++) {","      for (var c = -2; c <= 2; c++) {","        if (r === -2 || r === 2 || c === -2 || c === 2 ||","          (r === 0 && c === 0)) {","          matrix.set(row + r, col + c, true, true)","        } else {","          matrix.set(row + r, col + c, false, true)","        }","      }","    }","  }","}","","/**"," * Add version info bits to matrix"," *"," * @param  {BitMatrix} matrix  Modules matrix"," * @param  {Number}    version QR Code version"," */","function setupVersionInfo (matrix, version) {","  var size = matrix.size","  var bits = Version.getEncodedBits(version)","  var row, col, mod","","  for (var i = 0; i < 18; i++) {","    row = Math.floor(i / 3)","    col = i % 3 + size - 8 - 3","    mod = ((bits >> i) & 1) === 1","","    matrix.set(row, col, mod, true)","    matrix.set(col, row, mod, true)","  }","}","","/**"," * Add format info bits to matrix"," *"," * @param  {BitMatrix} matrix               Modules matrix"," * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level"," * @param  {Number}    maskPattern          Mask pattern reference value"," */","function setupFormatInfo (matrix, errorCorrectionLevel, maskPattern) {","  var size = matrix.size","  var bits = FormatInfo.getEncodedBits(errorCorrectionLevel, maskPattern)","  var i, mod","","  for (i = 0; i < 15; i++) {","    mod = ((bits >> i) & 1) === 1","","    // vertical","    if (i < 6) {","      matrix.set(i, 8, mod, true)","    } else if (i < 8) {","      matrix.set(i + 1, 8, mod, true)","    } else {","      matrix.set(size - 15 + i, 8, mod, true)","    }","","    // horizontal","    if (i < 8) {","      matrix.set(8, size - i - 1, mod, true)","    } else if (i < 9) {","      matrix.set(8, 15 - i - 1 + 1, mod, true)","    } else {","      matrix.set(8, 15 - i - 1, mod, true)","    }","  }","","  // fixed module","  matrix.set(size - 8, 8, 1, true)","}","","/**"," * Add encoded data bits to matrix"," *"," * @param  {BitMatrix} matrix Modules matrix"," * @param  {Buffer}    data   Data codewords"," */","function setupData (matrix, data) {","  var size = matrix.size","  var inc = -1","  var row = size - 1","  var bitIndex = 7","  var byteIndex = 0","","  for (var col = size - 1; col > 0; col -= 2) {","    if (col === 6) col--","","    while (true) {","      for (var c = 0; c < 2; c++) {","        if (!matrix.isReserved(row, col - c)) {","          var dark = false","","          if (byteIndex < data.length) {","            dark = (((data[byteIndex] >>> bitIndex) & 1) === 1)","          }","","          matrix.set(row, col - c, dark)","          bitIndex--","","          if (bitIndex === -1) {","            byteIndex++","            bitIndex = 7","          }","        }","      }","","      row += inc","","      if (row < 0 || size <= row) {","        row -= inc","        inc = -inc","        break","      }","    }","  }","}","","/**"," * Create encoded codewords from data input"," *"," * @param  {Number}   version              QR Code version"," * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level"," * @param  {ByteData} data                 Data input"," * @return {Buffer}                        Buffer containing encoded codewords"," */","function createData (version, errorCorrectionLevel, segments) {","  // Prepare data buffer","  var buffer = new BitBuffer()","","  segments.forEach(function (data) {","    // prefix data with mode indicator (4 bits)","    buffer.put(data.mode.bit, 4)","","    // Prefix data with character count indicator.","    // The character count indicator is a string of bits that represents the","    // number of characters that are being encoded.","    // The character count indicator must be placed after the mode indicator","    // and must be a certain number of bits long, depending on the QR version","    // and data mode","    // @see {@link Mode.getCharCountIndicator}.","    buffer.put(data.getLength(), Mode.getCharCountIndicator(data.mode, version))","","    // add binary data sequence to buffer","    data.write(buffer)","  })","","  // Calculate required number of bits","  var totalCodewords = Utils.getSymbolTotalCodewords(version)","  var ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)","  var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8","","  // Add a terminator.","  // If the bit string is shorter than the total number of required bits,","  // a terminator of up to four 0s must be added to the right side of the string.","  // If the bit string is more than four bits shorter than the required number of bits,","  // add four 0s to the end.","  if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {","    buffer.put(0, 4)","  }","","  // If the bit string is fewer than four bits shorter, add only the number of 0s that","  // are needed to reach the required number of bits.","","  // After adding the terminator, if the number of bits in the string is not a multiple of 8,","  // pad the string on the right with 0s to make the string's length a multiple of 8.","  while (buffer.getLengthInBits() % 8 !== 0) {","    buffer.putBit(0)","  }","","  // Add pad bytes if the string is still shorter than the total number of required bits.","  // Extend the buffer to fill the data capacity of the symbol corresponding to","  // the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)","  // and 00010001 (0x11) alternately.","  var remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8","  for (var i = 0; i < remainingByte; i++) {","    buffer.put(i % 2 ? 0x11 : 0xEC, 8)","  }","","  return createCodewords(buffer, version, errorCorrectionLevel)","}","","/**"," * Encode input data with Reed-Solomon and return codewords with"," * relative error correction bits"," *"," * @param  {BitBuffer} bitBuffer            Data to encode"," * @param  {Number}    version              QR Code version"," * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level"," * @return {Buffer}                         Buffer containing encoded codewords"," */","function createCodewords (bitBuffer, version, errorCorrectionLevel) {","  // Total codewords for this QR code version (Data + Error correction)","  var totalCodewords = Utils.getSymbolTotalCodewords(version)","","  // Total number of error correction codewords","  var ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)","","  // Total number of data codewords","  var dataTotalCodewords = totalCodewords - ecTotalCodewords","","  // Total number of blocks","  var ecTotalBlocks = ECCode.getBlocksCount(version, errorCorrectionLevel)","","  // Calculate how many blocks each group should contain","  var blocksInGroup2 = totalCodewords % ecTotalBlocks","  var blocksInGroup1 = ecTotalBlocks - blocksInGroup2","","  var totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks)","","  var dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks)","  var dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1","","  // Number of EC codewords is the same for both groups","  var ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1","","  // Initialize a Reed-Solomon encoder with a generator polynomial of degree ecCount","  var rs = new ReedSolomonEncoder(ecCount)","","  var offset = 0","  var dcData = new Array(ecTotalBlocks)","  var ecData = new Array(ecTotalBlocks)","  var maxDataSize = 0","  var buffer = new Buffer(bitBuffer.buffer)","","  // Divide the buffer into the required number of blocks","  for (var b = 0; b < ecTotalBlocks; b++) {","    var dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2","","    // extract a block of data from buffer","    dcData[b] = buffer.slice(offset, offset + dataSize)","","    // Calculate EC codewords for this data block","    ecData[b] = rs.encode(dcData[b])","","    offset += dataSize","    maxDataSize = Math.max(maxDataSize, dataSize)","  }","","  // Create final data","  // Interleave the data and error correction codewords from each block","  var data = new Buffer(totalCodewords)","  var index = 0","  var i, r","","  // Add data codewords","  for (i = 0; i < maxDataSize; i++) {","    for (r = 0; r < ecTotalBlocks; r++) {","      if (i < dcData[r].length) {","        data[index++] = dcData[r][i]","      }","    }","  }","","  // Apped EC codewords","  for (i = 0; i < ecCount; i++) {","    for (r = 0; r < ecTotalBlocks; r++) {","      data[index++] = ecData[r][i]","    }","  }","","  return data","}","","/**"," * Build QR Code symbol"," *"," * @param  {String} data                 Input string"," * @param  {Number} version              QR Code version"," * @param  {ErrorCorretionLevel} errorCorrectionLevel Error level"," * @return {Object}                      Object containing symbol data"," */","function createSymbol (data, version, errorCorrectionLevel) {","  var segments","","  if (isArray(data)) {","    segments = Segments.fromArray(data)","  } else if (typeof data === 'string') {","    var estimatedVersion = version","","    if (!estimatedVersion) {","      var rawSegments = Segments.rawSplit(data)","","      // Estimate best version that can contain raw splitted segments","      estimatedVersion = Version.getBestVersionForData(rawSegments,","        errorCorrectionLevel)","    }","","    // Build optimized segments","    // If estimated version is undefined, try with the highest version","    segments = Segments.fromString(data, estimatedVersion)","  } else {","    throw new Error('Invalid data')","  }","","  // Get the min version that can contain data","  var bestVersion = Version.getBestVersionForData(segments,","      errorCorrectionLevel)","","  // If no version is found, data cannot be stored","  if (!bestVersion) {","    throw new Error('The amount of data is too big to be stored in a QR Code')","  }","","  // If not specified, use min version as default","  if (!version) {","    version = bestVersion","","  // Check if the specified version can contain the data","  } else if (version < bestVersion) {","    throw new Error('\\n' +","      'The chosen QR Code version cannot contain this amount of data.\\n' +","      'Minimum version required to store current data is: ' + bestVersion + '.\\n'","    )","  }","","  var dataBits = createData(version, errorCorrectionLevel, segments)","","  // Allocate matrix buffer","  var moduleCount = Utils.getSymbolSize(version)","  var modules = new BitMatrix(moduleCount)","","  // Add function modules","  setupFinderPattern(modules, version)","  setupTimingPattern(modules)","  setupAlignmentPattern(modules, version)","","  // Add temporary dummy bits for format info just to set them as reserved.","  // This is needed to prevent these bits from being masked by {@link MaskPattern.applyMask}","  // since the masking operation must be performed only on the encoding region.","  // These blocks will be replaced with correct values later in code.","  setupFormatInfo(modules, errorCorrectionLevel, 0)","","  if (version >= 7) {","    setupVersionInfo(modules, version)","  }","","  // Add data codewords","  setupData(modules, dataBits)","","  // Find best mask pattern","  var maskPattern = MaskPattern.getBestMask(modules,","    setupFormatInfo.bind(null, modules, errorCorrectionLevel))","","  // Apply mask pattern","  MaskPattern.applyMask(maskPattern, modules)","","  // Replace format info bits with correct values","  setupFormatInfo(modules, errorCorrectionLevel, maskPattern)","","  return {","    modules: modules,","    version: version,","    errorCorrectionLevel: errorCorrectionLevel,","    maskPattern: maskPattern,","    segments: segments","  }","}","","/**"," * QR Code"," *"," * @param {String | Array} data                 Input data"," * @param {Object} options                      Optional configurations"," * @param {Number} options.version              QR Code version"," * @param {String} options.errorCorrectionLevel Error correction level"," * @param {Function} options.toSJISFunc         Helper func to convert utf8 to sjis"," */","exports.create = function create (data, options) {","  if (typeof data === 'undefined' || data === '') {","    throw new Error('No input text')","  }","","  var errorCorrectionLevel = ECLevel.M","  var version","","  if (typeof options !== 'undefined') {","    // Use higher error correction level as default","    errorCorrectionLevel = ECLevel.from(options.errorCorrectionLevel, ECLevel.M)","    version = Version.from(options.version)","","    if (options.toSJISFunc) {","      Utils.setToSJISFunction(options.toSJISFunc)","    }","  }","","  return createSymbol(data, version, errorCorrectionLevel)","}",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"49":1,"50":0,"51":0,"53":0,"54":0,"55":0,"57":0,"58":0,"60":0,"61":0,"63":0,"66":0,"68":0,"82":1,"83":0,"85":0,"86":0,"87":0,"88":0,"100":1,"101":0,"103":0,"104":0,"105":0,"107":0,"108":0,"109":0,"111":0,"113":0,"126":1,"127":0,"128":0,"129":0,"131":0,"132":0,"133":0,"134":0,"136":0,"137":0,"148":1,"149":0,"150":0,"151":0,"153":0,"154":0,"157":0,"158":0,"159":0,"160":0,"162":0,"166":0,"167":0,"168":0,"169":0,"171":0,"176":0,"185":1,"186":0,"187":0,"188":0,"189":0,"190":0,"192":0,"193":0,"195":0,"196":0,"197":0,"198":0,"200":0,"201":0,"204":0,"205":0,"207":0,"208":0,"209":0,"214":0,"216":0,"217":0,"218":0,"219":0,"233":1,"235":0,"237":0,"239":0,"248":0,"251":0,"255":0,"256":0,"257":0,"264":0,"265":0,"273":0,"274":0,"281":0,"282":0,"283":0,"286":0,"298":1,"300":0,"303":0,"306":0,"309":0,"312":0,"313":0,"315":0,"317":0,"318":0,"321":0,"324":0,"326":0,"327":0,"328":0,"329":0,"330":0,"333":0,"334":0,"337":0,"340":0,"342":0,"343":0,"348":0,"349":0,"350":0,"353":0,"354":0,"355":0,"356":0,"362":0,"363":0,"364":0,"368":0,"379":1,"380":0,"382":0,"383":0,"384":0,"385":0,"387":0,"388":0,"391":0,"397":0,"399":0,"403":0,"407":0,"408":0,"412":0,"413":0,"416":0,"417":0,"423":0,"426":0,"427":0,"430":0,"431":0,"432":0,"438":0,"440":0,"441":0,"445":0,"448":0,"452":0,"455":0,"457":0,"475":1,"476":0,"477":0,"480":0,"481":0,"483":0,"485":0,"486":0,"488":0,"489":0,"493":0}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/utils/buffer.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/utils/buffer.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":41}}},"branchMap":{},"code":["module.exports = require('buffer').Buffer",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/utils.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":1,"12":2,"13":2,"14":24,"15":24,"16":2,"17":1,"18":0,"19":0,"20":0,"21":1,"22":0,"23":1,"24":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":2,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"getSymbolSize","line":16,"loc":{"start":{"line":16,"column":24},"end":{"line":16,"column":57}}},"2":{"name":"getSymbolTotalCodewords","line":28,"loc":{"start":{"line":28,"column":34},"end":{"line":28,"column":77}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":22},"end":{"line":38,"column":38}}},"4":{"name":"setToSJISFunction","line":49,"loc":{"start":{"line":49,"column":28},"end":{"line":49,"column":59}}},"5":{"name":"(anonymous_5)","line":57,"loc":{"start":{"line":57,"column":29},"end":{"line":57,"column":41}}},"6":{"name":"toSJIS","line":61,"loc":{"start":{"line":61,"column":17},"end":{"line":61,"column":41}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":18}},"2":{"start":{"line":2,"column":0},"end":{"line":8,"column":1}},"3":{"start":{"line":16,"column":0},"end":{"line":20,"column":1}},"4":{"start":{"line":17,"column":2},"end":{"line":17,"column":72}},"5":{"start":{"line":17,"column":16},"end":{"line":17,"column":72}},"6":{"start":{"line":18,"column":2},"end":{"line":18,"column":95}},"7":{"start":{"line":18,"column":35},"end":{"line":18,"column":95}},"8":{"start":{"line":19,"column":2},"end":{"line":19,"column":25}},"9":{"start":{"line":28,"column":0},"end":{"line":30,"column":1}},"10":{"start":{"line":29,"column":2},"end":{"line":29,"column":33}},"11":{"start":{"line":38,"column":0},"end":{"line":47,"column":1}},"12":{"start":{"line":39,"column":2},"end":{"line":39,"column":15}},"13":{"start":{"line":41,"column":2},"end":{"line":44,"column":3}},"14":{"start":{"line":42,"column":4},"end":{"line":42,"column":11}},"15":{"start":{"line":43,"column":4},"end":{"line":43,"column":15}},"16":{"start":{"line":46,"column":2},"end":{"line":46,"column":14}},"17":{"start":{"line":49,"column":0},"end":{"line":55,"column":1}},"18":{"start":{"line":50,"column":2},"end":{"line":52,"column":3}},"19":{"start":{"line":51,"column":4},"end":{"line":51,"column":60}},"20":{"start":{"line":54,"column":2},"end":{"line":54,"column":20}},"21":{"start":{"line":57,"column":0},"end":{"line":59,"column":1}},"22":{"start":{"line":58,"column":2},"end":{"line":58,"column":46}},"23":{"start":{"line":61,"column":0},"end":{"line":63,"column":1}},"24":{"start":{"line":62,"column":2},"end":{"line":62,"column":30}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":2},"end":{"line":17,"column":2}},{"start":{"line":17,"column":2},"end":{"line":17,"column":2}}]},"2":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":18,"column":2}},{"start":{"line":18,"column":2},"end":{"line":18,"column":2}}]},"3":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":6},"end":{"line":18,"column":17}},{"start":{"line":18,"column":21},"end":{"line":18,"column":33}}]},"4":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]}},"code":["var toSJISFunction","var CODEWORDS_COUNT = [","  0, // Not used","  26, 44, 70, 100, 134, 172, 196, 242, 292, 346,","  404, 466, 532, 581, 655, 733, 815, 901, 991, 1085,","  1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185,","  2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706","]","","/**"," * Returns the QR Code size for the specified version"," *"," * @param  {Number} version QR Code version"," * @return {Number}         size of QR code"," */","exports.getSymbolSize = function getSymbolSize (version) {","  if (!version) throw new Error('\"version\" cannot be null or undefined')","  if (version < 1 || version > 40) throw new Error('\"version\" should be in range from 1 to 40')","  return version * 4 + 17","}","","/**"," * Returns the total number of codewords used to store data and EC information."," *"," * @param  {Number} version QR Code version"," * @return {Number}         Data length in bits"," */","exports.getSymbolTotalCodewords = function getSymbolTotalCodewords (version) {","  return CODEWORDS_COUNT[version]","}","","/**"," * Encode data with Bose-Chaudhuri-Hocquenghem"," *"," * @param  {Number} data Value to encode"," * @return {Number}      Encoded value"," */","exports.getBCHDigit = function (data) {","  var digit = 0","","  while (data !== 0) {","    digit++","    data >>>= 1","  }","","  return digit","}","","exports.setToSJISFunction = function setToSJISFunction (f) {","  if (typeof f !== 'function') {","    throw new Error('\"toSJISFunc\" is not a valid function.')","  }","","  toSJISFunction = f","}","","exports.isKanjiModeEnabled = function () {","  return typeof toSJISFunction !== 'undefined'","}","","exports.toSJIS = function toSJIS (kanji) {","  return toSJISFunction(kanji)","}",""],"l":{"1":1,"2":1,"16":1,"17":0,"18":0,"19":0,"28":1,"29":0,"38":1,"39":2,"41":2,"42":24,"43":24,"46":2,"49":1,"50":0,"51":0,"54":0,"57":1,"58":0,"61":1,"62":0}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/error-correction-level.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/error-correction-level.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0},"b":{"1":[0,0],"2":[0,0,0,0,0,0,0,0,0],"3":[0,0,0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"fromString","line":6,"loc":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}}},"2":{"name":"isValid","line":35,"loc":{"start":{"line":35,"column":18},"end":{"line":35,"column":43}}},"3":{"name":"from","line":40,"loc":{"start":{"line":40,"column":15},"end":{"line":40,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":22}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":22}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":22}},"5":{"start":{"line":6,"column":0},"end":{"line":33,"column":1}},"6":{"start":{"line":7,"column":2},"end":{"line":9,"column":3}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":44}},"8":{"start":{"line":11,"column":2},"end":{"line":11,"column":34}},"9":{"start":{"line":13,"column":2},"end":{"line":32,"column":3}},"10":{"start":{"line":16,"column":6},"end":{"line":16,"column":22}},"11":{"start":{"line":20,"column":6},"end":{"line":20,"column":22}},"12":{"start":{"line":24,"column":6},"end":{"line":24,"column":22}},"13":{"start":{"line":28,"column":6},"end":{"line":28,"column":22}},"14":{"start":{"line":31,"column":6},"end":{"line":31,"column":52}},"15":{"start":{"line":35,"column":0},"end":{"line":38,"column":1}},"16":{"start":{"line":36,"column":2},"end":{"line":37,"column":35}},"17":{"start":{"line":40,"column":0},"end":{"line":50,"column":1}},"18":{"start":{"line":41,"column":2},"end":{"line":43,"column":3}},"19":{"start":{"line":42,"column":4},"end":{"line":42,"column":16}},"20":{"start":{"line":45,"column":2},"end":{"line":49,"column":3}},"21":{"start":{"line":46,"column":4},"end":{"line":46,"column":28}},"22":{"start":{"line":48,"column":4},"end":{"line":48,"column":23}}},"branchMap":{"1":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":2},"end":{"line":7,"column":2}},{"start":{"line":7,"column":2},"end":{"line":7,"column":2}}]},"2":{"line":13,"type":"switch","locations":[{"start":{"line":14,"column":4},"end":{"line":14,"column":13}},{"start":{"line":15,"column":4},"end":{"line":16,"column":22}},{"start":{"line":18,"column":4},"end":{"line":18,"column":13}},{"start":{"line":19,"column":4},"end":{"line":20,"column":22}},{"start":{"line":22,"column":4},"end":{"line":22,"column":13}},{"start":{"line":23,"column":4},"end":{"line":24,"column":22}},{"start":{"line":26,"column":4},"end":{"line":26,"column":13}},{"start":{"line":27,"column":4},"end":{"line":28,"column":22}},{"start":{"line":30,"column":4},"end":{"line":31,"column":52}}]},"3":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":9},"end":{"line":36,"column":14}},{"start":{"line":36,"column":18},"end":{"line":36,"column":50}},{"start":{"line":37,"column":4},"end":{"line":37,"column":18}},{"start":{"line":37,"column":22},"end":{"line":37,"column":35}}]},"4":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]}},"code":["exports.L = { bit: 1 }","exports.M = { bit: 0 }","exports.Q = { bit: 3 }","exports.H = { bit: 2 }","","function fromString (string) {","  if (typeof string !== 'string') {","    throw new Error('Param is not a string')","  }","","  var lcStr = string.toLowerCase()","","  switch (lcStr) {","    case 'l':","    case 'low':","      return exports.L","","    case 'm':","    case 'medium':","      return exports.M","","    case 'q':","    case 'quartile':","      return exports.Q","","    case 'h':","    case 'high':","      return exports.H","","    default:","      throw new Error('Unknown EC Level: ' + string)","  }","}","","exports.isValid = function isValid (level) {","  return level && typeof level.bit !== 'undefined' &&","    level.bit >= 0 && level.bit < 4","}","","exports.from = function from (value, defaultValue) {","  if (exports.isValid(value)) {","    return value","  }","","  try {","    return fromString(value)","  } catch (e) {","    return defaultValue","  }","}",""],"l":{"1":1,"2":1,"3":1,"4":1,"6":1,"7":0,"8":0,"11":0,"13":0,"16":0,"20":0,"24":0,"28":0,"31":0,"35":1,"36":0,"40":1,"41":0,"42":0,"45":0,"46":0,"48":0}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/bit-buffer.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/bit-buffer.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"BitBuffer","line":1,"loc":{"start":{"line":1,"column":0},"end":{"line":1,"column":22}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":7},"end":{"line":8,"column":24}}},"3":{"name":"(anonymous_3)","line":13,"loc":{"start":{"line":13,"column":7},"end":{"line":13,"column":30}}},"4":{"name":"(anonymous_4)","line":19,"loc":{"start":{"line":19,"column":19},"end":{"line":19,"column":31}}},"5":{"name":"(anonymous_5)","line":23,"loc":{"start":{"line":23,"column":10},"end":{"line":23,"column":25}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":4,"column":1}},"2":{"start":{"line":2,"column":2},"end":{"line":2,"column":18}},"3":{"start":{"line":3,"column":2},"end":{"line":3,"column":17}},"4":{"start":{"line":6,"column":0},"end":{"line":35,"column":1}},"5":{"start":{"line":9,"column":4},"end":{"line":9,"column":40}},"6":{"start":{"line":10,"column":4},"end":{"line":10,"column":66}},"7":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"8":{"start":{"line":15,"column":6},"end":{"line":15,"column":57}},"9":{"start":{"line":20,"column":4},"end":{"line":20,"column":22}},"10":{"start":{"line":24,"column":4},"end":{"line":24,"column":46}},"11":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"12":{"start":{"line":26,"column":6},"end":{"line":26,"column":25}},"13":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"14":{"start":{"line":30,"column":6},"end":{"line":30,"column":59}},"15":{"start":{"line":33,"column":4},"end":{"line":33,"column":17}},"16":{"start":{"line":37,"column":0},"end":{"line":37,"column":26}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":25,"column":4}},{"start":{"line":25,"column":4},"end":{"line":25,"column":4}}]},"2":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]}},"code":["function BitBuffer () {","  this.buffer = []","  this.length = 0","}","","BitBuffer.prototype = {","","  get: function (index) {","    var bufIndex = Math.floor(index / 8)","    return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) === 1","  },","","  put: function (num, length) {","    for (var i = 0; i < length; i++) {","      this.putBit(((num >>> (length - i - 1)) & 1) === 1)","    }","  },","","  getLengthInBits: function () {","    return this.length","  },","","  putBit: function (bit) {","    var bufIndex = Math.floor(this.length / 8)","    if (this.buffer.length <= bufIndex) {","      this.buffer.push(0)","    }","","    if (bit) {","      this.buffer[bufIndex] |= (0x80 >>> (this.length % 8))","    }","","    this.length++","  }","}","","module.exports = BitBuffer",""],"l":{"1":1,"2":0,"3":0,"6":1,"9":0,"10":0,"14":0,"15":0,"20":0,"24":0,"25":0,"26":0,"29":0,"30":0,"33":0,"37":1}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/bit-matrix.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/bit-matrix.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":1,"18":0,"19":1,"20":0,"21":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"BitMatrix","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":26}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":26},"end":{"line":29,"column":63}}},"3":{"name":"(anonymous_3)","line":42,"loc":{"start":{"line":42,"column":26},"end":{"line":42,"column":46}}},"4":{"name":"(anonymous_4)","line":54,"loc":{"start":{"line":54,"column":26},"end":{"line":54,"column":53}}},"5":{"name":"(anonymous_5)","line":65,"loc":{"start":{"line":65,"column":33},"end":{"line":65,"column":53}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":39}},"2":{"start":{"line":8,"column":0},"end":{"line":18,"column":1}},"3":{"start":{"line":9,"column":2},"end":{"line":11,"column":3}},"4":{"start":{"line":10,"column":4},"end":{"line":10,"column":72}},"5":{"start":{"line":13,"column":2},"end":{"line":13,"column":18}},"6":{"start":{"line":14,"column":2},"end":{"line":14,"column":37}},"7":{"start":{"line":15,"column":2},"end":{"line":15,"column":19}},"8":{"start":{"line":16,"column":2},"end":{"line":16,"column":44}},"9":{"start":{"line":17,"column":2},"end":{"line":17,"column":26}},"10":{"start":{"line":29,"column":0},"end":{"line":33,"column":1}},"11":{"start":{"line":30,"column":2},"end":{"line":30,"column":35}},"12":{"start":{"line":31,"column":2},"end":{"line":31,"column":26}},"13":{"start":{"line":32,"column":2},"end":{"line":32,"column":46}},"14":{"start":{"line":32,"column":16},"end":{"line":32,"column":46}},"15":{"start":{"line":42,"column":0},"end":{"line":44,"column":1}},"16":{"start":{"line":43,"column":2},"end":{"line":43,"column":41}},"17":{"start":{"line":54,"column":0},"end":{"line":56,"column":1}},"18":{"start":{"line":55,"column":2},"end":{"line":55,"column":43}},"19":{"start":{"line":65,"column":0},"end":{"line":67,"column":1}},"20":{"start":{"line":66,"column":2},"end":{"line":66,"column":48}},"21":{"start":{"line":69,"column":0},"end":{"line":69,"column":26}}},"branchMap":{"1":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":2},"end":{"line":9,"column":2}},{"start":{"line":9,"column":2},"end":{"line":9,"column":2}}]},"2":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":6},"end":{"line":9,"column":11}},{"start":{"line":9,"column":15},"end":{"line":9,"column":23}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]}},"code":["var Buffer = require('../utils/buffer')","","/**"," * Helper class to handle QR Code symbol modules"," *"," * @param {Number} size Symbol size"," */","function BitMatrix (size) {","  if (!size || size < 1) {","    throw new Error('BitMatrix size must be defined and greater than 0')","  }","","  this.size = size","  this.data = new Buffer(size * size)","  this.data.fill(0)","  this.reservedBit = new Buffer(size * size)","  this.reservedBit.fill(0)","}","","/**"," * Set bit value at specified location"," * If reserved flag is set, this bit will be ignored during masking process"," *"," * @param {Number}  row"," * @param {Number}  col"," * @param {Boolean} value"," * @param {Boolean} reserved"," */","BitMatrix.prototype.set = function (row, col, value, reserved) {","  var index = row * this.size + col","  this.data[index] = value","  if (reserved) this.reservedBit[index] = true","}","","/**"," * Returns bit value at specified location"," *"," * @param  {Number}  row"," * @param  {Number}  col"," * @return {Boolean}"," */","BitMatrix.prototype.get = function (row, col) {","  return this.data[row * this.size + col]","}","","/**"," * Applies xor operator at specified location"," * (used during masking process)"," *"," * @param {Number}  row"," * @param {Number}  col"," * @param {Boolean} value"," */","BitMatrix.prototype.xor = function (row, col, value) {","  this.data[row * this.size + col] ^= value","}","","/**"," * Check if bit at specified location is reserved"," *"," * @param {Number}   row"," * @param {Number}   col"," * @return {Boolean}"," */","BitMatrix.prototype.isReserved = function (row, col) {","  return this.reservedBit[row * this.size + col]","}","","module.exports = BitMatrix",""],"l":{"1":1,"8":1,"9":0,"10":0,"13":0,"14":0,"15":0,"16":0,"17":0,"29":1,"30":0,"31":0,"32":0,"42":1,"43":0,"54":1,"55":0,"65":1,"66":0,"69":1}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/alignment-pattern.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/alignment-pattern.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0,0,0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"getRowColCoords","line":27,"loc":{"start":{"line":27,"column":26},"end":{"line":27,"column":61}}},"2":{"name":"getPositions","line":64,"loc":{"start":{"line":64,"column":23},"end":{"line":64,"column":55}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":52}},"2":{"start":{"line":27,"column":0},"end":{"line":42,"column":1}},"3":{"start":{"line":28,"column":2},"end":{"line":28,"column":30}},"4":{"start":{"line":28,"column":21},"end":{"line":28,"column":30}},"5":{"start":{"line":30,"column":2},"end":{"line":30,"column":44}},"6":{"start":{"line":31,"column":2},"end":{"line":31,"column":35}},"7":{"start":{"line":32,"column":2},"end":{"line":32,"column":85}},"8":{"start":{"line":33,"column":2},"end":{"line":33,"column":28}},"9":{"start":{"line":35,"column":2},"end":{"line":37,"column":3}},"10":{"start":{"line":36,"column":4},"end":{"line":36,"column":47}},"11":{"start":{"line":39,"column":2},"end":{"line":39,"column":19}},"12":{"start":{"line":41,"column":2},"end":{"line":41,"column":28}},"13":{"start":{"line":64,"column":0},"end":{"line":83,"column":1}},"14":{"start":{"line":65,"column":2},"end":{"line":65,"column":17}},"15":{"start":{"line":66,"column":2},"end":{"line":66,"column":44}},"16":{"start":{"line":67,"column":2},"end":{"line":67,"column":28}},"17":{"start":{"line":69,"column":2},"end":{"line":80,"column":3}},"18":{"start":{"line":70,"column":4},"end":{"line":79,"column":5}},"19":{"start":{"line":72,"column":6},"end":{"line":76,"column":7}},"20":{"start":{"line":75,"column":8},"end":{"line":75,"column":16}},"21":{"start":{"line":78,"column":6},"end":{"line":78,"column":35}},"22":{"start":{"line":82,"column":2},"end":{"line":82,"column":15}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"2":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":33},"end":{"line":32,"column":35}},{"start":{"line":32,"column":38},"end":{"line":32,"column":85}}]},"3":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":6},"end":{"line":72,"column":6}},{"start":{"line":72,"column":6},"end":{"line":72,"column":6}}]},"4":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":11},"end":{"line":72,"column":18}},{"start":{"line":72,"column":22},"end":{"line":72,"column":29}},{"start":{"line":73,"column":11},"end":{"line":73,"column":18}},{"start":{"line":73,"column":22},"end":{"line":73,"column":41}},{"start":{"line":74,"column":11},"end":{"line":74,"column":30}},{"start":{"line":74,"column":34},"end":{"line":74,"column":41}}]}},"code":["/**"," * Alignment pattern are fixed reference pattern in defined positions"," * in a matrix symbology, which enables the decode software to re-synchronise"," * the coordinate mapping of the image modules in the event of moderate amounts"," * of distortion of the image."," *"," * Alignment patterns are present only in QR Code symbols of version 2 or larger"," * and their number depends on the symbol version."," */","","var getSymbolSize = require('./utils').getSymbolSize","","/**"," * Calculate the row/column coordinates of the center module of each alignment pattern"," * for the specified QR Code version."," *"," * The alignment patterns are positioned symmetrically on either side of the diagonal"," * running from the top left corner of the symbol to the bottom right corner."," *"," * Since positions are simmetrical only half of the coordinates are returned."," * Each item of the array will represent in turn the x and y coordinate."," * @see {@link getPositions}"," *"," * @param  {Number} version QR Code version"," * @return {Array}          Array of coordinate"," */","exports.getRowColCoords = function getRowColCoords (version) {","  if (version === 1) return []","","  var posCount = Math.floor(version / 7) + 2","  var size = getSymbolSize(version)","  var intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2","  var positions = [size - 7] // Last coord is always (size - 7)","","  for (var i = 1; i < posCount - 1; i++) {","    positions[i] = positions[i - 1] - intervals","  }","","  positions.push(6) // First coord is always 6","","  return positions.reverse()","}","","/**"," * Returns an array containing the positions of each alignment pattern."," * Each array's element represent the center point of the pattern as (x, y) coordinates"," *"," * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}"," * and filtering out the items that overlaps with finder pattern"," *"," * @example"," * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38."," * The alignment patterns, therefore, are to be centered on (row, column)"," * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38)."," * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns"," * and are not therefore used for alignment patterns."," *"," * var pos = getPositions(7)"," * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]"," *"," * @param  {Number} version QR Code version"," * @return {Array}          Array of coordinates"," */","exports.getPositions = function getPositions (version) {","  var coords = []","  var pos = exports.getRowColCoords(version)","  var posLength = pos.length","","  for (var i = 0; i < posLength; i++) {","    for (var j = 0; j < posLength; j++) {","      // Skip if position is occupied by finder patterns","      if ((i === 0 && j === 0) ||             // top-left","          (i === 0 && j === posLength - 1) || // bottom-left","          (i === posLength - 1 && j === 0)) { // top-right","        continue","      }","","      coords.push([pos[i], pos[j]])","    }","  }","","  return coords","}",""],"l":{"11":1,"27":1,"28":0,"30":0,"31":0,"32":0,"33":0,"35":0,"36":0,"39":0,"41":0,"64":1,"65":0,"66":0,"67":0,"69":0,"70":0,"72":0,"75":0,"78":0,"82":0}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/finder-pattern.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/finder-pattern.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"getPositions","line":11,"loc":{"start":{"line":11,"column":23},"end":{"line":11,"column":55}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":52}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":27}},"3":{"start":{"line":11,"column":0},"end":{"line":22,"column":1}},"4":{"start":{"line":12,"column":2},"end":{"line":12,"column":35}},"5":{"start":{"line":14,"column":2},"end":{"line":21,"column":3}}},"branchMap":{},"code":["var getSymbolSize = require('./utils').getSymbolSize","var FINDER_PATTERN_SIZE = 7","","/**"," * Returns an array containing the positions of each finder pattern."," * Each array's element represent the top-left point of the pattern as (x, y) coordinates"," *"," * @param  {Number} version QR Code version"," * @return {Array}          Array of coordinates"," */","exports.getPositions = function getPositions (version) {","  var size = getSymbolSize(version)","","  return [","    // top-left","    [0, 0],","    // top-right","    [size - FINDER_PATTERN_SIZE, 0],","    // bottom-left","    [0, size - FINDER_PATTERN_SIZE]","  ]","}",""],"l":{"1":1,"2":1,"11":1,"12":0,"14":0}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/mask-pattern.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/mask-pattern.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0,0],"13":[0,0,0,0,0,0,0,0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"getPenaltyN1","line":34,"loc":{"start":{"line":34,"column":23},"end":{"line":34,"column":52}}},"2":{"name":"getPenaltyN2","line":78,"loc":{"start":{"line":78,"column":23},"end":{"line":78,"column":52}}},"3":{"name":"getPenaltyN3","line":102,"loc":{"start":{"line":102,"column":23},"end":{"line":102,"column":52}}},"4":{"name":"getPenaltyN4","line":130,"loc":{"start":{"line":130,"column":23},"end":{"line":130,"column":52}}},"5":{"name":"getMaskAt","line":149,"loc":{"start":{"line":149,"column":0},"end":{"line":149,"column":39}}},"6":{"name":"applyMask","line":170,"loc":{"start":{"line":170,"column":20},"end":{"line":170,"column":55}}},"7":{"name":"getBestMask","line":187,"loc":{"start":{"line":187,"column":22},"end":{"line":187,"column":67}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":14,"column":1}},"2":{"start":{"line":20,"column":0},"end":{"line":25,"column":1}},"3":{"start":{"line":34,"column":0},"end":{"line":71,"column":1}},"4":{"start":{"line":35,"column":2},"end":{"line":35,"column":22}},"5":{"start":{"line":36,"column":2},"end":{"line":36,"column":16}},"6":{"start":{"line":37,"column":2},"end":{"line":37,"column":22}},"7":{"start":{"line":38,"column":2},"end":{"line":38,"column":22}},"8":{"start":{"line":39,"column":2},"end":{"line":39,"column":20}},"9":{"start":{"line":40,"column":2},"end":{"line":40,"column":20}},"10":{"start":{"line":42,"column":2},"end":{"line":68,"column":3}},"11":{"start":{"line":43,"column":4},"end":{"line":43,"column":35}},"12":{"start":{"line":44,"column":4},"end":{"line":44,"column":28}},"13":{"start":{"line":46,"column":4},"end":{"line":64,"column":5}},"14":{"start":{"line":47,"column":6},"end":{"line":47,"column":37}},"15":{"start":{"line":48,"column":6},"end":{"line":54,"column":7}},"16":{"start":{"line":49,"column":8},"end":{"line":49,"column":22}},"17":{"start":{"line":51,"column":8},"end":{"line":51,"column":78}},"18":{"start":{"line":51,"column":31},"end":{"line":51,"column":78}},"19":{"start":{"line":52,"column":8},"end":{"line":52,"column":24}},"20":{"start":{"line":53,"column":8},"end":{"line":53,"column":24}},"21":{"start":{"line":56,"column":6},"end":{"line":56,"column":33}},"22":{"start":{"line":57,"column":6},"end":{"line":63,"column":7}},"23":{"start":{"line":58,"column":8},"end":{"line":58,"column":22}},"24":{"start":{"line":60,"column":8},"end":{"line":60,"column":78}},"25":{"start":{"line":60,"column":31},"end":{"line":60,"column":78}},"26":{"start":{"line":61,"column":8},"end":{"line":61,"column":24}},"27":{"start":{"line":62,"column":8},"end":{"line":62,"column":24}},"28":{"start":{"line":66,"column":4},"end":{"line":66,"column":74}},"29":{"start":{"line":66,"column":27},"end":{"line":66,"column":74}},"30":{"start":{"line":67,"column":4},"end":{"line":67,"column":74}},"31":{"start":{"line":67,"column":27},"end":{"line":67,"column":74}},"32":{"start":{"line":70,"column":2},"end":{"line":70,"column":15}},"33":{"start":{"line":78,"column":0},"end":{"line":94,"column":1}},"34":{"start":{"line":79,"column":2},"end":{"line":79,"column":22}},"35":{"start":{"line":80,"column":2},"end":{"line":80,"column":16}},"36":{"start":{"line":82,"column":2},"end":{"line":91,"column":3}},"37":{"start":{"line":83,"column":4},"end":{"line":90,"column":5}},"38":{"start":{"line":84,"column":6},"end":{"line":87,"column":34}},"39":{"start":{"line":89,"column":6},"end":{"line":89,"column":44}},"40":{"start":{"line":89,"column":36},"end":{"line":89,"column":44}},"41":{"start":{"line":93,"column":2},"end":{"line":93,"column":34}},"42":{"start":{"line":102,"column":0},"end":{"line":120,"column":1}},"43":{"start":{"line":103,"column":2},"end":{"line":103,"column":22}},"44":{"start":{"line":104,"column":2},"end":{"line":104,"column":16}},"45":{"start":{"line":105,"column":2},"end":{"line":105,"column":17}},"46":{"start":{"line":106,"column":2},"end":{"line":106,"column":17}},"47":{"start":{"line":108,"column":2},"end":{"line":117,"column":3}},"48":{"start":{"line":109,"column":4},"end":{"line":109,"column":25}},"49":{"start":{"line":110,"column":4},"end":{"line":116,"column":5}},"50":{"start":{"line":111,"column":6},"end":{"line":111,"column":61}},"51":{"start":{"line":112,"column":6},"end":{"line":112,"column":73}},"52":{"start":{"line":112,"column":65},"end":{"line":112,"column":73}},"53":{"start":{"line":114,"column":6},"end":{"line":114,"column":61}},"54":{"start":{"line":115,"column":6},"end":{"line":115,"column":73}},"55":{"start":{"line":115,"column":65},"end":{"line":115,"column":73}},"56":{"start":{"line":119,"column":2},"end":{"line":119,"column":34}},"57":{"start":{"line":130,"column":0},"end":{"line":139,"column":1}},"58":{"start":{"line":131,"column":2},"end":{"line":131,"column":19}},"59":{"start":{"line":132,"column":2},"end":{"line":132,"column":37}},"60":{"start":{"line":134,"column":2},"end":{"line":134,"column":66}},"61":{"start":{"line":134,"column":41},"end":{"line":134,"column":66}},"62":{"start":{"line":136,"column":2},"end":{"line":136,"column":72}},"63":{"start":{"line":138,"column":2},"end":{"line":138,"column":29}},"64":{"start":{"line":149,"column":0},"end":{"line":162,"column":1}},"65":{"start":{"line":150,"column":2},"end":{"line":161,"column":3}},"66":{"start":{"line":151,"column":38},"end":{"line":151,"column":62}},"67":{"start":{"line":152,"column":38},"end":{"line":152,"column":56}},"68":{"start":{"line":153,"column":38},"end":{"line":153,"column":56}},"69":{"start":{"line":154,"column":38},"end":{"line":154,"column":62}},"70":{"start":{"line":155,"column":38},"end":{"line":155,"column":94}},"71":{"start":{"line":156,"column":38},"end":{"line":156,"column":76}},"72":{"start":{"line":157,"column":38},"end":{"line":157,"column":82}},"73":{"start":{"line":158,"column":38},"end":{"line":158,"column":82}},"74":{"start":{"line":160,"column":13},"end":{"line":160,"column":62}},"75":{"start":{"line":170,"column":0},"end":{"line":179,"column":1}},"76":{"start":{"line":171,"column":2},"end":{"line":171,"column":22}},"77":{"start":{"line":173,"column":2},"end":{"line":178,"column":3}},"78":{"start":{"line":174,"column":4},"end":{"line":177,"column":5}},"79":{"start":{"line":175,"column":6},"end":{"line":175,"column":45}},"80":{"start":{"line":175,"column":37},"end":{"line":175,"column":45}},"81":{"start":{"line":176,"column":6},"end":{"line":176,"column":54}},"82":{"start":{"line":187,"column":0},"end":{"line":213,"column":1}},"83":{"start":{"line":188,"column":2},"end":{"line":188,"column":56}},"84":{"start":{"line":189,"column":2},"end":{"line":189,"column":21}},"85":{"start":{"line":190,"column":2},"end":{"line":190,"column":29}},"86":{"start":{"line":192,"column":2},"end":{"line":210,"column":3}},"87":{"start":{"line":193,"column":4},"end":{"line":193,"column":22}},"88":{"start":{"line":194,"column":4},"end":{"line":194,"column":30}},"89":{"start":{"line":197,"column":4},"end":{"line":201,"column":32}},"90":{"start":{"line":204,"column":4},"end":{"line":204,"column":30}},"91":{"start":{"line":206,"column":4},"end":{"line":209,"column":5}},"92":{"start":{"line":207,"column":6},"end":{"line":207,"column":28}},"93":{"start":{"line":208,"column":6},"end":{"line":208,"column":21}},"94":{"start":{"line":212,"column":2},"end":{"line":212,"column":20}}},"branchMap":{"1":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":6},"end":{"line":48,"column":6}},{"start":{"line":48,"column":6},"end":{"line":48,"column":6}}]},"2":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":8},"end":{"line":51,"column":8}},{"start":{"line":51,"column":8},"end":{"line":51,"column":8}}]},"3":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":6},"end":{"line":57,"column":6}},{"start":{"line":57,"column":6},"end":{"line":57,"column":6}}]},"4":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":8}},{"start":{"line":60,"column":8},"end":{"line":60,"column":8}}]},"5":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":4},"end":{"line":66,"column":4}},{"start":{"line":66,"column":4},"end":{"line":66,"column":4}}]},"6":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":67,"column":4}},{"start":{"line":67,"column":4},"end":{"line":67,"column":4}}]},"7":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":6},"end":{"line":89,"column":6}},{"start":{"line":89,"column":6},"end":{"line":89,"column":6}}]},"8":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":10},"end":{"line":89,"column":20}},{"start":{"line":89,"column":24},"end":{"line":89,"column":34}}]},"9":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":6},"end":{"line":112,"column":6}},{"start":{"line":112,"column":6},"end":{"line":112,"column":6}}]},"10":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":10},"end":{"line":112,"column":19}},{"start":{"line":112,"column":24},"end":{"line":112,"column":41}},{"start":{"line":112,"column":45},"end":{"line":112,"column":62}}]},"11":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":6},"end":{"line":115,"column":6}},{"start":{"line":115,"column":6},"end":{"line":115,"column":6}}]},"12":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":10},"end":{"line":115,"column":19}},{"start":{"line":115,"column":24},"end":{"line":115,"column":41}},{"start":{"line":115,"column":45},"end":{"line":115,"column":62}}]},"13":{"line":150,"type":"switch","locations":[{"start":{"line":151,"column":4},"end":{"line":151,"column":62}},{"start":{"line":152,"column":4},"end":{"line":152,"column":56}},{"start":{"line":153,"column":4},"end":{"line":153,"column":56}},{"start":{"line":154,"column":4},"end":{"line":154,"column":62}},{"start":{"line":155,"column":4},"end":{"line":155,"column":94}},{"start":{"line":156,"column":4},"end":{"line":156,"column":76}},{"start":{"line":157,"column":4},"end":{"line":157,"column":82}},{"start":{"line":158,"column":4},"end":{"line":158,"column":82}},{"start":{"line":160,"column":4},"end":{"line":160,"column":62}}]},"14":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":6},"end":{"line":175,"column":6}},{"start":{"line":175,"column":6},"end":{"line":175,"column":6}}]},"15":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":4},"end":{"line":206,"column":4}},{"start":{"line":206,"column":4},"end":{"line":206,"column":4}}]}},"code":["/**"," * Data mask pattern reference"," * @type {Object}"," */","exports.Patterns = {","  PATTERN000: 0,","  PATTERN001: 1,","  PATTERN010: 2,","  PATTERN011: 3,","  PATTERN100: 4,","  PATTERN101: 5,","  PATTERN110: 6,","  PATTERN111: 7","}","","/**"," * Weighted penalty scores for the undesirable features"," * @type {Object}"," */","var PenaltyScores = {","  N1: 3,","  N2: 3,","  N3: 40,","  N4: 10","}","","/**","* Find adjacent modules in row/column with the same color","* and assign a penalty value.","*","* Points: N1 + i","* i is the amount by which the number of adjacent modules of the same color exceeds 5","*/","exports.getPenaltyN1 = function getPenaltyN1 (data) {","  var size = data.size","  var points = 0","  var sameCountCol = 0","  var sameCountRow = 0","  var lastCol = null","  var lastRow = null","","  for (var row = 0; row < size; row++) {","    sameCountCol = sameCountRow = 0","    lastCol = lastRow = null","","    for (var col = 0; col < size; col++) {","      var module = data.get(row, col)","      if (module === lastCol) {","        sameCountCol++","      } else {","        if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)","        lastCol = module","        sameCountCol = 1","      }","","      module = data.get(col, row)","      if (module === lastRow) {","        sameCountRow++","      } else {","        if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)","        lastRow = module","        sameCountRow = 1","      }","    }","","    if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)","    if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)","  }","","  return points","}","","/**"," * Find 2x2 blocks with the same color and assign a penalty value"," *"," * Points: N2 * (m - 1) * (n - 1)"," */","exports.getPenaltyN2 = function getPenaltyN2 (data) {","  var size = data.size","  var points = 0","","  for (var row = 0; row < size - 1; row++) {","    for (var col = 0; col < size - 1; col++) {","      var last = data.get(row, col) +","        data.get(row, col + 1) +","        data.get(row + 1, col) +","        data.get(row + 1, col + 1)","","      if (last === 4 || last === 0) points++","    }","  }","","  return points * PenaltyScores.N2","}","","/**"," * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,"," * preceded or followed by light area 4 modules wide"," *"," * Points: N3 * number of pattern found"," */","exports.getPenaltyN3 = function getPenaltyN3 (data) {","  var size = data.size","  var points = 0","  var bitsCol = 0","  var bitsRow = 0","","  for (var row = 0; row < size; row++) {","    bitsCol = bitsRow = 0","    for (var col = 0; col < size; col++) {","      bitsCol = ((bitsCol << 1) & 0x7FF) | data.get(row, col)","      if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D)) points++","","      bitsRow = ((bitsRow << 1) & 0x7FF) | data.get(col, row)","      if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D)) points++","    }","  }","","  return points * PenaltyScores.N3","}","","/**"," * Calculate proportion of dark modules in entire symbol"," *"," * Points: N4 * k"," *"," * k is the rating of the deviation of the proportion of dark modules"," * in the symbol from 50% in steps of 5%"," */","exports.getPenaltyN4 = function getPenaltyN4 (data) {","  var darkCount = 0","  var modulesCount = data.data.length","","  for (var i = 0; i < modulesCount; i++) darkCount += data.data[i]","","  var k = Math.abs(Math.ceil((darkCount * 100 / modulesCount) / 5) - 10)","","  return k * PenaltyScores.N4","}","","/**"," * Return mask value at given position"," *"," * @param  {Number} maskPattern Pattern reference value"," * @param  {Number} i           Row"," * @param  {Number} j           Column"," * @return {Boolean}            Mask value"," */","function getMaskAt (maskPattern, i, j) {","  switch (maskPattern) {","    case exports.Patterns.PATTERN000: return (i + j) % 2 === 0","    case exports.Patterns.PATTERN001: return i % 2 === 0","    case exports.Patterns.PATTERN010: return j % 3 === 0","    case exports.Patterns.PATTERN011: return (i + j) % 3 === 0","    case exports.Patterns.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0","    case exports.Patterns.PATTERN101: return (i * j) % 2 + (i * j) % 3 === 0","    case exports.Patterns.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 === 0","    case exports.Patterns.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 === 0","","    default: throw new Error('bad maskPattern:' + maskPattern)","  }","}","","/**"," * Apply a mask pattern to a BitMatrix"," *"," * @param  {Number}    pattern Pattern reference number"," * @param  {BitMatrix} data    BitMatrix data"," */","exports.applyMask = function applyMask (pattern, data) {","  var size = data.size","","  for (var col = 0; col < size; col++) {","    for (var row = 0; row < size; row++) {","      if (data.isReserved(row, col)) continue","      data.xor(row, col, getMaskAt(pattern, row, col))","    }","  }","}","","/**"," * Returns the best mask pattern for data"," *"," * @param  {BitMatrix} data"," * @return {Number} Mask pattern reference number"," */","exports.getBestMask = function getBestMask (data, setupFormatFunc) {","  var numPatterns = Object.keys(exports.Patterns).length","  var bestPattern = 0","  var lowerPenalty = Infinity","","  for (var p = 0; p < numPatterns; p++) {","    setupFormatFunc(p)","    exports.applyMask(p, data)","","    // Calculate penalty","    var penalty =","      exports.getPenaltyN1(data) +","      exports.getPenaltyN2(data) +","      exports.getPenaltyN3(data) +","      exports.getPenaltyN4(data)","","    // Undo previously applied mask","    exports.applyMask(p, data)","","    if (penalty < lowerPenalty) {","      lowerPenalty = penalty","      bestPattern = p","    }","  }","","  return bestPattern","}",""],"l":{"5":1,"20":1,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"42":0,"43":0,"44":0,"46":0,"47":0,"48":0,"49":0,"51":0,"52":0,"53":0,"56":0,"57":0,"58":0,"60":0,"61":0,"62":0,"66":0,"67":0,"70":0,"78":1,"79":0,"80":0,"82":0,"83":0,"84":0,"89":0,"93":0,"102":1,"103":0,"104":0,"105":0,"106":0,"108":0,"109":0,"110":0,"111":0,"112":0,"114":0,"115":0,"119":0,"130":1,"131":0,"132":0,"134":0,"136":0,"138":0,"149":1,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"160":0,"170":1,"171":0,"173":0,"174":0,"175":0,"176":0,"187":1,"188":0,"189":0,"190":0,"192":0,"193":0,"194":0,"197":0,"204":0,"206":0,"207":0,"208":0,"212":0}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/error-correction-code.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/error-correction-code.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"1":[0,0,0,0,0],"2":[0,0,0,0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"getBlocksCount","line":99,"loc":{"start":{"line":99,"column":25},"end":{"line":99,"column":81}}},"2":{"name":"getTotalCodewordsCount","line":122,"loc":{"start":{"line":122,"column":33},"end":{"line":122,"column":97}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":49}},"2":{"start":{"line":3,"column":0},"end":{"line":45,"column":1}},"3":{"start":{"line":47,"column":0},"end":{"line":89,"column":1}},"4":{"start":{"line":99,"column":0},"end":{"line":112,"column":1}},"5":{"start":{"line":100,"column":2},"end":{"line":111,"column":3}},"6":{"start":{"line":102,"column":6},"end":{"line":102,"column":51}},"7":{"start":{"line":104,"column":6},"end":{"line":104,"column":51}},"8":{"start":{"line":106,"column":6},"end":{"line":106,"column":51}},"9":{"start":{"line":108,"column":6},"end":{"line":108,"column":51}},"10":{"start":{"line":110,"column":6},"end":{"line":110,"column":22}},"11":{"start":{"line":122,"column":0},"end":{"line":135,"column":1}},"12":{"start":{"line":123,"column":2},"end":{"line":134,"column":3}},"13":{"start":{"line":125,"column":6},"end":{"line":125,"column":54}},"14":{"start":{"line":127,"column":6},"end":{"line":127,"column":54}},"15":{"start":{"line":129,"column":6},"end":{"line":129,"column":54}},"16":{"start":{"line":131,"column":6},"end":{"line":131,"column":54}},"17":{"start":{"line":133,"column":6},"end":{"line":133,"column":22}}},"branchMap":{"1":{"line":100,"type":"switch","locations":[{"start":{"line":101,"column":4},"end":{"line":102,"column":51}},{"start":{"line":103,"column":4},"end":{"line":104,"column":51}},{"start":{"line":105,"column":4},"end":{"line":106,"column":51}},{"start":{"line":107,"column":4},"end":{"line":108,"column":51}},{"start":{"line":109,"column":4},"end":{"line":110,"column":22}}]},"2":{"line":123,"type":"switch","locations":[{"start":{"line":124,"column":4},"end":{"line":125,"column":54}},{"start":{"line":126,"column":4},"end":{"line":127,"column":54}},{"start":{"line":128,"column":4},"end":{"line":129,"column":54}},{"start":{"line":130,"column":4},"end":{"line":131,"column":54}},{"start":{"line":132,"column":4},"end":{"line":133,"column":22}}]}},"code":["var ECLevel = require('./error-correction-level')","","var EC_BLOCKS_TABLE = [","// L  M  Q  H","  1, 1, 1, 1,","  1, 1, 1, 1,","  1, 1, 2, 2,","  1, 2, 2, 4,","  1, 2, 4, 4,","  2, 4, 4, 4,","  2, 4, 6, 5,","  2, 4, 6, 6,","  2, 5, 8, 8,","  4, 5, 8, 8,","  4, 5, 8, 11,","  4, 8, 10, 11,","  4, 9, 12, 16,","  4, 9, 16, 16,","  6, 10, 12, 18,","  6, 10, 17, 16,","  6, 11, 16, 19,","  6, 13, 18, 21,","  7, 14, 21, 25,","  8, 16, 20, 25,","  8, 17, 23, 25,","  9, 17, 23, 34,","  9, 18, 25, 30,","  10, 20, 27, 32,","  12, 21, 29, 35,","  12, 23, 34, 37,","  12, 25, 34, 40,","  13, 26, 35, 42,","  14, 28, 38, 45,","  15, 29, 40, 48,","  16, 31, 43, 51,","  17, 33, 45, 54,","  18, 35, 48, 57,","  19, 37, 51, 60,","  19, 38, 53, 63,","  20, 40, 56, 66,","  21, 43, 59, 70,","  22, 45, 62, 74,","  24, 47, 65, 77,","  25, 49, 68, 81","]","","var EC_CODEWORDS_TABLE = [","// L  M  Q  H","  7, 10, 13, 17,","  10, 16, 22, 28,","  15, 26, 36, 44,","  20, 36, 52, 64,","  26, 48, 72, 88,","  36, 64, 96, 112,","  40, 72, 108, 130,","  48, 88, 132, 156,","  60, 110, 160, 192,","  72, 130, 192, 224,","  80, 150, 224, 264,","  96, 176, 260, 308,","  104, 198, 288, 352,","  120, 216, 320, 384,","  132, 240, 360, 432,","  144, 280, 408, 480,","  168, 308, 448, 532,","  180, 338, 504, 588,","  196, 364, 546, 650,","  224, 416, 600, 700,","  224, 442, 644, 750,","  252, 476, 690, 816,","  270, 504, 750, 900,","  300, 560, 810, 960,","  312, 588, 870, 1050,","  336, 644, 952, 1110,","  360, 700, 1020, 1200,","  390, 728, 1050, 1260,","  420, 784, 1140, 1350,","  450, 812, 1200, 1440,","  480, 868, 1290, 1530,","  510, 924, 1350, 1620,","  540, 980, 1440, 1710,","  570, 1036, 1530, 1800,","  570, 1064, 1590, 1890,","  600, 1120, 1680, 1980,","  630, 1204, 1770, 2100,","  660, 1260, 1860, 2220,","  720, 1316, 1950, 2310,","  750, 1372, 2040, 2430","]","","/**"," * Returns the number of error correction block that the QR Code should contain"," * for the specified version and error correction level."," *"," * @param  {Number} version              QR Code version"," * @param  {Number} errorCorrectionLevel Error correction level"," * @return {Number}                      Number of error correction blocks"," */","exports.getBlocksCount = function getBlocksCount (version, errorCorrectionLevel) {","  switch (errorCorrectionLevel) {","    case ECLevel.L:","      return EC_BLOCKS_TABLE[(version - 1) * 4 + 0]","    case ECLevel.M:","      return EC_BLOCKS_TABLE[(version - 1) * 4 + 1]","    case ECLevel.Q:","      return EC_BLOCKS_TABLE[(version - 1) * 4 + 2]","    case ECLevel.H:","      return EC_BLOCKS_TABLE[(version - 1) * 4 + 3]","    default:","      return undefined","  }","}","","/**"," * Returns the number of error correction codewords to use for the specified"," * version and error correction level."," *"," * @param  {Number} version              QR Code version"," * @param  {Number} errorCorrectionLevel Error correction level"," * @return {Number}                      Number of error correction codewords"," */","exports.getTotalCodewordsCount = function getTotalCodewordsCount (version, errorCorrectionLevel) {","  switch (errorCorrectionLevel) {","    case ECLevel.L:","      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0]","    case ECLevel.M:","      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1]","    case ECLevel.Q:","      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2]","    case ECLevel.H:","      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3]","    default:","      return undefined","  }","}",""],"l":{"1":1,"3":1,"47":1,"99":1,"100":0,"102":0,"104":0,"106":0,"108":0,"110":0,"122":1,"123":0,"125":0,"127":0,"129":0,"131":0,"133":0}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/reed-solomon-encoder.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/reed-solomon-encoder.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"ReedSolomonEncoder","line":4,"loc":{"start":{"line":4,"column":0},"end":{"line":4,"column":37}}},"2":{"name":"initialize","line":17,"loc":{"start":{"line":17,"column":42},"end":{"line":17,"column":71}}},"3":{"name":"encode","line":29,"loc":{"start":{"line":29,"column":38},"end":{"line":29,"column":61}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":39}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":40}},"3":{"start":{"line":4,"column":0},"end":{"line":9,"column":1}},"4":{"start":{"line":5,"column":2},"end":{"line":5,"column":26}},"5":{"start":{"line":6,"column":2},"end":{"line":6,"column":22}},"6":{"start":{"line":8,"column":2},"end":{"line":8,"column":47}},"7":{"start":{"line":8,"column":19},"end":{"line":8,"column":47}},"8":{"start":{"line":17,"column":0},"end":{"line":21,"column":1}},"9":{"start":{"line":19,"column":2},"end":{"line":19,"column":22}},"10":{"start":{"line":20,"column":2},"end":{"line":20,"column":61}},"11":{"start":{"line":29,"column":0},"end":{"line":57,"column":1}},"12":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"13":{"start":{"line":31,"column":4},"end":{"line":31,"column":46}},"14":{"start":{"line":36,"column":2},"end":{"line":36,"column":35}},"15":{"start":{"line":37,"column":2},"end":{"line":37,"column":13}},"16":{"start":{"line":38,"column":2},"end":{"line":38,"column":72}},"17":{"start":{"line":42,"column":2},"end":{"line":42,"column":58}},"18":{"start":{"line":47,"column":2},"end":{"line":47,"column":44}},"19":{"start":{"line":48,"column":2},"end":{"line":54,"column":3}},"20":{"start":{"line":49,"column":4},"end":{"line":49,"column":38}},"21":{"start":{"line":50,"column":4},"end":{"line":50,"column":16}},"22":{"start":{"line":51,"column":4},"end":{"line":51,"column":31}},"23":{"start":{"line":53,"column":4},"end":{"line":53,"column":15}},"24":{"start":{"line":56,"column":2},"end":{"line":56,"column":18}},"25":{"start":{"line":59,"column":0},"end":{"line":59,"column":35}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":2}},{"start":{"line":8,"column":2},"end":{"line":8,"column":2}}]},"2":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"3":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]}},"code":["var Buffer = require('../utils/buffer')","var Polynomial = require('./polynomial')","","function ReedSolomonEncoder (degree) {","  this.genPoly = undefined","  this.degree = degree","","  if (this.degree) this.initialize(this.degree)","}","","/**"," * Initialize the encoder."," * The input param should correspond to the number of error correction codewords."," *"," * @param  {Number} degree"," */","ReedSolomonEncoder.prototype.initialize = function initialize (degree) {","  // create an irreducible generator polynomial","  this.degree = degree","  this.genPoly = Polynomial.generateECPolynomial(this.degree)","}","","/**"," * Encodes a chunk of data"," *"," * @param  {Buffer} data Buffer containing input data"," * @return {Buffer}      Buffer containing encoded data"," */","ReedSolomonEncoder.prototype.encode = function encode (data) {","  if (!this.genPoly) {","    throw new Error('Encoder not initialized')","  }","","  // Calculate EC for this data block","  // extends data size to data+genPoly size","  var pad = new Buffer(this.degree)","  pad.fill(0)","  var paddedData = Buffer.concat([data, pad], data.length + this.degree)","","  // The error correction codewords are the remainder after dividing the data codewords","  // by a generator polynomial","  var remainder = Polynomial.mod(paddedData, this.genPoly)","","  // return EC data blocks (last n byte, where n is the degree of genPoly)","  // If coefficients number in remainder are less than genPoly degree,","  // pad with 0s to the left to reach the needed number of coefficients","  var start = this.degree - remainder.length","  if (start > 0) {","    var buff = new Buffer(this.degree)","    buff.fill(0)","    remainder.copy(buff, start)","","    return buff","  }","","  return remainder","}","","module.exports = ReedSolomonEncoder",""],"l":{"1":1,"2":1,"4":1,"5":0,"6":0,"8":0,"17":1,"19":0,"20":0,"29":1,"30":0,"31":0,"36":0,"37":0,"38":0,"42":0,"47":0,"48":0,"49":0,"50":0,"51":0,"53":0,"56":0,"59":1}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/polynomial.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/polynomial.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"mul","line":11,"loc":{"start":{"line":11,"column":14},"end":{"line":11,"column":36}}},"2":{"name":"mod","line":31,"loc":{"start":{"line":31,"column":14},"end":{"line":31,"column":47}}},"3":{"name":"generateECPolynomial","line":57,"loc":{"start":{"line":57,"column":31},"end":{"line":57,"column":70}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":39}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":34}},"3":{"start":{"line":11,"column":0},"end":{"line":22,"column":1}},"4":{"start":{"line":12,"column":2},"end":{"line":12,"column":51}},"5":{"start":{"line":13,"column":2},"end":{"line":13,"column":15}},"6":{"start":{"line":15,"column":2},"end":{"line":19,"column":3}},"7":{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},"8":{"start":{"line":17,"column":6},"end":{"line":17,"column":42}},"9":{"start":{"line":21,"column":2},"end":{"line":21,"column":14}},"10":{"start":{"line":31,"column":0},"end":{"line":48,"column":1}},"11":{"start":{"line":32,"column":2},"end":{"line":32,"column":35}},"12":{"start":{"line":34,"column":2},"end":{"line":45,"column":3}},"13":{"start":{"line":35,"column":4},"end":{"line":35,"column":25}},"14":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"15":{"start":{"line":38,"column":6},"end":{"line":38,"column":44}},"16":{"start":{"line":42,"column":4},"end":{"line":42,"column":18}},"17":{"start":{"line":43,"column":4},"end":{"line":43,"column":67}},"18":{"start":{"line":43,"column":59},"end":{"line":43,"column":67}},"19":{"start":{"line":44,"column":4},"end":{"line":44,"column":33}},"20":{"start":{"line":47,"column":2},"end":{"line":47,"column":15}},"21":{"start":{"line":57,"column":0},"end":{"line":64,"column":1}},"22":{"start":{"line":58,"column":2},"end":{"line":58,"column":28}},"23":{"start":{"line":59,"column":2},"end":{"line":61,"column":3}},"24":{"start":{"line":60,"column":4},"end":{"line":60,"column":44}},"25":{"start":{"line":63,"column":2},"end":{"line":63,"column":13}}},"branchMap":{"1":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":11},"end":{"line":43,"column":33}},{"start":{"line":43,"column":37},"end":{"line":43,"column":57}}]}},"code":["var Buffer = require('../utils/buffer')","var GF = require('./galois-field')","","/**"," * Multiplies two polynomials inside Galois Field"," *"," * @param  {Buffer} p1 Polynomial"," * @param  {Buffer} p2 Polynomial"," * @return {Buffer}    Product of p1 and p2"," */","exports.mul = function mul (p1, p2) {","  var coeff = new Buffer(p1.length + p2.length - 1)","  coeff.fill(0)","","  for (var i = 0; i < p1.length; i++) {","    for (var j = 0; j < p2.length; j++) {","      coeff[i + j] ^= GF.mul(p1[i], p2[j])","    }","  }","","  return coeff","}","","/**"," * Calculate the remainder of polynomials division"," *"," * @param  {Buffer} divident Polynomial"," * @param  {Buffer} divisor  Polynomial"," * @return {Buffer}          Remainder"," */","exports.mod = function mod (divident, divisor) {","  var result = new Buffer(divident)","","  while ((result.length - divisor.length) >= 0) {","    var coeff = result[0]","","    for (var i = 0; i < divisor.length; i++) {","      result[i] ^= GF.mul(divisor[i], coeff)","    }","","    // remove all zeros from buffer head","    var offset = 0","    while (offset < result.length && result[offset] === 0) offset++","    result = result.slice(offset)","  }","","  return result","}","","/**"," * Generate an irreducible generator polynomial of specified degree"," * (used by Reed-Solomon encoder)"," *"," * @param  {Number} degree Degree of the generator polynomial"," * @return {Buffer}        Buffer containing polynomial coefficients"," */","exports.generateECPolynomial = function generateECPolynomial (degree) {","  var poly = new Buffer([1])","  for (var i = 0; i < degree; i++) {","    poly = exports.mul(poly, [1, GF.exp(i)])","  }","","  return poly","}",""],"l":{"1":1,"2":1,"11":1,"12":0,"13":0,"15":0,"16":0,"17":0,"21":0,"31":1,"32":0,"34":0,"35":0,"37":0,"38":0,"42":0,"43":0,"44":0,"47":0,"57":1,"58":0,"59":0,"60":0,"63":0}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/galois-field.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/galois-field.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":255,"8":255,"9":255,"10":255,"11":128,"12":1,"13":257,"14":1,"15":0,"16":0,"17":0,"18":1,"19":0,"20":1,"21":0,"22":0,"23":0},"b":{"1":[128,127],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"initTables","line":14,"loc":{"start":{"line":14,"column":2},"end":{"line":14,"column":25}}},"2":{"name":"log","line":44,"loc":{"start":{"line":44,"column":14},"end":{"line":44,"column":31}}},"3":{"name":"exp","line":55,"loc":{"start":{"line":55,"column":14},"end":{"line":55,"column":31}}},"4":{"name":"mul","line":66,"loc":{"start":{"line":66,"column":14},"end":{"line":66,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":39}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"3":{"start":{"line":4,"column":0},"end":{"line":14,"column":1}},"4":{"start":{"line":14,"column":1},"end":{"line":36,"column":4}},"5":{"start":{"line":15,"column":2},"end":{"line":15,"column":11}},"6":{"start":{"line":16,"column":2},"end":{"line":27,"column":3}},"7":{"start":{"line":17,"column":4},"end":{"line":17,"column":20}},"8":{"start":{"line":18,"column":4},"end":{"line":18,"column":20}},"9":{"start":{"line":20,"column":4},"end":{"line":20,"column":11}},"10":{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},"11":{"start":{"line":25,"column":6},"end":{"line":25,"column":16}},"12":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"13":{"start":{"line":34,"column":4},"end":{"line":34,"column":37}},"14":{"start":{"line":44,"column":0},"end":{"line":47,"column":1}},"15":{"start":{"line":45,"column":2},"end":{"line":45,"column":46}},"16":{"start":{"line":45,"column":13},"end":{"line":45,"column":46}},"17":{"start":{"line":46,"column":2},"end":{"line":46,"column":21}},"18":{"start":{"line":55,"column":0},"end":{"line":57,"column":1}},"19":{"start":{"line":56,"column":2},"end":{"line":56,"column":21}},"20":{"start":{"line":66,"column":0},"end":{"line":72,"column":1}},"21":{"start":{"line":67,"column":2},"end":{"line":67,"column":34}},"22":{"start":{"line":67,"column":26},"end":{"line":67,"column":34}},"23":{"start":{"line":71,"column":2},"end":{"line":71,"column":47}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":4}},{"start":{"line":24,"column":4},"end":{"line":24,"column":4}}]},"2":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"3":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":2},"end":{"line":67,"column":2}},{"start":{"line":67,"column":2},"end":{"line":67,"column":2}}]},"4":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":6},"end":{"line":67,"column":13}},{"start":{"line":67,"column":17},"end":{"line":67,"column":24}}]}},"code":["var Buffer = require('../utils/buffer')","","var EXP_TABLE = new Buffer(512)","var LOG_TABLE = new Buffer(256)","","/**"," * Precompute the log and anti-log tables for faster computation later"," *"," * For each possible value in the galois field 2^8, we will pre-compute"," * the logarithm and anti-logarithm (exponential) of this value"," *"," * ref {@link https://en.wikiversity.org/wiki/Reed%E2%80%93Solomon_codes_for_coders#Introduction_to_mathematical_fields}"," */",";(function initTables () {","  var x = 1","  for (var i = 0; i < 255; i++) {","    EXP_TABLE[i] = x","    LOG_TABLE[x] = i","","    x <<= 1 // multiply by 2","","    // The QR code specification says to use byte-wise modulo 100011101 arithmetic.","    // This means that when a number is 256 or larger, it should be XORed with 0x11D.","    if (x & 0x100) { // similar to x >= 256, but a lot faster (because 0x100 == 256)","      x ^= 0x11D","    }","  }","","  // Optimization: double the size of the anti-log table so that we don't need to mod 255 to","  // stay inside the bounds (because we will mainly use this table for the multiplication of","  // two GF numbers, no more).","  // @see {@link mul}","  for (i = 255; i < 512; i++) {","    EXP_TABLE[i] = EXP_TABLE[i - 255]","  }","}())","","/**"," * Returns log value of n inside Galois Field"," *"," * @param  {Number} n"," * @return {Number}"," */","exports.log = function log (n) {","  if (n < 1) throw new Error('log(' + n + ')')","  return LOG_TABLE[n]","}","","/**"," * Returns anti-log value of n inside Galois Field"," *"," * @param  {Number} n"," * @return {Number}"," */","exports.exp = function exp (n) {","  return EXP_TABLE[n]","}","","/**"," * Multiplies two number inside Galois Field"," *"," * @param  {Number} x"," * @param  {Number} y"," * @return {Number}"," */","exports.mul = function mul (x, y) {","  if (x === 0 || y === 0) return 0","","  // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized","  // @see {@link initTables}","  return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]]","}",""],"l":{"1":1,"3":1,"4":1,"14":1,"15":1,"16":1,"17":255,"18":255,"20":255,"24":255,"25":128,"33":1,"34":257,"44":1,"45":0,"46":0,"55":1,"56":0,"66":1,"67":0,"71":0}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/version.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/version.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":1,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"getBestVersionForDataLength","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":74}}},"2":{"name":"getReservedBitsCount","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":46}}},"3":{"name":"getTotalBitsFromDataArray","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":55}}},"4":{"name":"(anonymous_4)","line":29,"loc":{"start":{"line":29,"column":19},"end":{"line":29,"column":35}}},"5":{"name":"getBestVersionForMixedData","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":69}}},"6":{"name":"isValid","line":54,"loc":{"start":{"line":54,"column":18},"end":{"line":54,"column":45}}},"7":{"name":"from","line":66,"loc":{"start":{"line":66,"column":15},"end":{"line":66,"column":51}}},"8":{"name":"getCapacity","line":83,"loc":{"start":{"line":83,"column":22},"end":{"line":83,"column":81}}},"9":{"name":"getBestVersionForData","line":129,"loc":{"start":{"line":129,"column":32},"end":{"line":129,"column":92}}},"10":{"name":"getEncodedBits","line":161,"loc":{"start":{"line":161,"column":25},"end":{"line":161,"column":59}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":30}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":47}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":49}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":28}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":32}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":98}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":36}},"8":{"start":{"line":11,"column":0},"end":{"line":19,"column":1}},"9":{"start":{"line":12,"column":2},"end":{"line":16,"column":3}},"10":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"11":{"start":{"line":14,"column":6},"end":{"line":14,"column":27}},"12":{"start":{"line":18,"column":2},"end":{"line":18,"column":18}},"13":{"start":{"line":21,"column":0},"end":{"line":24,"column":1}},"14":{"start":{"line":23,"column":2},"end":{"line":23,"column":54}},"15":{"start":{"line":26,"column":0},"end":{"line":35,"column":1}},"16":{"start":{"line":27,"column":2},"end":{"line":27,"column":19}},"17":{"start":{"line":29,"column":2},"end":{"line":32,"column":4}},"18":{"start":{"line":30,"column":4},"end":{"line":30,"column":63}},"19":{"start":{"line":31,"column":4},"end":{"line":31,"column":52}},"20":{"start":{"line":34,"column":2},"end":{"line":34,"column":18}},"21":{"start":{"line":37,"column":0},"end":{"line":46,"column":1}},"22":{"start":{"line":38,"column":2},"end":{"line":43,"column":3}},"23":{"start":{"line":39,"column":4},"end":{"line":39,"column":68}},"24":{"start":{"line":40,"column":4},"end":{"line":42,"column":5}},"25":{"start":{"line":41,"column":6},"end":{"line":41,"column":27}},"26":{"start":{"line":45,"column":2},"end":{"line":45,"column":18}},"27":{"start":{"line":54,"column":0},"end":{"line":56,"column":1}},"28":{"start":{"line":55,"column":2},"end":{"line":55,"column":57}},"29":{"start":{"line":66,"column":0},"end":{"line":72,"column":1}},"30":{"start":{"line":67,"column":2},"end":{"line":69,"column":3}},"31":{"start":{"line":68,"column":4},"end":{"line":68,"column":30}},"32":{"start":{"line":71,"column":2},"end":{"line":71,"column":21}},"33":{"start":{"line":83,"column":0},"end":{"line":119,"column":1}},"34":{"start":{"line":84,"column":2},"end":{"line":86,"column":3}},"35":{"start":{"line":85,"column":4},"end":{"line":85,"column":46}},"36":{"start":{"line":89,"column":2},"end":{"line":89,"column":51}},"37":{"start":{"line":89,"column":35},"end":{"line":89,"column":51}},"38":{"start":{"line":92,"column":2},"end":{"line":92,"column":61}},"39":{"start":{"line":95,"column":2},"end":{"line":95,"column":85}},"40":{"start":{"line":98,"column":2},"end":{"line":98,"column":70}},"41":{"start":{"line":100,"column":2},"end":{"line":100,"column":56}},"42":{"start":{"line":100,"column":27},"end":{"line":100,"column":56}},"43":{"start":{"line":102,"column":2},"end":{"line":102,"column":79}},"44":{"start":{"line":105,"column":2},"end":{"line":118,"column":3}},"45":{"start":{"line":107,"column":6},"end":{"line":107,"column":46}},"46":{"start":{"line":110,"column":6},"end":{"line":110,"column":46}},"47":{"start":{"line":113,"column":6},"end":{"line":113,"column":40}},"48":{"start":{"line":117,"column":6},"end":{"line":117,"column":39}},"49":{"start":{"line":129,"column":0},"end":{"line":149,"column":1}},"50":{"start":{"line":130,"column":2},"end":{"line":130,"column":9}},"51":{"start":{"line":132,"column":2},"end":{"line":132,"column":57}},"52":{"start":{"line":134,"column":2},"end":{"line":146,"column":3}},"53":{"start":{"line":135,"column":4},"end":{"line":137,"column":5}},"54":{"start":{"line":136,"column":6},"end":{"line":136,"column":50}},"55":{"start":{"line":139,"column":4},"end":{"line":141,"column":5}},"56":{"start":{"line":140,"column":6},"end":{"line":140,"column":14}},"57":{"start":{"line":143,"column":4},"end":{"line":143,"column":17}},"58":{"start":{"line":145,"column":4},"end":{"line":145,"column":14}},"59":{"start":{"line":148,"column":2},"end":{"line":148,"column":68}},"60":{"start":{"line":161,"column":0},"end":{"line":173,"column":1}},"61":{"start":{"line":162,"column":2},"end":{"line":164,"column":3}},"62":{"start":{"line":163,"column":4},"end":{"line":163,"column":46}},"63":{"start":{"line":166,"column":2},"end":{"line":166,"column":23}},"64":{"start":{"line":168,"column":2},"end":{"line":170,"column":3}},"65":{"start":{"line":169,"column":4},"end":{"line":169,"column":50}},"66":{"start":{"line":172,"column":2},"end":{"line":172,"column":28}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":13,"column":4}},{"start":{"line":13,"column":4},"end":{"line":13,"column":4}}]},"2":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":40,"column":4}},{"start":{"line":40,"column":4},"end":{"line":40,"column":4}}]},"3":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":9},"end":{"line":55,"column":24}},{"start":{"line":55,"column":28},"end":{"line":55,"column":40}},{"start":{"line":55,"column":44},"end":{"line":55,"column":57}}]},"4":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":2},"end":{"line":67,"column":2}},{"start":{"line":67,"column":2},"end":{"line":67,"column":2}}]},"5":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":2},"end":{"line":84,"column":2}},{"start":{"line":84,"column":2},"end":{"line":84,"column":2}}]},"6":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":2},"end":{"line":89,"column":2}},{"start":{"line":89,"column":2},"end":{"line":89,"column":2}}]},"7":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":2},"end":{"line":100,"column":2}},{"start":{"line":100,"column":2},"end":{"line":100,"column":2}}]},"8":{"line":105,"type":"switch","locations":[{"start":{"line":106,"column":4},"end":{"line":107,"column":46}},{"start":{"line":109,"column":4},"end":{"line":110,"column":46}},{"start":{"line":112,"column":4},"end":{"line":113,"column":40}},{"start":{"line":115,"column":4},"end":{"line":115,"column":19}},{"start":{"line":116,"column":4},"end":{"line":117,"column":39}}]},"9":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":2},"end":{"line":134,"column":2}},{"start":{"line":134,"column":2},"end":{"line":134,"column":2}}]},"10":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":4},"end":{"line":135,"column":4}},{"start":{"line":135,"column":4},"end":{"line":135,"column":4}}]},"11":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":4},"end":{"line":139,"column":4}},{"start":{"line":139,"column":4},"end":{"line":139,"column":4}}]},"12":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":2},"end":{"line":162,"column":2}},{"start":{"line":162,"column":2},"end":{"line":162,"column":2}}]},"13":{"line":162,"type":"binary-expr","locations":[{"start":{"line":162,"column":6},"end":{"line":162,"column":31}},{"start":{"line":162,"column":35},"end":{"line":162,"column":46}}]}},"code":["var Utils = require('./utils')","var ECCode = require('./error-correction-code')","var ECLevel = require('./error-correction-level')","var Mode = require('./mode')","var isArray = require('isarray')","","// Generator polynomial used to encode version information","var G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0)","var G18_BCH = Utils.getBCHDigit(G18)","","function getBestVersionForDataLength (mode, length, errorCorrectionLevel) {","  for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {","    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {","      return currentVersion","    }","  }","","  return undefined","}","","function getReservedBitsCount (mode, version) {","  // Character count indicator + mode indicator bits","  return Mode.getCharCountIndicator(mode, version) + 4","}","","function getTotalBitsFromDataArray (segments, version) {","  var totalBits = 0","","  segments.forEach(function (data) {","    var reservedBits = getReservedBitsCount(data.mode, version)","    totalBits += reservedBits + data.getBitsLength()","  })","","  return totalBits","}","","function getBestVersionForMixedData (segments, errorCorrectionLevel) {","  for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {","    var length = getTotalBitsFromDataArray(segments, currentVersion)","    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, Mode.MIXED)) {","      return currentVersion","    }","  }","","  return undefined","}","","/**"," * Check if QR Code version is valid"," *"," * @param  {Number}  version QR Code version"," * @return {Boolean}         true if valid version, false otherwise"," */","exports.isValid = function isValid (version) {","  return !isNaN(version) && version >= 1 && version <= 40","}","","/**"," * Returns version number from a value."," * If value is not a valid version, returns defaultValue"," *"," * @param  {Number|String} value        QR Code version"," * @param  {Number}        defaultValue Fallback value"," * @return {Number}                     QR Code version number"," */","exports.from = function from (value, defaultValue) {","  if (exports.isValid(value)) {","    return parseInt(value, 10)","  }","","  return defaultValue","}","","/**"," * Returns how much data can be stored with the specified QR code version"," * and error correction level"," *"," * @param  {Number} version              QR Code version (1-40)"," * @param  {Number} errorCorrectionLevel Error correction level"," * @param  {Mode}   mode                 Data mode"," * @return {Number}                      Quantity of storable data"," */","exports.getCapacity = function getCapacity (version, errorCorrectionLevel, mode) {","  if (!exports.isValid(version)) {","    throw new Error('Invalid QR Code version')","  }","","  // Use Byte mode as default","  if (typeof mode === 'undefined') mode = Mode.BYTE","","  // Total codewords for this QR code version (Data + Error correction)","  var totalCodewords = Utils.getSymbolTotalCodewords(version)","","  // Total number of error correction codewords","  var ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)","","  // Total number of data codewords","  var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8","","  if (mode === Mode.MIXED) return dataTotalCodewordsBits","","  var usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode, version)","","  // Return max number of storable codewords","  switch (mode) {","    case Mode.NUMERIC:","      return Math.floor((usableBits / 10) * 3)","","    case Mode.ALPHANUMERIC:","      return Math.floor((usableBits / 11) * 2)","","    case Mode.KANJI:","      return Math.floor(usableBits / 13)","","    case Mode.BYTE:","    default:","      return Math.floor(usableBits / 8)","  }","}","","/**"," * Returns the minimum version needed to contain the amount of data"," *"," * @param  {Segment} data                    Segment of data"," * @param  {Number} [errorCorrectionLevel=H] Error correction level"," * @param  {Mode} mode                       Data mode"," * @return {Number}                          QR Code version"," */","exports.getBestVersionForData = function getBestVersionForData (data, errorCorrectionLevel) {","  var seg","","  var ecl = ECLevel.from(errorCorrectionLevel, ECLevel.M)","","  if (isArray(data)) {","    if (data.length > 1) {","      return getBestVersionForMixedData(data, ecl)","    }","","    if (data.length === 0) {","      return 1","    }","","    seg = data[0]","  } else {","    seg = data","  }","","  return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl)","}","","/**"," * Returns version information with relative error correction bits"," *"," * The version information is included in QR Code symbols of version 7 or larger."," * It consists of an 18-bit sequence containing 6 data bits,"," * with 12 error correction bits calculated using the (18, 6) Golay code."," *"," * @param  {Number} version QR Code version"," * @return {Number}         Encoded version info bits"," */","exports.getEncodedBits = function getEncodedBits (version) {","  if (!exports.isValid(version) || version < 7) {","    throw new Error('Invalid QR Code version')","  }","","  var d = version << 12","","  while (Utils.getBCHDigit(d) - G18_BCH >= 0) {","    d ^= (G18 << (Utils.getBCHDigit(d) - G18_BCH))","  }","","  return (version << 12) | d","}",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"8":1,"9":1,"11":1,"12":0,"13":0,"14":0,"18":0,"21":1,"23":0,"26":1,"27":0,"29":0,"30":0,"31":0,"34":0,"37":1,"38":0,"39":0,"40":0,"41":0,"45":0,"54":1,"55":0,"66":1,"67":0,"68":0,"71":0,"83":1,"84":0,"85":0,"89":0,"92":0,"95":0,"98":0,"100":0,"102":0,"105":0,"107":0,"110":0,"113":0,"117":0,"129":1,"130":0,"132":0,"134":0,"135":0,"136":0,"139":0,"140":0,"143":0,"145":0,"148":0,"161":1,"162":0,"163":0,"166":0,"168":0,"169":0,"172":0}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/mode.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/mode.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":1,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0],"12":[0,0],"13":[0,0,0,0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"getCharCountIndicator","line":76,"loc":{"start":{"line":76,"column":32},"end":{"line":76,"column":79}}},"2":{"name":"getBestModeForData","line":94,"loc":{"start":{"line":94,"column":29},"end":{"line":94,"column":67}}},"3":{"name":"toString","line":107,"loc":{"start":{"line":107,"column":19},"end":{"line":107,"column":44}}},"4":{"name":"isValid","line":118,"loc":{"start":{"line":118,"column":18},"end":{"line":118,"column":42}}},"5":{"name":"fromString","line":128,"loc":{"start":{"line":128,"column":0},"end":{"line":128,"column":29}}},"6":{"name":"from","line":157,"loc":{"start":{"line":157,"column":15},"end":{"line":157,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":34}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":30}},"3":{"start":{"line":11,"column":0},"end":{"line":15,"column":1}},"4":{"start":{"line":26,"column":0},"end":{"line":30,"column":1}},"5":{"start":{"line":37,"column":0},"end":{"line":41,"column":1}},"6":{"start":{"line":52,"column":0},"end":{"line":56,"column":1}},"7":{"start":{"line":64,"column":0},"end":{"line":66,"column":1}},"8":{"start":{"line":76,"column":0},"end":{"line":86,"column":1}},"9":{"start":{"line":77,"column":2},"end":{"line":77,"column":60}},"10":{"start":{"line":77,"column":20},"end":{"line":77,"column":60}},"11":{"start":{"line":79,"column":2},"end":{"line":81,"column":3}},"12":{"start":{"line":80,"column":4},"end":{"line":80,"column":50}},"13":{"start":{"line":83,"column":2},"end":{"line":84,"column":46}},"14":{"start":{"line":83,"column":36},"end":{"line":83,"column":57}},"15":{"start":{"line":84,"column":7},"end":{"line":84,"column":46}},"16":{"start":{"line":84,"column":25},"end":{"line":84,"column":46}},"17":{"start":{"line":85,"column":2},"end":{"line":85,"column":23}},"18":{"start":{"line":94,"column":0},"end":{"line":99,"column":1}},"19":{"start":{"line":95,"column":2},"end":{"line":98,"column":26}},"20":{"start":{"line":95,"column":34},"end":{"line":95,"column":56}},"21":{"start":{"line":96,"column":7},"end":{"line":98,"column":26}},"22":{"start":{"line":96,"column":44},"end":{"line":96,"column":71}},"23":{"start":{"line":97,"column":7},"end":{"line":98,"column":26}},"24":{"start":{"line":97,"column":37},"end":{"line":97,"column":57}},"25":{"start":{"line":98,"column":7},"end":{"line":98,"column":26}},"26":{"start":{"line":107,"column":0},"end":{"line":110,"column":1}},"27":{"start":{"line":108,"column":2},"end":{"line":108,"column":37}},"28":{"start":{"line":108,"column":23},"end":{"line":108,"column":37}},"29":{"start":{"line":109,"column":2},"end":{"line":109,"column":33}},"30":{"start":{"line":118,"column":0},"end":{"line":120,"column":1}},"31":{"start":{"line":119,"column":2},"end":{"line":119,"column":40}},"32":{"start":{"line":128,"column":0},"end":{"line":147,"column":1}},"33":{"start":{"line":129,"column":2},"end":{"line":131,"column":3}},"34":{"start":{"line":130,"column":4},"end":{"line":130,"column":44}},"35":{"start":{"line":133,"column":2},"end":{"line":133,"column":34}},"36":{"start":{"line":135,"column":2},"end":{"line":146,"column":3}},"37":{"start":{"line":137,"column":6},"end":{"line":137,"column":28}},"38":{"start":{"line":139,"column":6},"end":{"line":139,"column":33}},"39":{"start":{"line":141,"column":6},"end":{"line":141,"column":26}},"40":{"start":{"line":143,"column":6},"end":{"line":143,"column":25}},"41":{"start":{"line":145,"column":6},"end":{"line":145,"column":48}},"42":{"start":{"line":157,"column":0},"end":{"line":167,"column":1}},"43":{"start":{"line":158,"column":2},"end":{"line":160,"column":3}},"44":{"start":{"line":159,"column":4},"end":{"line":159,"column":16}},"45":{"start":{"line":162,"column":2},"end":{"line":166,"column":3}},"46":{"start":{"line":163,"column":4},"end":{"line":163,"column":28}},"47":{"start":{"line":165,"column":4},"end":{"line":165,"column":23}}},"branchMap":{"1":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":2},"end":{"line":77,"column":2}},{"start":{"line":77,"column":2},"end":{"line":77,"column":2}}]},"2":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":2},"end":{"line":79,"column":2}},{"start":{"line":79,"column":2},"end":{"line":79,"column":2}}]},"3":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":2},"end":{"line":83,"column":2}},{"start":{"line":83,"column":2},"end":{"line":83,"column":2}}]},"4":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":6},"end":{"line":83,"column":18}},{"start":{"line":83,"column":22},"end":{"line":83,"column":34}}]},"5":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":7},"end":{"line":84,"column":7}},{"start":{"line":84,"column":7},"end":{"line":84,"column":7}}]},"6":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":2},"end":{"line":95,"column":2}},{"start":{"line":95,"column":2},"end":{"line":95,"column":2}}]},"7":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":7},"end":{"line":96,"column":7}},{"start":{"line":96,"column":7},"end":{"line":96,"column":7}}]},"8":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":7},"end":{"line":97,"column":7}},{"start":{"line":97,"column":7},"end":{"line":97,"column":7}}]},"9":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":2},"end":{"line":108,"column":2}},{"start":{"line":108,"column":2},"end":{"line":108,"column":2}}]},"10":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":6},"end":{"line":108,"column":10}},{"start":{"line":108,"column":14},"end":{"line":108,"column":21}}]},"11":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":9},"end":{"line":119,"column":13}},{"start":{"line":119,"column":17},"end":{"line":119,"column":25}},{"start":{"line":119,"column":29},"end":{"line":119,"column":40}}]},"12":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":2},"end":{"line":129,"column":2}},{"start":{"line":129,"column":2},"end":{"line":129,"column":2}}]},"13":{"line":135,"type":"switch","locations":[{"start":{"line":136,"column":4},"end":{"line":137,"column":28}},{"start":{"line":138,"column":4},"end":{"line":139,"column":33}},{"start":{"line":140,"column":4},"end":{"line":141,"column":26}},{"start":{"line":142,"column":4},"end":{"line":143,"column":25}},{"start":{"line":144,"column":4},"end":{"line":145,"column":48}}]},"14":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":2},"end":{"line":158,"column":2}},{"start":{"line":158,"column":2},"end":{"line":158,"column":2}}]}},"code":["var Version = require('./version')","var Regex = require('./regex')","","/**"," * Numeric mode encodes data from the decimal digit set (0 - 9)"," * (byte values 30HEX to 39HEX)."," * Normally, 3 data characters are represented by 10 bits."," *"," * @type {Object}"," */","exports.NUMERIC = {","  id: 'Numeric',","  bit: 1 << 0,","  ccBits: [10, 12, 14]","}","","/**"," * Alphanumeric mode encodes data from a set of 45 characters,"," * i.e. 10 numeric digits (0 - 9),"," *      26 alphabetic characters (A - Z),"," *   and 9 symbols (SP, $, %, *, +, -, ., /, :)."," * Normally, two input characters are represented by 11 bits."," *"," * @type {Object}"," */","exports.ALPHANUMERIC = {","  id: 'Alphanumeric',","  bit: 1 << 1,","  ccBits: [9, 11, 13]","}","","/**"," * In byte mode, data is encoded at 8 bits per character."," *"," * @type {Object}"," */","exports.BYTE = {","  id: 'Byte',","  bit: 1 << 2,","  ccBits: [8, 16, 16]","}","","/**"," * The Kanji mode efficiently encodes Kanji characters in accordance with"," * the Shift JIS system based on JIS X 0208."," * The Shift JIS values are shifted from the JIS X 0208 values."," * JIS X 0208 gives details of the shift coded representation."," * Each two-byte character value is compacted to a 13-bit binary codeword."," *"," * @type {Object}"," */","exports.KANJI = {","  id: 'Kanji',","  bit: 1 << 3,","  ccBits: [8, 10, 12]","}","","/**"," * Mixed mode will contain a sequences of data in a combination of any of"," * the modes described above"," *"," * @type {Object}"," */","exports.MIXED = {","  bit: -1","}","","/**"," * Returns the number of bits needed to store the data length"," * according to QR Code specifications."," *"," * @param  {Mode}   mode    Data mode"," * @param  {Number} version QR Code version"," * @return {Number}         Number of bits"," */","exports.getCharCountIndicator = function getCharCountIndicator (mode, version) {","  if (!mode.ccBits) throw new Error('Invalid mode: ' + mode)","","  if (!Version.isValid(version)) {","    throw new Error('Invalid version: ' + version)","  }","","  if (version >= 1 && version < 10) return mode.ccBits[0]","  else if (version < 27) return mode.ccBits[1]","  return mode.ccBits[2]","}","","/**"," * Returns the most efficient mode to store the specified data"," *"," * @param  {String} dataStr Input data string"," * @return {Mode}           Best mode"," */","exports.getBestModeForData = function getBestModeForData (dataStr) {","  if (Regex.testNumeric(dataStr)) return exports.NUMERIC","  else if (Regex.testAlphanumeric(dataStr)) return exports.ALPHANUMERIC","  else if (Regex.testKanji(dataStr)) return exports.KANJI","  else return exports.BYTE","}","","/**"," * Return mode name as string"," *"," * @param {Mode} mode Mode object"," * @returns {String}  Mode name"," */","exports.toString = function toString (mode) {","  if (mode && mode.id) return mode.id","  throw new Error('Invalid mode')","}","","/**"," * Check if input param is a valid mode object"," *"," * @param   {Mode}    mode Mode object"," * @returns {Boolean} True if valid mode, false otherwise"," */","exports.isValid = function isValid (mode) {","  return mode && mode.bit && mode.ccBits","}","","/**"," * Get mode object from its name"," *"," * @param   {String} string Mode name"," * @returns {Mode}          Mode object"," */","function fromString (string) {","  if (typeof string !== 'string') {","    throw new Error('Param is not a string')","  }","","  var lcStr = string.toLowerCase()","","  switch (lcStr) {","    case 'numeric':","      return exports.NUMERIC","    case 'alphanumeric':","      return exports.ALPHANUMERIC","    case 'kanji':","      return exports.KANJI","    case 'byte':","      return exports.BYTE","    default:","      throw new Error('Unknown mode: ' + string)","  }","}","","/**"," * Returns mode from a value."," * If value is not a valid mode, returns defaultValue"," *"," * @param  {Mode|String} value        Encoding mode"," * @param  {Mode}        defaultValue Fallback value"," * @return {Mode}                     Encoding mode"," */","exports.from = function from (value, defaultValue) {","  if (exports.isValid(value)) {","    return value","  }","","  try {","    return fromString(value)","  } catch (e) {","    return defaultValue","  }","}",""],"l":{"1":1,"2":1,"11":1,"26":1,"37":1,"52":1,"64":1,"76":1,"77":0,"79":0,"80":0,"83":0,"84":0,"85":0,"94":1,"95":0,"96":0,"97":0,"98":0,"107":1,"108":0,"109":0,"118":1,"119":0,"128":1,"129":0,"130":0,"133":0,"135":0,"137":0,"139":0,"141":0,"143":0,"145":0,"157":1,"158":0,"159":0,"162":0,"163":0,"165":0}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/regex.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/regex.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":1,"16":0,"17":1,"18":0},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"testKanji","line":19,"loc":{"start":{"line":19,"column":20},"end":{"line":19,"column":45}}},"2":{"name":"testNumeric","line":23,"loc":{"start":{"line":23,"column":22},"end":{"line":23,"column":49}}},"3":{"name":"testAlphanumeric","line":27,"loc":{"start":{"line":27,"column":27},"end":{"line":27,"column":59}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":22}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":36}},"3":{"start":{"line":3,"column":0},"end":{"line":6,"column":60}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":54}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":38}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":59}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":36}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":42}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":52}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":46}},"11":{"start":{"line":16,"column":0},"end":{"line":16,"column":50}},"12":{"start":{"line":17,"column":0},"end":{"line":17,"column":58}},"13":{"start":{"line":19,"column":0},"end":{"line":21,"column":1}},"14":{"start":{"line":20,"column":2},"end":{"line":20,"column":29}},"15":{"start":{"line":23,"column":0},"end":{"line":25,"column":1}},"16":{"start":{"line":24,"column":2},"end":{"line":24,"column":31}},"17":{"start":{"line":27,"column":0},"end":{"line":29,"column":1}},"18":{"start":{"line":28,"column":2},"end":{"line":28,"column":36}}},"branchMap":{},"code":["var numeric = '[0-9]+'","var alphanumeric = '[A-Z $%*+-./:]+'","var kanji = '(?:[\\u3000-\\u303F]|[\\u3040-\\u309F]|[\\u30A0-\\u30FF]|' +","  '[\\uFF00-\\uFFEF]|[\\u4E00-\\u9FAF]|[\\u2605-\\u2606]|[\\u2190-\\u2195]|\\u203B|' +","  '[\\u2010\\u2015\\u2018\\u2019\\u2025\\u2026\\u201C\\u201D\\u2225\\u2260]|' +","  '[\\u0391-\\u0451]|[\\u00A7\\u00A8\\u00B1\\u00B4\\u00D7\\u00F7])+'","var byte = '(?:(?![A-Z0-9 $%*+-./:]|' + kanji + ').)+'","","exports.KANJI = new RegExp(kanji, 'g')","exports.BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+-./:]+', 'g')","exports.BYTE = new RegExp(byte, 'g')","exports.NUMERIC = new RegExp(numeric, 'g')","exports.ALPHANUMERIC = new RegExp(alphanumeric, 'g')","","var TEST_KANJI = new RegExp('^' + kanji + '$')","var TEST_NUMERIC = new RegExp('^' + numeric + '$')","var TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+-./:]+$')","","exports.testKanji = function testKanji (str) {","  return TEST_KANJI.test(str)","}","","exports.testNumeric = function testNumeric (str) {","  return TEST_NUMERIC.test(str)","}","","exports.testAlphanumeric = function testAlphanumeric (str) {","  return TEST_ALPHANUMERIC.test(str)","}",""],"l":{"1":1,"2":1,"3":1,"7":1,"9":1,"10":1,"11":1,"12":1,"13":1,"15":1,"16":1,"17":1,"19":1,"20":0,"23":1,"24":0,"27":1,"28":0}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/format-info.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/format-info.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"getEncodedBits","line":17,"loc":{"start":{"line":17,"column":25},"end":{"line":17,"column":78}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":30}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":85}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":70}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":36}},"5":{"start":{"line":17,"column":0},"end":{"line":29,"column":1}},"6":{"start":{"line":18,"column":2},"end":{"line":18,"column":53}},"7":{"start":{"line":19,"column":2},"end":{"line":19,"column":20}},"8":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"9":{"start":{"line":22,"column":4},"end":{"line":22,"column":50}},"10":{"start":{"line":28,"column":2},"end":{"line":28,"column":38}}},"branchMap":{},"code":["var Utils = require('./utils')","","var G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0)","var G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1)","var G15_BCH = Utils.getBCHDigit(G15)","","/**"," * Returns format information with relative error correction bits"," *"," * The format information is a 15-bit sequence containing 5 data bits,"," * with 10 error correction bits calculated using the (15, 5) BCH code."," *"," * @param  {Number} errorCorrectionLevel Error correction level"," * @param  {Number} mask                 Mask pattern"," * @return {Number}                      Encoded format information bits"," */","exports.getEncodedBits = function getEncodedBits (errorCorrectionLevel, mask) {","  var data = ((errorCorrectionLevel.bit << 3) | mask)","  var d = data << 10","","  while (Utils.getBCHDigit(d) - G15_BCH >= 0) {","    d ^= (G15 << (Utils.getBCHDigit(d) - G15_BCH))","  }","","  // xor final data with mask pattern in order to ensure that","  // no combination of Error Correction Level and data mask pattern","  // will result in an all-zero data string","  return ((data << 10) | d) ^ G15_MASK","}",""],"l":{"1":1,"3":1,"4":1,"5":1,"17":1,"18":0,"19":0,"21":0,"22":0,"28":0}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/segments.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/segments.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":1,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":1,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":1,"113":0},"b":{"1":[0,0],"2":[0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0,0],"15":[0,0],"16":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"getStringByteLength","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":35}}},"2":{"name":"getSegments","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":40}}},"3":{"name":"getSegmentsFromString","line":51,"loc":{"start":{"line":51,"column":0},"end":{"line":51,"column":41}}},"4":{"name":"(anonymous_4)","line":68,"loc":{"start":{"line":68,"column":10},"end":{"line":68,"column":28}}},"5":{"name":"(anonymous_5)","line":71,"loc":{"start":{"line":71,"column":9},"end":{"line":71,"column":24}}},"6":{"name":"getSegmentBitsLength","line":88,"loc":{"start":{"line":88,"column":0},"end":{"line":88,"column":45}}},"7":{"name":"mergeSegments","line":107,"loc":{"start":{"line":107,"column":0},"end":{"line":107,"column":30}}},"8":{"name":"(anonymous_8)","line":108,"loc":{"start":{"line":108,"column":21},"end":{"line":108,"column":42}}},"9":{"name":"buildNodes","line":136,"loc":{"start":{"line":136,"column":0},"end":{"line":136,"column":27}}},"10":{"name":"buildGraph","line":180,"loc":{"start":{"line":180,"column":0},"end":{"line":180,"column":37}}},"11":{"name":"buildSingleSegment","line":233,"loc":{"start":{"line":233,"column":0},"end":{"line":233,"column":46}}},"12":{"name":"fromArray","line":281,"loc":{"start":{"line":281,"column":20},"end":{"line":281,"column":47}}},"13":{"name":"(anonymous_13)","line":282,"loc":{"start":{"line":282,"column":22},"end":{"line":282,"column":42}}},"14":{"name":"fromString","line":301,"loc":{"start":{"line":301,"column":21},"end":{"line":301,"column":57}}},"15":{"name":"rawSplit","line":326,"loc":{"start":{"line":326,"column":19},"end":{"line":326,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":28}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":43}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":53}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":37}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":39}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":30}},"8":{"start":{"line":8,"column":0},"end":{"line":8,"column":36}},"9":{"start":{"line":16,"column":0},"end":{"line":18,"column":1}},"10":{"start":{"line":17,"column":2},"end":{"line":17,"column":49}},"11":{"start":{"line":28,"column":0},"end":{"line":42,"column":1}},"12":{"start":{"line":29,"column":2},"end":{"line":29,"column":19}},"13":{"start":{"line":30,"column":2},"end":{"line":30,"column":12}},"14":{"start":{"line":32,"column":2},"end":{"line":39,"column":3}},"15":{"start":{"line":33,"column":4},"end":{"line":38,"column":6}},"16":{"start":{"line":41,"column":2},"end":{"line":41,"column":17}},"17":{"start":{"line":51,"column":0},"end":{"line":78,"column":1}},"18":{"start":{"line":52,"column":2},"end":{"line":52,"column":65}},"19":{"start":{"line":53,"column":2},"end":{"line":53,"column":80}},"20":{"start":{"line":54,"column":2},"end":{"line":54,"column":14}},"21":{"start":{"line":55,"column":2},"end":{"line":55,"column":15}},"22":{"start":{"line":57,"column":2},"end":{"line":63,"column":3}},"23":{"start":{"line":58,"column":4},"end":{"line":58,"column":58}},"24":{"start":{"line":59,"column":4},"end":{"line":59,"column":61}},"25":{"start":{"line":61,"column":4},"end":{"line":61,"column":64}},"26":{"start":{"line":62,"column":4},"end":{"line":62,"column":18}},"27":{"start":{"line":65,"column":2},"end":{"line":65,"column":62}},"28":{"start":{"line":67,"column":2},"end":{"line":77,"column":6}},"29":{"start":{"line":69,"column":6},"end":{"line":69,"column":32}},"30":{"start":{"line":72,"column":6},"end":{"line":76,"column":7}},"31":{"start":{"line":88,"column":0},"end":{"line":99,"column":1}},"32":{"start":{"line":89,"column":2},"end":{"line":98,"column":3}},"33":{"start":{"line":91,"column":6},"end":{"line":91,"column":46}},"34":{"start":{"line":93,"column":6},"end":{"line":93,"column":51}},"35":{"start":{"line":95,"column":6},"end":{"line":95,"column":44}},"36":{"start":{"line":97,"column":6},"end":{"line":97,"column":43}},"37":{"start":{"line":107,"column":0},"end":{"line":118,"column":1}},"38":{"start":{"line":108,"column":2},"end":{"line":117,"column":8}},"39":{"start":{"line":109,"column":4},"end":{"line":109,"column":66}},"40":{"start":{"line":110,"column":4},"end":{"line":113,"column":5}},"41":{"start":{"line":111,"column":6},"end":{"line":111,"column":43}},"42":{"start":{"line":112,"column":6},"end":{"line":112,"column":16}},"43":{"start":{"line":115,"column":4},"end":{"line":115,"column":18}},"44":{"start":{"line":116,"column":4},"end":{"line":116,"column":14}},"45":{"start":{"line":136,"column":0},"end":{"line":166,"column":1}},"46":{"start":{"line":137,"column":2},"end":{"line":137,"column":16}},"47":{"start":{"line":138,"column":2},"end":{"line":163,"column":3}},"48":{"start":{"line":139,"column":4},"end":{"line":139,"column":21}},"49":{"start":{"line":141,"column":4},"end":{"line":162,"column":5}},"50":{"start":{"line":143,"column":8},"end":{"line":146,"column":10}},"51":{"start":{"line":147,"column":8},"end":{"line":147,"column":13}},"52":{"start":{"line":149,"column":8},"end":{"line":151,"column":10}},"53":{"start":{"line":152,"column":8},"end":{"line":152,"column":13}},"54":{"start":{"line":154,"column":8},"end":{"line":156,"column":10}},"55":{"start":{"line":157,"column":8},"end":{"line":157,"column":13}},"56":{"start":{"line":159,"column":8},"end":{"line":161,"column":10}},"57":{"start":{"line":165,"column":2},"end":{"line":165,"column":14}},"58":{"start":{"line":180,"column":0},"end":{"line":223,"column":1}},"59":{"start":{"line":181,"column":2},"end":{"line":181,"column":16}},"60":{"start":{"line":182,"column":2},"end":{"line":182,"column":27}},"61":{"start":{"line":183,"column":2},"end":{"line":183,"column":29}},"62":{"start":{"line":185,"column":2},"end":{"line":216,"column":3}},"63":{"start":{"line":186,"column":4},"end":{"line":186,"column":28}},"64":{"start":{"line":187,"column":4},"end":{"line":187,"column":27}},"65":{"start":{"line":189,"column":4},"end":{"line":213,"column":5}},"66":{"start":{"line":190,"column":6},"end":{"line":190,"column":29}},"67":{"start":{"line":191,"column":6},"end":{"line":191,"column":26}},"68":{"start":{"line":193,"column":6},"end":{"line":193,"column":30}},"69":{"start":{"line":194,"column":6},"end":{"line":194,"column":47}},"70":{"start":{"line":195,"column":6},"end":{"line":195,"column":21}},"71":{"start":{"line":197,"column":6},"end":{"line":212,"column":7}},"72":{"start":{"line":198,"column":8},"end":{"line":198,"column":39}},"73":{"start":{"line":200,"column":8},"end":{"line":211,"column":9}},"74":{"start":{"line":201,"column":10},"end":{"line":203,"column":72}},"75":{"start":{"line":205,"column":10},"end":{"line":205,"column":52}},"76":{"start":{"line":207,"column":10},"end":{"line":207,"column":74}},"77":{"start":{"line":207,"column":33},"end":{"line":207,"column":74}},"78":{"start":{"line":209,"column":10},"end":{"line":210,"column":62}},"79":{"start":{"line":215,"column":4},"end":{"line":215,"column":32}},"80":{"start":{"line":218,"column":2},"end":{"line":220,"column":3}},"81":{"start":{"line":219,"column":4},"end":{"line":219,"column":36}},"82":{"start":{"line":222,"column":2},"end":{"line":222,"column":37}},"83":{"start":{"line":233,"column":0},"end":{"line":264,"column":1}},"84":{"start":{"line":234,"column":2},"end":{"line":234,"column":10}},"85":{"start":{"line":235,"column":2},"end":{"line":235,"column":46}},"86":{"start":{"line":237,"column":2},"end":{"line":237,"column":39}},"87":{"start":{"line":240,"column":2},"end":{"line":244,"column":3}},"88":{"start":{"line":241,"column":4},"end":{"line":243,"column":58}},"89":{"start":{"line":247,"column":2},"end":{"line":249,"column":3}},"90":{"start":{"line":248,"column":4},"end":{"line":248,"column":20}},"91":{"start":{"line":251,"column":2},"end":{"line":263,"column":3}},"92":{"start":{"line":253,"column":6},"end":{"line":253,"column":34}},"93":{"start":{"line":256,"column":6},"end":{"line":256,"column":39}},"94":{"start":{"line":259,"column":6},"end":{"line":259,"column":32}},"95":{"start":{"line":262,"column":6},"end":{"line":262,"column":31}},"96":{"start":{"line":281,"column":0},"end":{"line":291,"column":1}},"97":{"start":{"line":282,"column":2},"end":{"line":290,"column":8}},"98":{"start":{"line":283,"column":4},"end":{"line":287,"column":5}},"99":{"start":{"line":284,"column":6},"end":{"line":284,"column":45}},"100":{"start":{"line":285,"column":11},"end":{"line":287,"column":5}},"101":{"start":{"line":286,"column":6},"end":{"line":286,"column":54}},"102":{"start":{"line":289,"column":4},"end":{"line":289,"column":14}},"103":{"start":{"line":301,"column":0},"end":{"line":314,"column":1}},"104":{"start":{"line":302,"column":2},"end":{"line":302,"column":68}},"105":{"start":{"line":304,"column":2},"end":{"line":304,"column":30}},"106":{"start":{"line":305,"column":2},"end":{"line":305,"column":40}},"107":{"start":{"line":306,"column":2},"end":{"line":306,"column":58}},"108":{"start":{"line":308,"column":2},"end":{"line":308,"column":24}},"109":{"start":{"line":309,"column":2},"end":{"line":311,"column":3}},"110":{"start":{"line":310,"column":4},"end":{"line":310,"column":49}},"111":{"start":{"line":313,"column":2},"end":{"line":313,"column":56}},"112":{"start":{"line":326,"column":0},"end":{"line":330,"column":1}},"113":{"start":{"line":327,"column":2},"end":{"line":329,"column":3}}},"branchMap":{"1":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":2},"end":{"line":57,"column":2}},{"start":{"line":57,"column":2},"end":{"line":57,"column":2}}]},"2":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":91,"column":46}},{"start":{"line":92,"column":4},"end":{"line":93,"column":51}},{"start":{"line":94,"column":4},"end":{"line":95,"column":44}},{"start":{"line":96,"column":4},"end":{"line":97,"column":43}}]},"3":{"line":109,"type":"cond-expr","locations":[{"start":{"line":109,"column":40},"end":{"line":109,"column":59}},{"start":{"line":109,"column":62},"end":{"line":109,"column":66}}]},"4":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":4},"end":{"line":110,"column":4}},{"start":{"line":110,"column":4},"end":{"line":110,"column":4}}]},"5":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":8},"end":{"line":110,"column":15}},{"start":{"line":110,"column":19},"end":{"line":110,"column":45}}]},"6":{"line":141,"type":"switch","locations":[{"start":{"line":142,"column":6},"end":{"line":147,"column":13}},{"start":{"line":148,"column":6},"end":{"line":152,"column":13}},{"start":{"line":153,"column":6},"end":{"line":157,"column":13}},{"start":{"line":158,"column":6},"end":{"line":161,"column":10}}]},"7":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":8},"end":{"line":200,"column":8}},{"start":{"line":200,"column":8},"end":{"line":200,"column":8}}]},"8":{"line":200,"type":"binary-expr","locations":[{"start":{"line":200,"column":12},"end":{"line":200,"column":29}},{"start":{"line":200,"column":33},"end":{"line":200,"column":74}}]},"9":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":10},"end":{"line":207,"column":10}},{"start":{"line":207,"column":10},"end":{"line":207,"column":10}}]},"10":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":2},"end":{"line":240,"column":2}},{"start":{"line":240,"column":2},"end":{"line":240,"column":2}}]},"11":{"line":240,"type":"binary-expr","locations":[{"start":{"line":240,"column":6},"end":{"line":240,"column":24}},{"start":{"line":240,"column":28},"end":{"line":240,"column":51}}]},"12":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":2},"end":{"line":247,"column":2}},{"start":{"line":247,"column":2},"end":{"line":247,"column":2}}]},"13":{"line":247,"type":"binary-expr","locations":[{"start":{"line":247,"column":6},"end":{"line":247,"column":25}},{"start":{"line":247,"column":29},"end":{"line":247,"column":56}}]},"14":{"line":251,"type":"switch","locations":[{"start":{"line":252,"column":4},"end":{"line":253,"column":34}},{"start":{"line":255,"column":4},"end":{"line":256,"column":39}},{"start":{"line":258,"column":4},"end":{"line":259,"column":32}},{"start":{"line":261,"column":4},"end":{"line":262,"column":31}}]},"15":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":4},"end":{"line":283,"column":4}},{"start":{"line":283,"column":4},"end":{"line":283,"column":4}}]},"16":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":11},"end":{"line":285,"column":11}},{"start":{"line":285,"column":11},"end":{"line":285,"column":11}}]}},"code":["var Mode = require('./mode')","var NumericData = require('./numeric-data')","var AlphanumericData = require('./alphanumeric-data')","var ByteData = require('./byte-data')","var KanjiData = require('./kanji-data')","var Regex = require('./regex')","var Utils = require('./utils')","var dijkstra = require('dijkstrajs')","","/**"," * Returns UTF8 byte length"," *"," * @param  {String} str Input string"," * @return {Number}     Number of byte"," */","function getStringByteLength (str) {","  return unescape(encodeURIComponent(str)).length","}","","/**"," * Get a list of segments of the specified mode"," * from a string"," *"," * @param  {Mode}   mode Segment mode"," * @param  {String} str  String to process"," * @return {Array}       Array of object with segments data"," */","function getSegments (regex, mode, str) {","  var segments = []","  var result","","  while ((result = regex.exec(str)) !== null) {","    segments.push({","      data: result[0],","      index: result.index,","      mode: mode,","      length: result[0].length","    })","  }","","  return segments","}","","/**"," * Extracts a series of segments with the appropriate"," * modes from a string"," *"," * @param  {String} dataStr Input string"," * @return {Array}          Array of object with segments data"," */","function getSegmentsFromString (dataStr) {","  var numSegs = getSegments(Regex.NUMERIC, Mode.NUMERIC, dataStr)","  var alphaNumSegs = getSegments(Regex.ALPHANUMERIC, Mode.ALPHANUMERIC, dataStr)","  var byteSegs","  var kanjiSegs","","  if (Utils.isKanjiModeEnabled()) {","    byteSegs = getSegments(Regex.BYTE, Mode.BYTE, dataStr)","    kanjiSegs = getSegments(Regex.KANJI, Mode.KANJI, dataStr)","  } else {","    byteSegs = getSegments(Regex.BYTE_KANJI, Mode.BYTE, dataStr)","    kanjiSegs = []","  }","","  var segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs)","","  return segs","    .sort(function (s1, s2) {","      return s1.index - s2.index","    })","    .map(function (obj) {","      return {","        data: obj.data,","        mode: obj.mode,","        length: obj.length","      }","    })","}","","/**"," * Returns how many bits are needed to encode a string of"," * specified length with the specified mode"," *"," * @param  {Number} length String length"," * @param  {Mode} mode     Segment mode"," * @return {Number}        Bit length"," */","function getSegmentBitsLength (length, mode) {","  switch (mode) {","    case Mode.NUMERIC:","      return NumericData.getBitsLength(length)","    case Mode.ALPHANUMERIC:","      return AlphanumericData.getBitsLength(length)","    case Mode.KANJI:","      return KanjiData.getBitsLength(length)","    case Mode.BYTE:","      return ByteData.getBitsLength(length)","  }","}","","/**"," * Merges adjacent segments which have the same mode"," *"," * @param  {Array} segs Array of object with segments data"," * @return {Array}      Array of object with segments data"," */","function mergeSegments (segs) {","  return segs.reduce(function (acc, curr) {","    var prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null","    if (prevSeg && prevSeg.mode === curr.mode) {","      acc[acc.length - 1].data += curr.data","      return acc","    }","","    acc.push(curr)","    return acc","  }, [])","}","","/**"," * Generates a list of all possible nodes combination which"," * will be used to build a segments graph."," *"," * Nodes are divided by groups. Each group will contain a list of all the modes"," * in which is possible to encode the given text."," *"," * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte."," * The group for '12345' will contain then 3 objects, one for each"," * possible encoding mode."," *"," * Each node represents a possible segment."," *"," * @param  {Array} segs Array of object with segments data"," * @return {Array}      Array of object with segments data"," */","function buildNodes (segs) {","  var nodes = []","  for (var i = 0; i < segs.length; i++) {","    var seg = segs[i]","","    switch (seg.mode) {","      case Mode.NUMERIC:","        nodes.push([seg,","          { data: seg.data, mode: Mode.ALPHANUMERIC, length: seg.length },","          { data: seg.data, mode: Mode.BYTE, length: seg.length }","        ])","        break","      case Mode.ALPHANUMERIC:","        nodes.push([seg,","          { data: seg.data, mode: Mode.BYTE, length: seg.length }","        ])","        break","      case Mode.KANJI:","        nodes.push([seg,","          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }","        ])","        break","      case Mode.BYTE:","        nodes.push([","          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }","        ])","    }","  }","","  return nodes","}","","/**"," * Builds a graph from a list of nodes."," * All segments in each node group will be connected with all the segments of"," * the next group and so on."," *"," * At each connection will be assigned a weight depending on the"," * segment's byte length."," *"," * @param  {Array} nodes    Array of object with segments data"," * @param  {Number} version QR Code version"," * @return {Object}         Graph of all possible segments"," */","function buildGraph (nodes, version) {","  var table = {}","  var graph = {'start': {}}","  var prevNodeIds = ['start']","","  for (var i = 0; i < nodes.length; i++) {","    var nodeGroup = nodes[i]","    var currentNodeIds = []","","    for (var j = 0; j < nodeGroup.length; j++) {","      var node = nodeGroup[j]","      var key = '' + i + j","","      currentNodeIds.push(key)","      table[key] = { node: node, lastCount: 0 }","      graph[key] = {}","","      for (var n = 0; n < prevNodeIds.length; n++) {","        var prevNodeId = prevNodeIds[n]","","        if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {","          graph[prevNodeId][key] =","            getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) -","            getSegmentBitsLength(table[prevNodeId].lastCount, node.mode)","","          table[prevNodeId].lastCount += node.length","        } else {","          if (table[prevNodeId]) table[prevNodeId].lastCount = node.length","","          graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) +","            4 + Mode.getCharCountIndicator(node.mode, version) // switch cost","        }","      }","    }","","    prevNodeIds = currentNodeIds","  }","","  for (n = 0; n < prevNodeIds.length; n++) {","    graph[prevNodeIds[n]]['end'] = 0","  }","","  return { map: graph, table: table }","}","","/**"," * Builds a segment from a specified data and mode."," * If a mode is not specified, the more suitable will be used."," *"," * @param  {String} data             Input data"," * @param  {Mode | String} modesHint Data mode"," * @return {Segment}                 Segment"," */","function buildSingleSegment (data, modesHint) {","  var mode","  var bestMode = Mode.getBestModeForData(data)","","  mode = Mode.from(modesHint, bestMode)","","  // Make sure data can be encoded","  if (mode !== Mode.BYTE && mode.bit < bestMode.bit) {","    throw new Error('\"' + data + '\"' +","      ' cannot be encoded with mode ' + Mode.toString(mode) +","      '.\\n Suggested mode is: ' + Mode.toString(bestMode))","  }","","  // Use Mode.BYTE if Kanji support is disabled","  if (mode === Mode.KANJI && !Utils.isKanjiModeEnabled()) {","    mode = Mode.BYTE","  }","","  switch (mode) {","    case Mode.NUMERIC:","      return new NumericData(data)","","    case Mode.ALPHANUMERIC:","      return new AlphanumericData(data)","","    case Mode.KANJI:","      return new KanjiData(data)","","    case Mode.BYTE:","      return new ByteData(data)","  }","}","","/**"," * Builds a list of segments from an array."," * Array can contain Strings or Objects with segment's info."," *"," * For each item which is a string, will be generated a segment with the given"," * string and the more appropriate encoding mode."," *"," * For each item which is an object, will be generated a segment with the given"," * data and mode."," * Objects must contain at least the property \"data\"."," * If property \"mode\" is not present, the more suitable mode will be used."," *"," * @param  {Array} array Array of objects with segments data"," * @return {Array}       Array of Segments"," */","exports.fromArray = function fromArray (array) {","  return array.reduce(function (acc, seg) {","    if (typeof seg === 'string') {","      acc.push(buildSingleSegment(seg, null))","    } else if (seg.data) {","      acc.push(buildSingleSegment(seg.data, seg.mode))","    }","","    return acc","  }, [])","}","","/**"," * Builds an optimized sequence of segments from a string,"," * which will produce the shortest possible bitstream."," *"," * @param  {String} data    Input string"," * @param  {Number} version QR Code version"," * @return {Array}          Array of segments"," */","exports.fromString = function fromString (data, version) {","  var segs = getSegmentsFromString(data, Utils.isKanjiModeEnabled())","","  var nodes = buildNodes(segs)","  var graph = buildGraph(nodes, version)","  var path = dijkstra.find_path(graph.map, 'start', 'end')","","  var optimizedSegs = []","  for (var i = 1; i < path.length - 1; i++) {","    optimizedSegs.push(graph.table[path[i]].node)","  }","","  return exports.fromArray(mergeSegments(optimizedSegs))","}","","/**"," * Splits a string in various segments with the modes which"," * best represent their content."," * The produced segments are far from being optimized."," * The output of this function is only used to estimate a QR Code version"," * which may contain the data."," *"," * @param  {string} data Input string"," * @return {Array}       Array of segments"," */","exports.rawSplit = function rawSplit (data) {","  return exports.fromArray(","    getSegmentsFromString(data, Utils.isKanjiModeEnabled())","  )","}",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"16":1,"17":0,"28":1,"29":0,"30":0,"32":0,"33":0,"41":0,"51":1,"52":0,"53":0,"54":0,"55":0,"57":0,"58":0,"59":0,"61":0,"62":0,"65":0,"67":0,"69":0,"72":0,"88":1,"89":0,"91":0,"93":0,"95":0,"97":0,"107":1,"108":0,"109":0,"110":0,"111":0,"112":0,"115":0,"116":0,"136":1,"137":0,"138":0,"139":0,"141":0,"143":0,"147":0,"149":0,"152":0,"154":0,"157":0,"159":0,"165":0,"180":1,"181":0,"182":0,"183":0,"185":0,"186":0,"187":0,"189":0,"190":0,"191":0,"193":0,"194":0,"195":0,"197":0,"198":0,"200":0,"201":0,"205":0,"207":0,"209":0,"215":0,"218":0,"219":0,"222":0,"233":1,"234":0,"235":0,"237":0,"240":0,"241":0,"247":0,"248":0,"251":0,"253":0,"256":0,"259":0,"262":0,"281":1,"282":0,"283":0,"284":0,"285":0,"286":0,"289":0,"301":1,"302":0,"304":0,"305":0,"306":0,"308":0,"309":0,"310":0,"313":0,"326":1,"327":0}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/numeric-data.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/numeric-data.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":1,"8":0,"9":1,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"NumericData","line":3,"loc":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}}},"2":{"name":"getBitsLength","line":8,"loc":{"start":{"line":8,"column":28},"end":{"line":8,"column":60}}},"3":{"name":"getLength","line":12,"loc":{"start":{"line":12,"column":34},"end":{"line":12,"column":56}}},"4":{"name":"getBitsLength","line":16,"loc":{"start":{"line":16,"column":38},"end":{"line":16,"column":64}}},"5":{"name":"write","line":20,"loc":{"start":{"line":20,"column":30},"end":{"line":20,"column":57}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":28}},"2":{"start":{"line":3,"column":0},"end":{"line":6,"column":1}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":26}},"4":{"start":{"line":5,"column":2},"end":{"line":5,"column":29}},"5":{"start":{"line":8,"column":0},"end":{"line":10,"column":1}},"6":{"start":{"line":9,"column":2},"end":{"line":9,"column":82}},"7":{"start":{"line":12,"column":0},"end":{"line":14,"column":1}},"8":{"start":{"line":13,"column":2},"end":{"line":13,"column":25}},"9":{"start":{"line":16,"column":0},"end":{"line":18,"column":1}},"10":{"start":{"line":17,"column":2},"end":{"line":17,"column":52}},"11":{"start":{"line":20,"column":0},"end":{"line":41,"column":1}},"12":{"start":{"line":21,"column":2},"end":{"line":21,"column":21}},"13":{"start":{"line":25,"column":2},"end":{"line":30,"column":3}},"14":{"start":{"line":26,"column":4},"end":{"line":26,"column":34}},"15":{"start":{"line":27,"column":4},"end":{"line":27,"column":31}},"16":{"start":{"line":29,"column":4},"end":{"line":29,"column":28}},"17":{"start":{"line":34,"column":2},"end":{"line":34,"column":41}},"18":{"start":{"line":35,"column":2},"end":{"line":40,"column":3}},"19":{"start":{"line":36,"column":4},"end":{"line":36,"column":31}},"20":{"start":{"line":37,"column":4},"end":{"line":37,"column":31}},"21":{"start":{"line":39,"column":4},"end":{"line":39,"column":46}},"22":{"start":{"line":43,"column":0},"end":{"line":43,"column":28}}},"branchMap":{"1":{"line":9,"type":"cond-expr","locations":[{"start":{"line":9,"column":56},"end":{"line":9,"column":76}},{"start":{"line":9,"column":80},"end":{"line":9,"column":81}}]},"2":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]}},"code":["var Mode = require('./mode')","","function NumericData (data) {","  this.mode = Mode.NUMERIC","  this.data = data.toString()","}","","NumericData.getBitsLength = function getBitsLength (length) {","  return 10 * Math.floor(length / 3) + ((length % 3) ? ((length % 3) * 3 + 1) : 0)","}","","NumericData.prototype.getLength = function getLength () {","  return this.data.length","}","","NumericData.prototype.getBitsLength = function getBitsLength () {","  return NumericData.getBitsLength(this.data.length)","}","","NumericData.prototype.write = function write (bitBuffer) {","  var i, group, value","","  // The input data string is divided into groups of three digits,","  // and each group is converted to its 10-bit binary equivalent.","  for (i = 0; i + 3 <= this.data.length; i += 3) {","    group = this.data.substr(i, 3)","    value = parseInt(group, 10)","","    bitBuffer.put(value, 10)","  }","","  // If the number of input digits is not an exact multiple of three,","  // the final one or two digits are converted to 4 or 7 bits respectively.","  var remainingNum = this.data.length - i","  if (remainingNum > 0) {","    group = this.data.substr(i)","    value = parseInt(group, 10)","","    bitBuffer.put(value, remainingNum * 3 + 1)","  }","}","","module.exports = NumericData",""],"l":{"1":1,"3":1,"4":0,"5":0,"8":1,"9":0,"12":1,"13":0,"16":1,"17":0,"20":1,"21":0,"25":0,"26":0,"27":0,"29":0,"34":0,"35":0,"36":0,"37":0,"39":0,"43":1}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/alphanumeric-data.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/alphanumeric-data.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":1,"7":0,"8":1,"9":0,"10":1,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"AlphanumericData","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":33}}},"2":{"name":"getBitsLength","line":24,"loc":{"start":{"line":24,"column":33},"end":{"line":24,"column":65}}},"3":{"name":"getLength","line":28,"loc":{"start":{"line":28,"column":39},"end":{"line":28,"column":61}}},"4":{"name":"getBitsLength","line":32,"loc":{"start":{"line":32,"column":43},"end":{"line":32,"column":69}}},"5":{"name":"write","line":36,"loc":{"start":{"line":36,"column":35},"end":{"line":36,"column":62}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":28}},"2":{"start":{"line":12,"column":0},"end":{"line":17,"column":1}},"3":{"start":{"line":19,"column":0},"end":{"line":22,"column":1}},"4":{"start":{"line":20,"column":2},"end":{"line":20,"column":31}},"5":{"start":{"line":21,"column":2},"end":{"line":21,"column":18}},"6":{"start":{"line":24,"column":0},"end":{"line":26,"column":1}},"7":{"start":{"line":25,"column":2},"end":{"line":25,"column":55}},"8":{"start":{"line":28,"column":0},"end":{"line":30,"column":1}},"9":{"start":{"line":29,"column":2},"end":{"line":29,"column":25}},"10":{"start":{"line":32,"column":0},"end":{"line":34,"column":1}},"11":{"start":{"line":33,"column":2},"end":{"line":33,"column":57}},"12":{"start":{"line":36,"column":0},"end":{"line":57,"column":1}},"13":{"start":{"line":37,"column":2},"end":{"line":37,"column":7}},"14":{"start":{"line":41,"column":2},"end":{"line":50,"column":3}},"15":{"start":{"line":43,"column":4},"end":{"line":43,"column":58}},"16":{"start":{"line":46,"column":4},"end":{"line":46,"column":54}},"17":{"start":{"line":49,"column":4},"end":{"line":49,"column":28}},"18":{"start":{"line":54,"column":2},"end":{"line":56,"column":3}},"19":{"start":{"line":55,"column":4},"end":{"line":55,"column":59}},"20":{"start":{"line":59,"column":0},"end":{"line":59,"column":33}}},"branchMap":{"1":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]}},"code":["var Mode = require('./mode')","","/**"," * Array of characters available in alphanumeric mode"," *"," * As per QR Code specification, to each character"," * is assigned a value from 0 to 44 which in this case coincides"," * with the array index"," *"," * @type {Array}"," */","var ALPHA_NUM_CHARS = [","  '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',","  'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',","  'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',","  ' ', '$', '%', '*', '+', '-', '.', '/', ':'","]","","function AlphanumericData (data) {","  this.mode = Mode.ALPHANUMERIC","  this.data = data","}","","AlphanumericData.getBitsLength = function getBitsLength (length) {","  return 11 * Math.floor(length / 2) + 6 * (length % 2)","}","","AlphanumericData.prototype.getLength = function getLength () {","  return this.data.length","}","","AlphanumericData.prototype.getBitsLength = function getBitsLength () {","  return AlphanumericData.getBitsLength(this.data.length)","}","","AlphanumericData.prototype.write = function write (bitBuffer) {","  var i","","  // Input data characters are divided into groups of two characters","  // and encoded as 11-bit binary codes.","  for (i = 0; i + 2 <= this.data.length; i += 2) {","    // The character value of the first character is multiplied by 45","    var value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45","","    // The character value of the second digit is added to the product","    value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1])","","    // The sum is then stored as 11-bit binary number","    bitBuffer.put(value, 11)","  }","","  // If the number of input data characters is not a multiple of two,","  // the character value of the final character is encoded as a 6-bit binary number.","  if (this.data.length % 2) {","    bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6)","  }","}","","module.exports = AlphanumericData",""],"l":{"1":1,"12":1,"19":1,"20":0,"21":0,"24":1,"25":0,"28":1,"29":0,"32":1,"33":0,"36":1,"37":0,"41":0,"43":0,"46":0,"49":0,"54":0,"55":0,"59":1}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/byte-data.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/byte-data.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":1,"7":0,"8":1,"9":0,"10":1,"11":0,"12":1,"13":0,"14":0,"15":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"ByteData","line":4,"loc":{"start":{"line":4,"column":0},"end":{"line":4,"column":25}}},"2":{"name":"getBitsLength","line":9,"loc":{"start":{"line":9,"column":25},"end":{"line":9,"column":57}}},"3":{"name":"getLength","line":13,"loc":{"start":{"line":13,"column":31},"end":{"line":13,"column":53}}},"4":{"name":"getBitsLength","line":17,"loc":{"start":{"line":17,"column":35},"end":{"line":17,"column":61}}},"5":{"name":"(anonymous_5)","line":21,"loc":{"start":{"line":21,"column":27},"end":{"line":21,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":39}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":28}},"3":{"start":{"line":4,"column":0},"end":{"line":7,"column":1}},"4":{"start":{"line":5,"column":2},"end":{"line":5,"column":23}},"5":{"start":{"line":6,"column":2},"end":{"line":6,"column":30}},"6":{"start":{"line":9,"column":0},"end":{"line":11,"column":1}},"7":{"start":{"line":10,"column":2},"end":{"line":10,"column":19}},"8":{"start":{"line":13,"column":0},"end":{"line":15,"column":1}},"9":{"start":{"line":14,"column":2},"end":{"line":14,"column":25}},"10":{"start":{"line":17,"column":0},"end":{"line":19,"column":1}},"11":{"start":{"line":18,"column":2},"end":{"line":18,"column":49}},"12":{"start":{"line":21,"column":0},"end":{"line":25,"column":1}},"13":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"14":{"start":{"line":23,"column":4},"end":{"line":23,"column":34}},"15":{"start":{"line":27,"column":0},"end":{"line":27,"column":25}}},"branchMap":{},"code":["var Buffer = require('../utils/buffer')","var Mode = require('./mode')","","function ByteData (data) {","  this.mode = Mode.BYTE","  this.data = new Buffer(data)","}","","ByteData.getBitsLength = function getBitsLength (length) {","  return length * 8","}","","ByteData.prototype.getLength = function getLength () {","  return this.data.length","}","","ByteData.prototype.getBitsLength = function getBitsLength () {","  return ByteData.getBitsLength(this.data.length)","}","","ByteData.prototype.write = function (bitBuffer) {","  for (var i = 0, l = this.data.length; i < l; i++) {","    bitBuffer.put(this.data[i], 8)","  }","}","","module.exports = ByteData",""],"l":{"1":1,"2":1,"4":1,"5":0,"6":0,"9":1,"10":0,"13":1,"14":0,"17":1,"18":0,"21":1,"22":0,"23":0,"27":1}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/kanji-data.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/core/kanji-data.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":1,"7":0,"8":1,"9":0,"10":1,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"KanjiData","line":4,"loc":{"start":{"line":4,"column":0},"end":{"line":4,"column":26}}},"2":{"name":"getBitsLength","line":9,"loc":{"start":{"line":9,"column":26},"end":{"line":9,"column":58}}},"3":{"name":"getLength","line":13,"loc":{"start":{"line":13,"column":32},"end":{"line":13,"column":54}}},"4":{"name":"getBitsLength","line":17,"loc":{"start":{"line":17,"column":36},"end":{"line":17,"column":62}}},"5":{"name":"(anonymous_5)","line":21,"loc":{"start":{"line":21,"column":28},"end":{"line":21,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":28}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":30}},"3":{"start":{"line":4,"column":0},"end":{"line":7,"column":1}},"4":{"start":{"line":5,"column":2},"end":{"line":5,"column":24}},"5":{"start":{"line":6,"column":2},"end":{"line":6,"column":18}},"6":{"start":{"line":9,"column":0},"end":{"line":11,"column":1}},"7":{"start":{"line":10,"column":2},"end":{"line":10,"column":20}},"8":{"start":{"line":13,"column":0},"end":{"line":15,"column":1}},"9":{"start":{"line":14,"column":2},"end":{"line":14,"column":25}},"10":{"start":{"line":17,"column":0},"end":{"line":19,"column":1}},"11":{"start":{"line":18,"column":2},"end":{"line":18,"column":50}},"12":{"start":{"line":21,"column":0},"end":{"line":52,"column":1}},"13":{"start":{"line":22,"column":2},"end":{"line":22,"column":7}},"14":{"start":{"line":27,"column":2},"end":{"line":51,"column":3}},"15":{"start":{"line":28,"column":4},"end":{"line":28,"column":42}},"16":{"start":{"line":31,"column":4},"end":{"line":43,"column":5}},"17":{"start":{"line":33,"column":6},"end":{"line":33,"column":21}},"18":{"start":{"line":36,"column":11},"end":{"line":43,"column":5}},"19":{"start":{"line":38,"column":6},"end":{"line":38,"column":21}},"20":{"start":{"line":40,"column":6},"end":{"line":42,"column":42}},"21":{"start":{"line":47,"column":4},"end":{"line":47,"column":60}},"22":{"start":{"line":50,"column":4},"end":{"line":50,"column":28}},"23":{"start":{"line":54,"column":0},"end":{"line":54,"column":26}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]},"2":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":8},"end":{"line":31,"column":23}},{"start":{"line":31,"column":27},"end":{"line":31,"column":42}}]},"3":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":11},"end":{"line":36,"column":11}},{"start":{"line":36,"column":11},"end":{"line":36,"column":11}}]},"4":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":15},"end":{"line":36,"column":30}},{"start":{"line":36,"column":34},"end":{"line":36,"column":49}}]}},"code":["var Mode = require('./mode')","var Utils = require('./utils')","","function KanjiData (data) {","  this.mode = Mode.KANJI","  this.data = data","}","","KanjiData.getBitsLength = function getBitsLength (length) {","  return length * 13","}","","KanjiData.prototype.getLength = function getLength () {","  return this.data.length","}","","KanjiData.prototype.getBitsLength = function getBitsLength () {","  return KanjiData.getBitsLength(this.data.length)","}","","KanjiData.prototype.write = function (bitBuffer) {","  var i","","  // In the Shift JIS system, Kanji characters are represented by a two byte combination.","  // These byte values are shifted from the JIS X 0208 values.","  // JIS X 0208 gives details of the shift coded representation.","  for (i = 0; i < this.data.length; i++) {","    var value = Utils.toSJIS(this.data[i])","","    // For characters with Shift JIS values from 0x8140 to 0x9FFC:","    if (value >= 0x8140 && value <= 0x9FFC) {","      // Subtract 0x8140 from Shift JIS value","      value -= 0x8140","","    // For characters with Shift JIS values from 0xE040 to 0xEBBF","    } else if (value >= 0xE040 && value <= 0xEBBF) {","      // Subtract 0xC140 from Shift JIS value","      value -= 0xC140","    } else {","      throw new Error(","        'Invalid SJIS character: ' + this.data[i] + '\\n' +","        'Make sure your charset is UTF-8')","    }","","    // Multiply most significant byte of result by 0xC0","    // and add least significant byte to product","    value = (((value >>> 8) & 0xff) * 0xC0) + (value & 0xff)","","    // Convert result to a 13-bit binary string","    bitBuffer.put(value, 13)","  }","}","","module.exports = KanjiData",""],"l":{"1":1,"2":1,"4":1,"5":0,"6":0,"9":1,"10":0,"13":1,"14":0,"17":1,"18":0,"21":1,"22":0,"27":0,"28":0,"31":0,"33":0,"36":0,"38":0,"40":0,"47":0,"50":0,"54":1}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/renderer/png.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/renderer/png.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"render","line":5,"loc":{"start":{"line":5,"column":17},"end":{"line":5,"column":51}}},"2":{"name":"renderToDataURL","line":19,"loc":{"start":{"line":19,"column":26},"end":{"line":19,"column":73}}},"3":{"name":"(anonymous_3)","line":30,"loc":{"start":{"line":30,"column":17},"end":{"line":30,"column":33}}},"4":{"name":"(anonymous_4)","line":34,"loc":{"start":{"line":34,"column":16},"end":{"line":34,"column":28}}},"5":{"name":"renderToFile","line":43,"loc":{"start":{"line":43,"column":23},"end":{"line":43,"column":73}}},"6":{"name":"renderToFileStream","line":56,"loc":{"start":{"line":56,"column":29},"end":{"line":56,"column":83}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":22}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":30}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"4":{"start":{"line":5,"column":0},"end":{"line":17,"column":1}},"5":{"start":{"line":6,"column":2},"end":{"line":6,"column":38}},"6":{"start":{"line":7,"column":2},"end":{"line":7,"column":33}},"7":{"start":{"line":8,"column":2},"end":{"line":8,"column":65}},"8":{"start":{"line":10,"column":2},"end":{"line":10,"column":22}},"9":{"start":{"line":11,"column":2},"end":{"line":11,"column":23}},"10":{"start":{"line":13,"column":2},"end":{"line":13,"column":33}},"11":{"start":{"line":14,"column":2},"end":{"line":14,"column":81}},"12":{"start":{"line":16,"column":2},"end":{"line":16,"column":17}},"13":{"start":{"line":19,"column":0},"end":{"line":41,"column":1}},"14":{"start":{"line":20,"column":2},"end":{"line":23,"column":3}},"15":{"start":{"line":21,"column":4},"end":{"line":21,"column":16}},"16":{"start":{"line":22,"column":4},"end":{"line":22,"column":23}},"17":{"start":{"line":25,"column":2},"end":{"line":25,"column":43}},"18":{"start":{"line":26,"column":2},"end":{"line":26,"column":17}},"19":{"start":{"line":28,"column":2},"end":{"line":28,"column":21}},"20":{"start":{"line":30,"column":2},"end":{"line":32,"column":4}},"21":{"start":{"line":31,"column":4},"end":{"line":31,"column":21}},"22":{"start":{"line":34,"column":2},"end":{"line":38,"column":4}},"23":{"start":{"line":35,"column":4},"end":{"line":35,"column":38}},"24":{"start":{"line":36,"column":4},"end":{"line":36,"column":51}},"25":{"start":{"line":37,"column":4},"end":{"line":37,"column":17}},"26":{"start":{"line":40,"column":2},"end":{"line":40,"column":12}},"27":{"start":{"line":43,"column":0},"end":{"line":54,"column":1}},"28":{"start":{"line":44,"column":2},"end":{"line":47,"column":3}},"29":{"start":{"line":45,"column":4},"end":{"line":45,"column":16}},"30":{"start":{"line":46,"column":4},"end":{"line":46,"column":23}},"31":{"start":{"line":49,"column":2},"end":{"line":49,"column":41}},"32":{"start":{"line":50,"column":2},"end":{"line":50,"column":24}},"33":{"start":{"line":51,"column":2},"end":{"line":51,"column":24}},"34":{"start":{"line":53,"column":2},"end":{"line":53,"column":53}},"35":{"start":{"line":56,"column":0},"end":{"line":59,"column":1}},"36":{"start":{"line":57,"column":2},"end":{"line":57,"column":43}},"37":{"start":{"line":58,"column":2},"end":{"line":58,"column":25}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"2":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]}},"code":["var fs = require('fs')","var PNG = require('pngjs').PNG","var Utils = require('./utils')","","exports.render = function render (qrData, options) {","  var opts = Utils.getOptions(options)","  var pngOpts = opts.rendererOpts","  var size = (qrData.modules.size + opts.margin * 2) * opts.scale","","  pngOpts.width = size","  pngOpts.height = size","","  var pngImage = new PNG(pngOpts)","  Utils.qrToImageData(pngImage.data, qrData, opts.margin, opts.scale, opts.color)","","  return pngImage","}","","exports.renderToDataURL = function renderToDataURL (qrData, options, cb) {","  if (typeof cb === 'undefined') {","    cb = options","    options = undefined","  }","","  var png = exports.render(qrData, options)","  var buffer = []","","  png.on('error', cb)","","  png.on('data', function (data) {","    buffer.push(data)","  })","","  png.on('end', function () {","    var url = 'data:image/png;base64,'","    url += Buffer.concat(buffer).toString('base64')","    cb(null, url)","  })","","  png.pack()","}","","exports.renderToFile = function renderToFile (path, qrData, options, cb) {","  if (typeof cb === 'undefined') {","    cb = options","    options = undefined","  }","","  var stream = fs.createWriteStream(path)","  stream.on('error', cb)","  stream.on('close', cb)","","  exports.renderToFileStream(stream, qrData, options)","}","","exports.renderToFileStream = function renderToFileStream (stream, qrData, options) {","  var png = exports.render(qrData, options)","  png.pack().pipe(stream)","}",""],"l":{"1":1,"2":1,"3":1,"5":1,"6":0,"7":0,"8":0,"10":0,"11":0,"13":0,"14":0,"16":0,"19":1,"20":0,"21":0,"22":0,"25":0,"26":0,"28":0,"30":0,"31":0,"34":0,"35":0,"36":0,"37":0,"40":0,"43":1,"44":0,"45":0,"46":0,"49":0,"50":0,"51":0,"53":0,"56":1,"57":0,"58":0}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/renderer/utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/renderer/utils.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"hex2rgba","line":1,"loc":{"start":{"line":1,"column":0},"end":{"line":1,"column":24}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":59},"end":{"line":13,"column":72}}},"3":{"name":"getOptions","line":31,"loc":{"start":{"line":31,"column":21},"end":{"line":31,"column":51}}},"4":{"name":"qrToImageData","line":51,"loc":{"start":{"line":51,"column":24},"end":{"line":51,"column":83}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":29,"column":1}},"2":{"start":{"line":2,"column":2},"end":{"line":4,"column":3}},"3":{"start":{"line":3,"column":4},"end":{"line":3,"column":60}},"4":{"start":{"line":6,"column":2},"end":{"line":6,"column":54}},"5":{"start":{"line":7,"column":2},"end":{"line":9,"column":3}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":48}},"7":{"start":{"line":12,"column":2},"end":{"line":16,"column":3}},"8":{"start":{"line":13,"column":4},"end":{"line":15,"column":7}},"9":{"start":{"line":14,"column":6},"end":{"line":14,"column":19}},"10":{"start":{"line":19,"column":2},"end":{"line":19,"column":50}},"11":{"start":{"line":19,"column":28},"end":{"line":19,"column":50}},"12":{"start":{"line":21,"column":2},"end":{"line":21,"column":47}},"13":{"start":{"line":23,"column":2},"end":{"line":28,"column":3}},"14":{"start":{"line":31,"column":0},"end":{"line":49,"column":1}},"15":{"start":{"line":32,"column":2},"end":{"line":32,"column":28}},"16":{"start":{"line":32,"column":16},"end":{"line":32,"column":28}},"17":{"start":{"line":33,"column":2},"end":{"line":33,"column":40}},"18":{"start":{"line":33,"column":22},"end":{"line":33,"column":40}},"19":{"start":{"line":35,"column":2},"end":{"line":37,"column":43}},"20":{"start":{"line":39,"column":2},"end":{"line":48,"column":3}},"21":{"start":{"line":51,"column":0},"end":{"line":76,"column":1}},"22":{"start":{"line":52,"column":2},"end":{"line":52,"column":28}},"23":{"start":{"line":53,"column":2},"end":{"line":53,"column":28}},"24":{"start":{"line":54,"column":2},"end":{"line":54,"column":35}},"25":{"start":{"line":55,"column":2},"end":{"line":55,"column":50}},"26":{"start":{"line":56,"column":2},"end":{"line":56,"column":41}},"27":{"start":{"line":58,"column":2},"end":{"line":75,"column":3}},"28":{"start":{"line":59,"column":4},"end":{"line":74,"column":5}},"29":{"start":{"line":60,"column":6},"end":{"line":60,"column":43}},"30":{"start":{"line":61,"column":6},"end":{"line":61,"column":31}},"31":{"start":{"line":63,"column":6},"end":{"line":68,"column":7}},"32":{"start":{"line":65,"column":8},"end":{"line":65,"column":57}},"33":{"start":{"line":66,"column":8},"end":{"line":66,"column":57}},"34":{"start":{"line":67,"column":8},"end":{"line":67,"column":51}},"35":{"start":{"line":70,"column":6},"end":{"line":70,"column":35}},"36":{"start":{"line":71,"column":6},"end":{"line":71,"column":35}},"37":{"start":{"line":72,"column":6},"end":{"line":72,"column":35}},"38":{"start":{"line":73,"column":6},"end":{"line":73,"column":33}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":2},"end":{"line":2,"column":2}},{"start":{"line":2,"column":2},"end":{"line":2,"column":2}}]},"2":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":2},"end":{"line":7,"column":2}},{"start":{"line":7,"column":2},"end":{"line":7,"column":2}}]},"3":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":6},"end":{"line":7,"column":24}},{"start":{"line":7,"column":28},"end":{"line":7,"column":48}},{"start":{"line":7,"column":52},"end":{"line":7,"column":70}}]},"4":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":2},"end":{"line":12,"column":2}},{"start":{"line":12,"column":2},"end":{"line":12,"column":2}}]},"5":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":6},"end":{"line":12,"column":26}},{"start":{"line":12,"column":30},"end":{"line":12,"column":50}}]},"6":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":2}},{"start":{"line":19,"column":2},"end":{"line":19,"column":2}}]},"7":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"8":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"9":{"line":35,"type":"cond-expr","locations":[{"start":{"line":37,"column":25},"end":{"line":37,"column":26}},{"start":{"line":37,"column":29},"end":{"line":37,"column":43}}]},"10":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":15},"end":{"line":35,"column":52}},{"start":{"line":36,"column":4},"end":{"line":36,"column":27}},{"start":{"line":37,"column":4},"end":{"line":37,"column":22}}]},"11":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":11},"end":{"line":40,"column":24}},{"start":{"line":40,"column":28},"end":{"line":40,"column":29}}]},"12":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":21},"end":{"line":43,"column":39}},{"start":{"line":43,"column":43},"end":{"line":43,"column":54}}]},"13":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":22},"end":{"line":44,"column":41}},{"start":{"line":44,"column":45},"end":{"line":44,"column":56}}]},"14":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":18},"end":{"line":47,"column":38}},{"start":{"line":47,"column":42},"end":{"line":47,"column":44}}]},"15":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":6},"end":{"line":63,"column":6}},{"start":{"line":63,"column":6},"end":{"line":63,"column":6}}]},"16":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":10},"end":{"line":63,"column":27}},{"start":{"line":63,"column":31},"end":{"line":63,"column":48}},{"start":{"line":64,"column":8},"end":{"line":64,"column":37}},{"start":{"line":64,"column":41},"end":{"line":64,"column":70}}]}},"code":["function hex2rgba (hex) {","  if (typeof hex !== 'string') {","    throw new Error('Color should be defined as hex string')","  }","","  var hexCode = hex.slice().replace('#', '').split('')","  if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {","    throw new Error('Invalid hex color: ' + hex)","  }","","  // Convert from short to long form (fff -> ffffff)","  if (hexCode.length === 3 || hexCode.length === 4) {","    hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {","      return [c, c]","    }))","  }","","  // Add default alpha value","  if (hexCode.length === 6) hexCode.push('F', 'F')","","  var hexValue = parseInt(hexCode.join(''), 16)","","  return {","    r: (hexValue >> 24) & 255,","    g: (hexValue >> 16) & 255,","    b: (hexValue >> 8) & 255,","    a: hexValue & 255","  }","}","","exports.getOptions = function getOptions (options) {","  if (!options) options = {}","  if (!options.color) options.color = {}","","  var margin = typeof options.margin === 'undefined' ||","    options.margin === null ||","    options.margin < 0 ? 4 : options.margin","","  return {","    scale: options.scale || 4,","    margin: margin,","    color: {","      dark: hex2rgba(options.color.dark || '#000000ff'),","      light: hex2rgba(options.color.light || '#ffffffff')","    },","    type: options.type,","    rendererOpts: options.rendererOpts || {}","  }","}","","exports.qrToImageData = function qrToImageData (imgData, qr, margin, scale, color) {","  var size = qr.modules.size","  var data = qr.modules.data","  var scaledMargin = margin * scale","  var symbolSize = size * scale + scaledMargin * 2","  var palette = [color.light, color.dark]","","  for (var i = 0; i < symbolSize; i++) {","    for (var j = 0; j < symbolSize; j++) {","      var posDst = (i * symbolSize + j) * 4","      var pxColor = color.light","","      if (i >= scaledMargin && j >= scaledMargin &&","        i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {","        var iSrc = Math.floor((i - scaledMargin) / scale)","        var jSrc = Math.floor((j - scaledMargin) / scale)","        pxColor = palette[data[iSrc * size + jSrc]]","      }","","      imgData[posDst++] = pxColor.r","      imgData[posDst++] = pxColor.g","      imgData[posDst++] = pxColor.b","      imgData[posDst] = pxColor.a","    }","  }","}",""],"l":{"1":1,"2":0,"3":0,"6":0,"7":0,"8":0,"12":0,"13":0,"14":0,"19":0,"21":0,"23":0,"31":1,"32":0,"33":0,"35":0,"39":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"58":0,"59":0,"60":0,"61":0,"63":0,"65":0,"66":0,"67":0,"70":0,"71":0,"72":0,"73":0}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/renderer/utf8.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/renderer/utf8.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"getBlockChar","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":36}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":17},"end":{"line":17,"column":44}}},"3":{"name":"renderToFile","line":46,"loc":{"start":{"line":46,"column":23},"end":{"line":46,"column":73}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":30}},"2":{"start":{"line":3,"column":0},"end":{"line":8,"column":1}},"3":{"start":{"line":10,"column":0},"end":{"line":15,"column":1}},"4":{"start":{"line":11,"column":2},"end":{"line":11,"column":41}},"5":{"start":{"line":11,"column":21},"end":{"line":11,"column":41}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":42}},"7":{"start":{"line":12,"column":22},"end":{"line":12,"column":42}},"8":{"start":{"line":13,"column":2},"end":{"line":13,"column":42}},"9":{"start":{"line":13,"column":22},"end":{"line":13,"column":42}},"10":{"start":{"line":14,"column":2},"end":{"line":14,"column":22}},"11":{"start":{"line":17,"column":0},"end":{"line":44,"column":1}},"12":{"start":{"line":18,"column":2},"end":{"line":18,"column":32}},"13":{"start":{"line":19,"column":2},"end":{"line":19,"column":32}},"14":{"start":{"line":21,"column":2},"end":{"line":21,"column":38}},"15":{"start":{"line":23,"column":2},"end":{"line":23,"column":17}},"16":{"start":{"line":24,"column":2},"end":{"line":24,"column":71}},"17":{"start":{"line":25,"column":2},"end":{"line":25,"column":61}},"18":{"start":{"line":27,"column":2},"end":{"line":27,"column":58}},"19":{"start":{"line":29,"column":2},"end":{"line":29,"column":19}},"20":{"start":{"line":30,"column":2},"end":{"line":40,"column":3}},"21":{"start":{"line":31,"column":4},"end":{"line":31,"column":21}},"22":{"start":{"line":32,"column":4},"end":{"line":37,"column":5}},"23":{"start":{"line":33,"column":6},"end":{"line":33,"column":40}},"24":{"start":{"line":34,"column":6},"end":{"line":34,"column":49}},"25":{"start":{"line":36,"column":6},"end":{"line":36,"column":53}},"26":{"start":{"line":39,"column":4},"end":{"line":39,"column":28}},"27":{"start":{"line":42,"column":2},"end":{"line":42,"column":32}},"28":{"start":{"line":43,"column":2},"end":{"line":43,"column":15}},"29":{"start":{"line":46,"column":0},"end":{"line":55,"column":1}},"30":{"start":{"line":47,"column":2},"end":{"line":50,"column":3}},"31":{"start":{"line":48,"column":4},"end":{"line":48,"column":16}},"32":{"start":{"line":49,"column":4},"end":{"line":49,"column":23}},"33":{"start":{"line":52,"column":2},"end":{"line":52,"column":24}},"34":{"start":{"line":53,"column":2},"end":{"line":53,"column":44}},"35":{"start":{"line":54,"column":2},"end":{"line":54,"column":30}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":11,"column":2}},{"start":{"line":11,"column":2},"end":{"line":11,"column":2}}]},"2":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":6},"end":{"line":11,"column":9}},{"start":{"line":11,"column":13},"end":{"line":11,"column":19}}]},"3":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":2},"end":{"line":12,"column":2}},{"start":{"line":12,"column":2},"end":{"line":12,"column":2}}]},"4":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":6},"end":{"line":12,"column":9}},{"start":{"line":12,"column":13},"end":{"line":12,"column":20}}]},"5":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":2},"end":{"line":13,"column":2}},{"start":{"line":13,"column":2},"end":{"line":13,"column":2}}]},"6":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":6},"end":{"line":13,"column":10}},{"start":{"line":13,"column":14},"end":{"line":13,"column":20}}]},"7":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":2},"end":{"line":47,"column":2}},{"start":{"line":47,"column":2},"end":{"line":47,"column":2}}]}},"code":["var Utils = require('./utils')","","var BLOCK_CHAR = {","  WW: ' ',","  WB: '▄',","  BB: '█',","  BW: '▀'","}","","function getBlockChar (top, bottom) {","  if (top && bottom) return BLOCK_CHAR.BB","  if (top && !bottom) return BLOCK_CHAR.BW","  if (!top && bottom) return BLOCK_CHAR.WB","  return BLOCK_CHAR.WW","}","","exports.render = function (qrData, options) {","  var size = qrData.modules.size","  var data = qrData.modules.data","","  var opts = Utils.getOptions(options)","","  var output = ''","  var hMargin = Array(size + (opts.margin * 2) + 1).join(BLOCK_CHAR.WW)","  hMargin = Array((opts.margin / 2) + 1).join(hMargin + '\\n')","","  var vMargin = Array(opts.margin + 1).join(BLOCK_CHAR.WW)","","  output += hMargin","  for (var i = 0; i < size; i += 2) {","    output += vMargin","    for (var j = 0; j < size; j++) {","      var topModule = data[i * size + j]","      var bottomModule = data[(i + 1) * size + j]","","      output += getBlockChar(topModule, bottomModule)","    }","","    output += vMargin + '\\n'","  }","","  output += hMargin.slice(0, -1)","  return output","}","","exports.renderToFile = function renderToFile (path, qrData, options, cb) {","  if (typeof cb === 'undefined') {","    cb = options","    options = undefined","  }","","  var fs = require('fs')","  var utf8 = exports.render(qrData, options)","  fs.writeFile(path, utf8, cb)","}",""],"l":{"1":1,"3":1,"10":1,"11":0,"12":0,"13":0,"14":0,"17":1,"18":0,"19":0,"21":0,"23":0,"24":0,"25":0,"27":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"36":0,"39":0,"42":0,"43":0,"46":1,"47":0,"48":0,"49":0,"52":0,"53":0,"54":0}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/renderer/terminal.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/renderer/terminal.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"render","line":4,"loc":{"start":{"line":4,"column":17},"end":{"line":4,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":36}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":17}},"3":{"start":{"line":4,"column":0},"end":{"line":10,"column":1}},"4":{"start":{"line":5,"column":2},"end":{"line":5,"column":42}},"5":{"start":{"line":6,"column":2},"end":{"line":6,"column":48}},"6":{"start":{"line":9,"column":2},"end":{"line":9,"column":36}}},"branchMap":{"1":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":16},"end":{"line":5,"column":23}},{"start":{"line":5,"column":27},"end":{"line":5,"column":42}}]},"2":{"line":9,"type":"cond-expr","locations":[{"start":{"line":9,"column":19},"end":{"line":9,"column":22}},{"start":{"line":9,"column":25},"end":{"line":9,"column":36}}]}},"code":["var Utf8Renderer = require('./utf8')","require('colors')","","exports.render = function render (qrData, options) {","  var inverse = options && options.inverse","  var out = Utf8Renderer.render(qrData, options)","","  // defaults tp inverse. this makes sense for people with dark terminals.","  return inverse ? out : out.inverse","}",""],"l":{"1":1,"2":1,"4":1,"5":0,"6":0,"9":0}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/renderer/svg.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/renderer/svg.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"getColorAttrib","line":3,"loc":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}}},"2":{"name":"render","line":8,"loc":{"start":{"line":8,"column":17},"end":{"line":8,"column":51}}},"3":{"name":"renderToFile","line":44,"loc":{"start":{"line":44,"column":23},"end":{"line":44,"column":73}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":30}},"2":{"start":{"line":3,"column":0},"end":{"line":6,"column":1}},"3":{"start":{"line":4,"column":2},"end":{"line":5,"column":55}},"4":{"start":{"line":8,"column":0},"end":{"line":42,"column":1}},"5":{"start":{"line":9,"column":2},"end":{"line":9,"column":38}},"6":{"start":{"line":10,"column":2},"end":{"line":10,"column":32}},"7":{"start":{"line":11,"column":2},"end":{"line":11,"column":32}},"8":{"start":{"line":12,"column":2},"end":{"line":12,"column":56}},"9":{"start":{"line":14,"column":2},"end":{"line":14,"column":57}},"10":{"start":{"line":15,"column":2},"end":{"line":15,"column":114}},"11":{"start":{"line":17,"column":2},"end":{"line":17,"column":51}},"12":{"start":{"line":18,"column":2},"end":{"line":18,"column":69}},"13":{"start":{"line":19,"column":2},"end":{"line":19,"column":66}},"14":{"start":{"line":20,"column":2},"end":{"line":20,"column":49}},"15":{"start":{"line":21,"column":2},"end":{"line":21,"column":57}},"16":{"start":{"line":22,"column":2},"end":{"line":22,"column":62}},"17":{"start":{"line":24,"column":2},"end":{"line":24,"column":132}},"18":{"start":{"line":25,"column":2},"end":{"line":25,"column":99}},"19":{"start":{"line":26,"column":2},"end":{"line":26,"column":59}},"20":{"start":{"line":28,"column":2},"end":{"line":36,"column":3}},"21":{"start":{"line":29,"column":4},"end":{"line":35,"column":5}},"22":{"start":{"line":30,"column":6},"end":{"line":30,"column":39}},"23":{"start":{"line":30,"column":31},"end":{"line":30,"column":39}},"24":{"start":{"line":32,"column":6},"end":{"line":32,"column":44}},"25":{"start":{"line":33,"column":6},"end":{"line":33,"column":44}},"26":{"start":{"line":34,"column":6},"end":{"line":34,"column":71}},"27":{"start":{"line":38,"column":2},"end":{"line":38,"column":20}},"28":{"start":{"line":39,"column":2},"end":{"line":39,"column":20}},"29":{"start":{"line":41,"column":2},"end":{"line":41,"column":15}},"30":{"start":{"line":44,"column":0},"end":{"line":53,"column":1}},"31":{"start":{"line":45,"column":2},"end":{"line":48,"column":3}},"32":{"start":{"line":46,"column":4},"end":{"line":46,"column":16}},"33":{"start":{"line":47,"column":4},"end":{"line":47,"column":23}},"34":{"start":{"line":50,"column":2},"end":{"line":50,"column":24}},"35":{"start":{"line":51,"column":2},"end":{"line":51,"column":43}},"36":{"start":{"line":52,"column":2},"end":{"line":52,"column":29}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":6},"end":{"line":30,"column":6}},{"start":{"line":30,"column":6},"end":{"line":30,"column":6}}]},"2":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]}},"code":["var Utils = require('./utils')","","function getColorAttrib (color) {","  return 'fill=\"rgb(' + [color.r, color.g, color.b].join(',') + ')\" ' +","    'fill-opacity=\"' + (color.a / 255).toFixed(2) + '\"'","}","","exports.render = function render (qrData, options) {","  var opts = Utils.getOptions(options)","  var size = qrData.modules.size","  var data = qrData.modules.data","  var qrcodesize = (size + opts.margin * 2) * opts.scale","","  var xmlStr = '<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n'","  xmlStr += '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'","","  xmlStr += '<svg version=\"1.1\" baseProfile=\"full\"'","  xmlStr += ' width=\"' + qrcodesize + '\" height=\"' + qrcodesize + '\"'","  xmlStr += ' viewBox=\"0 0 ' + qrcodesize + ' ' + qrcodesize + '\"'","  xmlStr += ' xmlns=\"http://www.w3.org/2000/svg\"'","  xmlStr += ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"'","  xmlStr += ' xmlns:ev=\"http://www.w3.org/2001/xml-events\">\\n'","","  xmlStr += '<rect x=\"0\" y=\"0\" width=\"' + qrcodesize + '\" height=\"' + qrcodesize + '\" ' + getColorAttrib(opts.color.light) + ' />\\n'","  xmlStr += '<defs><rect id=\"p\" width=\"' + opts.scale + '\" height=\"' + opts.scale + '\" /></defs>\\n'","  xmlStr += '<g ' + getColorAttrib(opts.color.dark) + '>\\n'","","  for (var i = 0; i < size; i++) {","    for (var j = 0; j < size; j++) {","      if (!data[i * size + j]) continue","","      var x = (opts.margin + j) * opts.scale","      var y = (opts.margin + i) * opts.scale","      xmlStr += '<use x=\"' + x + '\" y=\"' + y + '\" xlink:href=\"#p\" />\\n'","    }","  }","","  xmlStr += '</g>\\n'","  xmlStr += '</svg>'","","  return xmlStr","}","","exports.renderToFile = function renderToFile (path, qrData, options, cb) {","  if (typeof cb === 'undefined') {","    cb = options","    options = undefined","  }","","  var fs = require('fs')","  var svg = exports.render(qrData, options)","  fs.writeFile(path, svg, cb)","}",""],"l":{"1":1,"3":1,"4":0,"8":1,"9":0,"10":0,"11":0,"12":0,"14":0,"15":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"24":0,"25":0,"26":0,"28":0,"29":0,"30":0,"32":0,"33":0,"34":0,"38":0,"39":0,"41":0,"44":1,"45":0,"46":0,"47":0,"50":0,"51":0,"52":0}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/browser.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/browser.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":1,"27":1,"28":1,"29":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"renderCanvas","line":4,"loc":{"start":{"line":4,"column":0},"end":{"line":4,"column":59}}},"2":{"name":"(anonymous_2)","line":45,"loc":{"start":{"line":45,"column":21},"end":{"line":45,"column":33}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":37}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":49}},"3":{"start":{"line":4,"column":0},"end":{"line":36,"column":1}},"4":{"start":{"line":5,"column":2},"end":{"line":5,"column":36}},"5":{"start":{"line":6,"column":2},"end":{"line":8,"column":3}},"6":{"start":{"line":7,"column":4},"end":{"line":7,"column":49}},"7":{"start":{"line":10,"column":2},"end":{"line":24,"column":3}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":13}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":17}},"10":{"start":{"line":13,"column":4},"end":{"line":13,"column":29}},"11":{"start":{"line":14,"column":9},"end":{"line":24,"column":3}},"12":{"start":{"line":15,"column":4},"end":{"line":23,"column":5}},"13":{"start":{"line":16,"column":6},"end":{"line":16,"column":15}},"14":{"start":{"line":17,"column":6},"end":{"line":17,"column":22}},"15":{"start":{"line":19,"column":6},"end":{"line":19,"column":15}},"16":{"start":{"line":20,"column":6},"end":{"line":20,"column":17}},"17":{"start":{"line":21,"column":6},"end":{"line":21,"column":19}},"18":{"start":{"line":22,"column":6},"end":{"line":22,"column":24}},"19":{"start":{"line":26,"column":2},"end":{"line":28,"column":3}},"20":{"start":{"line":27,"column":4},"end":{"line":27,"column":57}},"21":{"start":{"line":30,"column":2},"end":{"line":35,"column":3}},"22":{"start":{"line":31,"column":4},"end":{"line":31,"column":40}},"23":{"start":{"line":32,"column":4},"end":{"line":32,"column":44}},"24":{"start":{"line":34,"column":4},"end":{"line":34,"column":9}},"25":{"start":{"line":38,"column":0},"end":{"line":38,"column":30}},"26":{"start":{"line":39,"column":0},"end":{"line":39,"column":65}},"27":{"start":{"line":40,"column":0},"end":{"line":40,"column":75}},"28":{"start":{"line":45,"column":0},"end":{"line":49,"column":1}},"29":{"start":{"line":46,"column":2},"end":{"line":48,"column":3}}},"branchMap":{"1":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":2},"end":{"line":6,"column":2}},{"start":{"line":6,"column":2},"end":{"line":6,"column":2}}]},"2":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":2},"end":{"line":10,"column":2}},{"start":{"line":10,"column":2},"end":{"line":10,"column":2}}]},"3":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":9},"end":{"line":14,"column":9}},{"start":{"line":14,"column":9},"end":{"line":14,"column":9}}]},"4":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":4}},{"start":{"line":15,"column":4},"end":{"line":15,"column":4}}]},"5":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":25}},{"start":{"line":15,"column":29},"end":{"line":15,"column":54}}]},"6":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]}},"code":["var QRCode = require('./core/qrcode')","var CanvasRenderer = require('./renderer/canvas')","","function renderCanvas (renderFunc, canvas, text, opts, cb) {","  var argsNum = arguments.length - 1","  if (argsNum < 2) {","    throw new Error('Too few arguments provided')","  }","","  if (argsNum === 2) {","    cb = text","    text = canvas","    canvas = opts = undefined","  } else if (argsNum === 3) {","    if (canvas.getContext && typeof cb === 'undefined') {","      cb = opts","      opts = undefined","    } else {","      cb = opts","      opts = text","      text = canvas","      canvas = undefined","    }","  }","","  if (typeof cb !== 'function') {","    throw new Error('Callback required as last argument')","  }","","  try {","    var data = QRCode.create(text, opts)","    cb(null, renderFunc(data, canvas, opts))","  } catch (e) {","    cb(e)","  }","}","","exports.create = QRCode.create","exports.toCanvas = renderCanvas.bind(null, CanvasRenderer.render)","exports.toDataURL = renderCanvas.bind(null, CanvasRenderer.renderToDataURL)","","/**"," * Legacy API"," */","exports.qrcodedraw = function () {","  return {","    draw: exports.toCanvas","  }","}",""],"l":{"1":1,"2":1,"4":1,"5":0,"6":0,"7":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"19":0,"20":0,"21":0,"22":0,"26":0,"27":0,"30":0,"31":0,"32":0,"34":0,"38":1,"39":1,"40":1,"45":1,"46":0}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/renderer/canvas.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/renderer/canvas.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"clearCanvas","line":3,"loc":{"start":{"line":3,"column":0},"end":{"line":3,"column":41}}},"2":{"name":"getCanvasElement","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":29}}},"3":{"name":"render","line":21,"loc":{"start":{"line":21,"column":17},"end":{"line":21,"column":59}}},"4":{"name":"renderToDataURL","line":47,"loc":{"start":{"line":47,"column":26},"end":{"line":47,"column":77}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":30}},"2":{"start":{"line":3,"column":0},"end":{"line":11,"column":1}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":50}},"4":{"start":{"line":6,"column":2},"end":{"line":6,"column":38}},"5":{"start":{"line":6,"column":21},"end":{"line":6,"column":38}},"6":{"start":{"line":7,"column":2},"end":{"line":7,"column":22}},"7":{"start":{"line":8,"column":2},"end":{"line":8,"column":21}},"8":{"start":{"line":9,"column":2},"end":{"line":9,"column":35}},"9":{"start":{"line":10,"column":2},"end":{"line":10,"column":34}},"10":{"start":{"line":13,"column":0},"end":{"line":19,"column":1}},"11":{"start":{"line":14,"column":2},"end":{"line":18,"column":3}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":43}},"13":{"start":{"line":17,"column":4},"end":{"line":17,"column":59}},"14":{"start":{"line":21,"column":0},"end":{"line":45,"column":1}},"15":{"start":{"line":22,"column":2},"end":{"line":22,"column":20}},"16":{"start":{"line":23,"column":2},"end":{"line":23,"column":23}},"17":{"start":{"line":25,"column":2},"end":{"line":28,"column":3}},"18":{"start":{"line":26,"column":4},"end":{"line":26,"column":17}},"19":{"start":{"line":27,"column":4},"end":{"line":27,"column":22}},"20":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"21":{"start":{"line":31,"column":4},"end":{"line":31,"column":33}},"22":{"start":{"line":34,"column":2},"end":{"line":34,"column":31}},"23":{"start":{"line":35,"column":2},"end":{"line":35,"column":65}},"24":{"start":{"line":37,"column":2},"end":{"line":37,"column":37}},"25":{"start":{"line":38,"column":2},"end":{"line":38,"column":45}},"26":{"start":{"line":39,"column":2},"end":{"line":39,"column":78}},"27":{"start":{"line":41,"column":2},"end":{"line":41,"column":34}},"28":{"start":{"line":42,"column":2},"end":{"line":42,"column":31}},"29":{"start":{"line":44,"column":2},"end":{"line":44,"column":17}},"30":{"start":{"line":47,"column":0},"end":{"line":63,"column":1}},"31":{"start":{"line":48,"column":2},"end":{"line":48,"column":20}},"32":{"start":{"line":50,"column":2},"end":{"line":53,"column":3}},"33":{"start":{"line":51,"column":4},"end":{"line":51,"column":17}},"34":{"start":{"line":52,"column":4},"end":{"line":52,"column":22}},"35":{"start":{"line":55,"column":2},"end":{"line":55,"column":22}},"36":{"start":{"line":55,"column":13},"end":{"line":55,"column":22}},"37":{"start":{"line":57,"column":2},"end":{"line":57,"column":53}},"38":{"start":{"line":59,"column":2},"end":{"line":59,"column":37}},"39":{"start":{"line":60,"column":2},"end":{"line":60,"column":44}},"40":{"start":{"line":62,"column":2},"end":{"line":62,"column":55}}},"branchMap":{"1":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":2},"end":{"line":6,"column":2}},{"start":{"line":6,"column":2},"end":{"line":6,"column":2}}]},"2":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"3":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":6},"end":{"line":25,"column":33}},{"start":{"line":25,"column":38},"end":{"line":25,"column":45}},{"start":{"line":25,"column":49},"end":{"line":25,"column":67}}]},"4":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"5":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":6},"end":{"line":50,"column":33}},{"start":{"line":50,"column":38},"end":{"line":50,"column":45}},{"start":{"line":50,"column":49},"end":{"line":50,"column":67}}]},"7":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]},"8":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":13},"end":{"line":59,"column":22}},{"start":{"line":59,"column":26},"end":{"line":59,"column":37}}]},"9":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":21},"end":{"line":60,"column":38}},{"start":{"line":60,"column":42},"end":{"line":60,"column":44}}]}},"code":["var Utils = require('./utils')","","function clearCanvas (ctx, canvas, size) {","  ctx.clearRect(0, 0, canvas.width, canvas.height)","","  if (!canvas.style) canvas.style = {}","  canvas.height = size","  canvas.width = size","  canvas.style.height = size + 'px'","  canvas.style.width = size + 'px'","}","","function getCanvasElement () {","  try {","    return document.createElement('canvas')","  } catch (e) {","    throw new Error('You need to specify a canvas element')","  }","}","","exports.render = function render (qrData, canvas, options) {","  var opts = options","  var canvasEl = canvas","","  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {","    opts = canvas","    canvas = undefined","  }","","  if (!canvas) {","    canvasEl = getCanvasElement()","  }","","  opts = Utils.getOptions(opts)","  var size = (qrData.modules.size + opts.margin * 2) * opts.scale","","  var ctx = canvasEl.getContext('2d')","  var image = ctx.createImageData(size, size)","  Utils.qrToImageData(image.data, qrData, opts.margin, opts.scale, opts.color)","","  clearCanvas(ctx, canvasEl, size)","  ctx.putImageData(image, 0, 0)","","  return canvasEl","}","","exports.renderToDataURL = function renderToDataURL (qrData, canvas, options) {","  var opts = options","","  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {","    opts = canvas","    canvas = undefined","  }","","  if (!opts) opts = {}","","  var canvasEl = exports.render(qrData, canvas, opts)","","  var type = opts.type || 'image/png'","  var rendererOpts = opts.rendererOpts || {}","","  return canvasEl.toDataURL(type, rendererOpts.quality)","}",""],"l":{"1":1,"3":1,"4":0,"6":0,"7":0,"8":0,"9":0,"10":0,"13":1,"14":0,"15":0,"17":0,"21":1,"22":0,"23":0,"25":0,"26":0,"27":0,"30":0,"31":0,"34":0,"35":0,"37":0,"38":0,"39":0,"41":0,"42":0,"44":0,"47":1,"48":0,"50":0,"51":0,"52":0,"55":0,"57":0,"59":0,"60":0,"62":0}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/helper/to-sjis.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/helper/to-sjis.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"toSJIS","line":89,"loc":{"start":{"line":89,"column":17},"end":{"line":89,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":87,"column":1}},"2":{"start":{"line":89,"column":0},"end":{"line":100,"column":1}},"3":{"start":{"line":90,"column":2},"end":{"line":90,"column":42}},"4":{"start":{"line":90,"column":36},"end":{"line":90,"column":42}},"5":{"start":{"line":92,"column":2},"end":{"line":99,"column":3}},"6":{"start":{"line":93,"column":4},"end":{"line":93,"column":31}},"7":{"start":{"line":95,"column":4},"end":{"line":95,"column":42}},"8":{"start":{"line":96,"column":4},"end":{"line":98,"column":5}},"9":{"start":{"line":97,"column":6},"end":{"line":97,"column":39}}},"branchMap":{"1":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":2},"end":{"line":90,"column":2}},{"start":{"line":90,"column":2},"end":{"line":90,"column":2}}]},"2":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":6},"end":{"line":90,"column":15}},{"start":{"line":90,"column":19},"end":{"line":90,"column":34}}]},"3":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":4},"end":{"line":96,"column":4}},{"start":{"line":96,"column":4},"end":{"line":96,"column":4}}]}},"code":["var SJIS_UTF8 = [","  [0x8140, '　、。，．・：；？！゛゜´｀¨＾￣＿ヽヾゝゞ〃仝々〆〇ー―‐／＼～∥｜…‥‘’“”（）〔〕［］｛｝〈〉《》「」『』【】＋－±×'],","  [0x8180, '÷＝≠＜＞'],","  [0x818f, '￥＄￠￡％＃＆＊＠§☆★'],","  [0x81a6, '※〒→←↑↓〓'],","  [0x81ca, '￢'],","  [0x824f, '０１２３４５６７８９'],","  [0x8260, 'ＡＢＣＤＥＦＧＨＩＪＫＬＭＮＯＰＱＲＳＴＵＶＷＸＹＺ'],","  [0x8281, 'ａｂｃｄｅｆｇｈｉｊｋｌｍｎｏｐｑｒｓｔｕｖｗｘｙｚ'],","  [0x829f, 'ぁあぃいぅうぇえぉおかがきぎくぐけげこごさざしじすずせぜそぞただちぢっつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもゃやゅゆょよらりるれろゎわゐゑをん'],","  [0x8340, 'ァアィイゥウェエォオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂッツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミ'],","  [0x8380, 'ムメモャヤュユョヨラリルレロヮワヰヱヲンヴヵヶ'],","  [0x839f, 'ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ'],","  [0x83bf, 'αβγδεζηθικλμνξοπρστυφχψω'],","  [0x8440, 'АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ'],","  [0x8470, 'абвгдеёжзийклмн'],","  [0x8480, 'опрстуфхцчшщъыьэюя'],","  [0x8780, '〝〟'],","  [0x8940, '院陰隠韻吋右宇烏羽迂雨卯鵜窺丑碓臼渦嘘唄欝蔚鰻姥厩浦瓜閏噂云運雲荏餌叡営嬰影映曳栄永泳洩瑛盈穎頴英衛詠鋭液疫益駅悦謁越閲榎厭円'],","  [0x8980, '園堰奄宴延怨掩援沿演炎焔煙燕猿縁艶苑薗遠鉛鴛塩於汚甥凹央奥往応押旺横欧殴王翁襖鴬鴎黄岡沖荻億屋憶臆桶牡乙俺卸恩温穏音下化仮何伽価佳加可嘉夏嫁家寡科暇果架歌河火珂禍禾稼箇花苛茄荷華菓蝦課嘩貨迦過霞蚊俄峨我牙画臥芽蛾賀雅餓駕介会解回塊壊廻快怪悔恢懐戒拐改'],","  [0x8a40, '魁晦械海灰界皆絵芥蟹開階貝凱劾外咳害崖慨概涯碍蓋街該鎧骸浬馨蛙垣柿蛎鈎劃嚇各廓拡撹格核殻獲確穫覚角赫較郭閣隔革学岳楽額顎掛笠樫'],","  [0x8a80, '橿梶鰍潟割喝恰括活渇滑葛褐轄且鰹叶椛樺鞄株兜竃蒲釜鎌噛鴨栢茅萱粥刈苅瓦乾侃冠寒刊勘勧巻喚堪姦完官寛干幹患感慣憾換敢柑桓棺款歓汗漢澗潅環甘監看竿管簡緩缶翰肝艦莞観諌貫還鑑間閑関陥韓館舘丸含岸巌玩癌眼岩翫贋雁頑顔願企伎危喜器基奇嬉寄岐希幾忌揮机旗既期棋棄'],","  [0x8b40, '機帰毅気汽畿祈季稀紀徽規記貴起軌輝飢騎鬼亀偽儀妓宜戯技擬欺犠疑祇義蟻誼議掬菊鞠吉吃喫桔橘詰砧杵黍却客脚虐逆丘久仇休及吸宮弓急救'],","  [0x8b80, '朽求汲泣灸球究窮笈級糾給旧牛去居巨拒拠挙渠虚許距鋸漁禦魚亨享京供侠僑兇競共凶協匡卿叫喬境峡強彊怯恐恭挟教橋況狂狭矯胸脅興蕎郷鏡響饗驚仰凝尭暁業局曲極玉桐粁僅勤均巾錦斤欣欽琴禁禽筋緊芹菌衿襟謹近金吟銀九倶句区狗玖矩苦躯駆駈駒具愚虞喰空偶寓遇隅串櫛釧屑屈'],","  [0x8c40, '掘窟沓靴轡窪熊隈粂栗繰桑鍬勲君薫訓群軍郡卦袈祁係傾刑兄啓圭珪型契形径恵慶慧憩掲携敬景桂渓畦稽系経継繋罫茎荊蛍計詣警軽頚鶏芸迎鯨'],","  [0x8c80, '劇戟撃激隙桁傑欠決潔穴結血訣月件倹倦健兼券剣喧圏堅嫌建憲懸拳捲検権牽犬献研硯絹県肩見謙賢軒遣鍵険顕験鹸元原厳幻弦減源玄現絃舷言諺限乎個古呼固姑孤己庫弧戸故枯湖狐糊袴股胡菰虎誇跨鈷雇顧鼓五互伍午呉吾娯後御悟梧檎瑚碁語誤護醐乞鯉交佼侯候倖光公功効勾厚口向'],","  [0x8d40, '后喉坑垢好孔孝宏工巧巷幸広庚康弘恒慌抗拘控攻昂晃更杭校梗構江洪浩港溝甲皇硬稿糠紅紘絞綱耕考肯肱腔膏航荒行衡講貢購郊酵鉱砿鋼閤降'],","  [0x8d80, '項香高鴻剛劫号合壕拷濠豪轟麹克刻告国穀酷鵠黒獄漉腰甑忽惚骨狛込此頃今困坤墾婚恨懇昏昆根梱混痕紺艮魂些佐叉唆嵯左差査沙瑳砂詐鎖裟坐座挫債催再最哉塞妻宰彩才採栽歳済災采犀砕砦祭斎細菜裁載際剤在材罪財冴坂阪堺榊肴咲崎埼碕鷺作削咋搾昨朔柵窄策索錯桜鮭笹匙冊刷'],","  [0x8e40, '察拶撮擦札殺薩雑皐鯖捌錆鮫皿晒三傘参山惨撒散桟燦珊産算纂蚕讃賛酸餐斬暫残仕仔伺使刺司史嗣四士始姉姿子屍市師志思指支孜斯施旨枝止'],","  [0x8e80, '死氏獅祉私糸紙紫肢脂至視詞詩試誌諮資賜雌飼歯事似侍児字寺慈持時次滋治爾璽痔磁示而耳自蒔辞汐鹿式識鴫竺軸宍雫七叱執失嫉室悉湿漆疾質実蔀篠偲柴芝屡蕊縞舎写射捨赦斜煮社紗者謝車遮蛇邪借勺尺杓灼爵酌釈錫若寂弱惹主取守手朱殊狩珠種腫趣酒首儒受呪寿授樹綬需囚収周'],","  [0x8f40, '宗就州修愁拾洲秀秋終繍習臭舟蒐衆襲讐蹴輯週酋酬集醜什住充十従戎柔汁渋獣縦重銃叔夙宿淑祝縮粛塾熟出術述俊峻春瞬竣舜駿准循旬楯殉淳'],","  [0x8f80, '準潤盾純巡遵醇順処初所暑曙渚庶緒署書薯藷諸助叙女序徐恕鋤除傷償勝匠升召哨商唱嘗奨妾娼宵将小少尚庄床廠彰承抄招掌捷昇昌昭晶松梢樟樵沼消渉湘焼焦照症省硝礁祥称章笑粧紹肖菖蒋蕉衝裳訟証詔詳象賞醤鉦鍾鐘障鞘上丈丞乗冗剰城場壌嬢常情擾条杖浄状畳穣蒸譲醸錠嘱埴飾'],","  [0x9040, '拭植殖燭織職色触食蝕辱尻伸信侵唇娠寝審心慎振新晋森榛浸深申疹真神秦紳臣芯薪親診身辛進針震人仁刃塵壬尋甚尽腎訊迅陣靭笥諏須酢図厨'],","  [0x9080, '逗吹垂帥推水炊睡粋翠衰遂酔錐錘随瑞髄崇嵩数枢趨雛据杉椙菅頗雀裾澄摺寸世瀬畝是凄制勢姓征性成政整星晴棲栖正清牲生盛精聖声製西誠誓請逝醒青静斉税脆隻席惜戚斥昔析石積籍績脊責赤跡蹟碩切拙接摂折設窃節説雪絶舌蝉仙先千占宣専尖川戦扇撰栓栴泉浅洗染潜煎煽旋穿箭線'],","  [0x9140, '繊羨腺舛船薦詮賎践選遷銭銑閃鮮前善漸然全禅繕膳糎噌塑岨措曾曽楚狙疏疎礎祖租粗素組蘇訴阻遡鼠僧創双叢倉喪壮奏爽宋層匝惣想捜掃挿掻'],","  [0x9180, '操早曹巣槍槽漕燥争痩相窓糟総綜聡草荘葬蒼藻装走送遭鎗霜騒像増憎臓蔵贈造促側則即息捉束測足速俗属賊族続卒袖其揃存孫尊損村遜他多太汰詑唾堕妥惰打柁舵楕陀駄騨体堆対耐岱帯待怠態戴替泰滞胎腿苔袋貸退逮隊黛鯛代台大第醍題鷹滝瀧卓啄宅托択拓沢濯琢託鐸濁諾茸凧蛸只'],","  [0x9240, '叩但達辰奪脱巽竪辿棚谷狸鱈樽誰丹単嘆坦担探旦歎淡湛炭短端箪綻耽胆蛋誕鍛団壇弾断暖檀段男談値知地弛恥智池痴稚置致蜘遅馳築畜竹筑蓄'],","  [0x9280, '逐秩窒茶嫡着中仲宙忠抽昼柱注虫衷註酎鋳駐樗瀦猪苧著貯丁兆凋喋寵帖帳庁弔張彫徴懲挑暢朝潮牒町眺聴脹腸蝶調諜超跳銚長頂鳥勅捗直朕沈珍賃鎮陳津墜椎槌追鎚痛通塚栂掴槻佃漬柘辻蔦綴鍔椿潰坪壷嬬紬爪吊釣鶴亭低停偵剃貞呈堤定帝底庭廷弟悌抵挺提梯汀碇禎程締艇訂諦蹄逓'],","  [0x9340, '邸鄭釘鼎泥摘擢敵滴的笛適鏑溺哲徹撤轍迭鉄典填天展店添纏甜貼転顛点伝殿澱田電兎吐堵塗妬屠徒斗杜渡登菟賭途都鍍砥砺努度土奴怒倒党冬'],","  [0x9380, '凍刀唐塔塘套宕島嶋悼投搭東桃梼棟盗淘湯涛灯燈当痘祷等答筒糖統到董蕩藤討謄豆踏逃透鐙陶頭騰闘働動同堂導憧撞洞瞳童胴萄道銅峠鴇匿得徳涜特督禿篤毒独読栃橡凸突椴届鳶苫寅酉瀞噸屯惇敦沌豚遁頓呑曇鈍奈那内乍凪薙謎灘捺鍋楢馴縄畷南楠軟難汝二尼弐迩匂賑肉虹廿日乳入'],","  [0x9440, '如尿韮任妊忍認濡禰祢寧葱猫熱年念捻撚燃粘乃廼之埜嚢悩濃納能脳膿農覗蚤巴把播覇杷波派琶破婆罵芭馬俳廃拝排敗杯盃牌背肺輩配倍培媒梅'],","  [0x9480, '楳煤狽買売賠陪這蝿秤矧萩伯剥博拍柏泊白箔粕舶薄迫曝漠爆縛莫駁麦函箱硲箸肇筈櫨幡肌畑畠八鉢溌発醗髪伐罰抜筏閥鳩噺塙蛤隼伴判半反叛帆搬斑板氾汎版犯班畔繁般藩販範釆煩頒飯挽晩番盤磐蕃蛮匪卑否妃庇彼悲扉批披斐比泌疲皮碑秘緋罷肥被誹費避非飛樋簸備尾微枇毘琵眉美'],","  [0x9540, '鼻柊稗匹疋髭彦膝菱肘弼必畢筆逼桧姫媛紐百謬俵彪標氷漂瓢票表評豹廟描病秒苗錨鋲蒜蛭鰭品彬斌浜瀕貧賓頻敏瓶不付埠夫婦富冨布府怖扶敷'],","  [0x9580, '斧普浮父符腐膚芙譜負賦赴阜附侮撫武舞葡蕪部封楓風葺蕗伏副復幅服福腹複覆淵弗払沸仏物鮒分吻噴墳憤扮焚奮粉糞紛雰文聞丙併兵塀幣平弊柄並蔽閉陛米頁僻壁癖碧別瞥蔑箆偏変片篇編辺返遍便勉娩弁鞭保舗鋪圃捕歩甫補輔穂募墓慕戊暮母簿菩倣俸包呆報奉宝峰峯崩庖抱捧放方朋'],","  [0x9640, '法泡烹砲縫胞芳萌蓬蜂褒訪豊邦鋒飽鳳鵬乏亡傍剖坊妨帽忘忙房暴望某棒冒紡肪膨謀貌貿鉾防吠頬北僕卜墨撲朴牧睦穆釦勃没殆堀幌奔本翻凡盆'],","  [0x9680, '摩磨魔麻埋妹昧枚毎哩槙幕膜枕鮪柾鱒桝亦俣又抹末沫迄侭繭麿万慢満漫蔓味未魅巳箕岬密蜜湊蓑稔脈妙粍民眠務夢無牟矛霧鵡椋婿娘冥名命明盟迷銘鳴姪牝滅免棉綿緬面麺摸模茂妄孟毛猛盲網耗蒙儲木黙目杢勿餅尤戻籾貰問悶紋門匁也冶夜爺耶野弥矢厄役約薬訳躍靖柳薮鑓愉愈油癒'],","  [0x9740, '諭輸唯佑優勇友宥幽悠憂揖有柚湧涌猶猷由祐裕誘遊邑郵雄融夕予余与誉輿預傭幼妖容庸揚揺擁曜楊様洋溶熔用窯羊耀葉蓉要謡踊遥陽養慾抑欲'],","  [0x9780, '沃浴翌翼淀羅螺裸来莱頼雷洛絡落酪乱卵嵐欄濫藍蘭覧利吏履李梨理璃痢裏裡里離陸律率立葎掠略劉流溜琉留硫粒隆竜龍侶慮旅虜了亮僚両凌寮料梁涼猟療瞭稜糧良諒遼量陵領力緑倫厘林淋燐琳臨輪隣鱗麟瑠塁涙累類令伶例冷励嶺怜玲礼苓鈴隷零霊麗齢暦歴列劣烈裂廉恋憐漣煉簾練聯'],","  [0x9840, '蓮連錬呂魯櫓炉賂路露労婁廊弄朗楼榔浪漏牢狼篭老聾蝋郎六麓禄肋録論倭和話歪賄脇惑枠鷲亙亘鰐詫藁蕨椀湾碗腕'],","  [0x989f, '弌丐丕个丱丶丼丿乂乖乘亂亅豫亊舒弍于亞亟亠亢亰亳亶从仍仄仆仂仗仞仭仟价伉佚估佛佝佗佇佶侈侏侘佻佩佰侑佯來侖儘俔俟俎俘俛俑俚俐俤俥倚倨倔倪倥倅伜俶倡倩倬俾俯們倆偃假會偕偐偈做偖偬偸傀傚傅傴傲'],","  [0x9940, '僉僊傳僂僖僞僥僭僣僮價僵儉儁儂儖儕儔儚儡儺儷儼儻儿兀兒兌兔兢竸兩兪兮冀冂囘册冉冏冑冓冕冖冤冦冢冩冪冫决冱冲冰况冽凅凉凛几處凩凭'],","  [0x9980, '凰凵凾刄刋刔刎刧刪刮刳刹剏剄剋剌剞剔剪剴剩剳剿剽劍劔劒剱劈劑辨辧劬劭劼劵勁勍勗勞勣勦飭勠勳勵勸勹匆匈甸匍匐匏匕匚匣匯匱匳匸區卆卅丗卉卍凖卞卩卮夘卻卷厂厖厠厦厥厮厰厶參簒雙叟曼燮叮叨叭叺吁吽呀听吭吼吮吶吩吝呎咏呵咎呟呱呷呰咒呻咀呶咄咐咆哇咢咸咥咬哄哈咨'],","  [0x9a40, '咫哂咤咾咼哘哥哦唏唔哽哮哭哺哢唹啀啣啌售啜啅啖啗唸唳啝喙喀咯喊喟啻啾喘喞單啼喃喩喇喨嗚嗅嗟嗄嗜嗤嗔嘔嗷嘖嗾嗽嘛嗹噎噐營嘴嘶嘲嘸'],","  [0x9a80, '噫噤嘯噬噪嚆嚀嚊嚠嚔嚏嚥嚮嚶嚴囂嚼囁囃囀囈囎囑囓囗囮囹圀囿圄圉圈國圍圓團圖嗇圜圦圷圸坎圻址坏坩埀垈坡坿垉垓垠垳垤垪垰埃埆埔埒埓堊埖埣堋堙堝塲堡塢塋塰毀塒堽塹墅墹墟墫墺壞墻墸墮壅壓壑壗壙壘壥壜壤壟壯壺壹壻壼壽夂夊夐夛梦夥夬夭夲夸夾竒奕奐奎奚奘奢奠奧奬奩'],","  [0x9b40, '奸妁妝佞侫妣妲姆姨姜妍姙姚娥娟娑娜娉娚婀婬婉娵娶婢婪媚媼媾嫋嫂媽嫣嫗嫦嫩嫖嫺嫻嬌嬋嬖嬲嫐嬪嬶嬾孃孅孀孑孕孚孛孥孩孰孳孵學斈孺宀'],","  [0x9b80, '它宦宸寃寇寉寔寐寤實寢寞寥寫寰寶寳尅將專對尓尠尢尨尸尹屁屆屎屓屐屏孱屬屮乢屶屹岌岑岔妛岫岻岶岼岷峅岾峇峙峩峽峺峭嶌峪崋崕崗嵜崟崛崑崔崢崚崙崘嵌嵒嵎嵋嵬嵳嵶嶇嶄嶂嶢嶝嶬嶮嶽嶐嶷嶼巉巍巓巒巖巛巫已巵帋帚帙帑帛帶帷幄幃幀幎幗幔幟幢幤幇幵并幺麼广庠廁廂廈廐廏'],","  [0x9c40, '廖廣廝廚廛廢廡廨廩廬廱廳廰廴廸廾弃弉彝彜弋弑弖弩弭弸彁彈彌彎弯彑彖彗彙彡彭彳彷徃徂彿徊很徑徇從徙徘徠徨徭徼忖忻忤忸忱忝悳忿怡恠'],","  [0x9c80, '怙怐怩怎怱怛怕怫怦怏怺恚恁恪恷恟恊恆恍恣恃恤恂恬恫恙悁悍惧悃悚悄悛悖悗悒悧悋惡悸惠惓悴忰悽惆悵惘慍愕愆惶惷愀惴惺愃愡惻惱愍愎慇愾愨愧慊愿愼愬愴愽慂慄慳慷慘慙慚慫慴慯慥慱慟慝慓慵憙憖憇憬憔憚憊憑憫憮懌懊應懷懈懃懆憺懋罹懍懦懣懶懺懴懿懽懼懾戀戈戉戍戌戔戛'],","  [0x9d40, '戞戡截戮戰戲戳扁扎扞扣扛扠扨扼抂抉找抒抓抖拔抃抔拗拑抻拏拿拆擔拈拜拌拊拂拇抛拉挌拮拱挧挂挈拯拵捐挾捍搜捏掖掎掀掫捶掣掏掉掟掵捫'],","  [0x9d80, '捩掾揩揀揆揣揉插揶揄搖搴搆搓搦搶攝搗搨搏摧摯摶摎攪撕撓撥撩撈撼據擒擅擇撻擘擂擱擧舉擠擡抬擣擯攬擶擴擲擺攀擽攘攜攅攤攣攫攴攵攷收攸畋效敖敕敍敘敞敝敲數斂斃變斛斟斫斷旃旆旁旄旌旒旛旙无旡旱杲昊昃旻杳昵昶昴昜晏晄晉晁晞晝晤晧晨晟晢晰暃暈暎暉暄暘暝曁暹曉暾暼'],","  [0x9e40, '曄暸曖曚曠昿曦曩曰曵曷朏朖朞朦朧霸朮朿朶杁朸朷杆杞杠杙杣杤枉杰枩杼杪枌枋枦枡枅枷柯枴柬枳柩枸柤柞柝柢柮枹柎柆柧檜栞框栩桀桍栲桎'],","  [0x9e80, '梳栫桙档桷桿梟梏梭梔條梛梃檮梹桴梵梠梺椏梍桾椁棊椈棘椢椦棡椌棍棔棧棕椶椒椄棗棣椥棹棠棯椨椪椚椣椡棆楹楷楜楸楫楔楾楮椹楴椽楙椰楡楞楝榁楪榲榮槐榿槁槓榾槎寨槊槝榻槃榧樮榑榠榜榕榴槞槨樂樛槿權槹槲槧樅榱樞槭樔槫樊樒櫁樣樓橄樌橲樶橸橇橢橙橦橈樸樢檐檍檠檄檢檣'],","  [0x9f40, '檗蘗檻櫃櫂檸檳檬櫞櫑櫟檪櫚櫪櫻欅蘖櫺欒欖鬱欟欸欷盜欹飮歇歃歉歐歙歔歛歟歡歸歹歿殀殄殃殍殘殕殞殤殪殫殯殲殱殳殷殼毆毋毓毟毬毫毳毯'],","  [0x9f80, '麾氈氓气氛氤氣汞汕汢汪沂沍沚沁沛汾汨汳沒沐泄泱泓沽泗泅泝沮沱沾沺泛泯泙泪洟衍洶洫洽洸洙洵洳洒洌浣涓浤浚浹浙涎涕濤涅淹渕渊涵淇淦涸淆淬淞淌淨淒淅淺淙淤淕淪淮渭湮渮渙湲湟渾渣湫渫湶湍渟湃渺湎渤滿渝游溂溪溘滉溷滓溽溯滄溲滔滕溏溥滂溟潁漑灌滬滸滾漿滲漱滯漲滌'],","  [0xe040, '漾漓滷澆潺潸澁澀潯潛濳潭澂潼潘澎澑濂潦澳澣澡澤澹濆澪濟濕濬濔濘濱濮濛瀉瀋濺瀑瀁瀏濾瀛瀚潴瀝瀘瀟瀰瀾瀲灑灣炙炒炯烱炬炸炳炮烟烋烝'],","  [0xe080, '烙焉烽焜焙煥煕熈煦煢煌煖煬熏燻熄熕熨熬燗熹熾燒燉燔燎燠燬燧燵燼燹燿爍爐爛爨爭爬爰爲爻爼爿牀牆牋牘牴牾犂犁犇犒犖犢犧犹犲狃狆狄狎狒狢狠狡狹狷倏猗猊猜猖猝猴猯猩猥猾獎獏默獗獪獨獰獸獵獻獺珈玳珎玻珀珥珮珞璢琅瑯琥珸琲琺瑕琿瑟瑙瑁瑜瑩瑰瑣瑪瑶瑾璋璞璧瓊瓏瓔珱'],","  [0xe140, '瓠瓣瓧瓩瓮瓲瓰瓱瓸瓷甄甃甅甌甎甍甕甓甞甦甬甼畄畍畊畉畛畆畚畩畤畧畫畭畸當疆疇畴疊疉疂疔疚疝疥疣痂疳痃疵疽疸疼疱痍痊痒痙痣痞痾痿'],","  [0xe180, '痼瘁痰痺痲痳瘋瘍瘉瘟瘧瘠瘡瘢瘤瘴瘰瘻癇癈癆癜癘癡癢癨癩癪癧癬癰癲癶癸發皀皃皈皋皎皖皓皙皚皰皴皸皹皺盂盍盖盒盞盡盥盧盪蘯盻眈眇眄眩眤眞眥眦眛眷眸睇睚睨睫睛睥睿睾睹瞎瞋瞑瞠瞞瞰瞶瞹瞿瞼瞽瞻矇矍矗矚矜矣矮矼砌砒礦砠礪硅碎硴碆硼碚碌碣碵碪碯磑磆磋磔碾碼磅磊磬'],","  [0xe240, '磧磚磽磴礇礒礑礙礬礫祀祠祗祟祚祕祓祺祿禊禝禧齋禪禮禳禹禺秉秕秧秬秡秣稈稍稘稙稠稟禀稱稻稾稷穃穗穉穡穢穩龝穰穹穽窈窗窕窘窖窩竈窰'],","  [0xe280, '窶竅竄窿邃竇竊竍竏竕竓站竚竝竡竢竦竭竰笂笏笊笆笳笘笙笞笵笨笶筐筺笄筍笋筌筅筵筥筴筧筰筱筬筮箝箘箟箍箜箚箋箒箏筝箙篋篁篌篏箴篆篝篩簑簔篦篥籠簀簇簓篳篷簗簍篶簣簧簪簟簷簫簽籌籃籔籏籀籐籘籟籤籖籥籬籵粃粐粤粭粢粫粡粨粳粲粱粮粹粽糀糅糂糘糒糜糢鬻糯糲糴糶糺紆'],","  [0xe340, '紂紜紕紊絅絋紮紲紿紵絆絳絖絎絲絨絮絏絣經綉絛綏絽綛綺綮綣綵緇綽綫總綢綯緜綸綟綰緘緝緤緞緻緲緡縅縊縣縡縒縱縟縉縋縢繆繦縻縵縹繃縷'],","  [0xe380, '縲縺繧繝繖繞繙繚繹繪繩繼繻纃緕繽辮繿纈纉續纒纐纓纔纖纎纛纜缸缺罅罌罍罎罐网罕罔罘罟罠罨罩罧罸羂羆羃羈羇羌羔羞羝羚羣羯羲羹羮羶羸譱翅翆翊翕翔翡翦翩翳翹飜耆耄耋耒耘耙耜耡耨耿耻聊聆聒聘聚聟聢聨聳聲聰聶聹聽聿肄肆肅肛肓肚肭冐肬胛胥胙胝胄胚胖脉胯胱脛脩脣脯腋'],","  [0xe440, '隋腆脾腓腑胼腱腮腥腦腴膃膈膊膀膂膠膕膤膣腟膓膩膰膵膾膸膽臀臂膺臉臍臑臙臘臈臚臟臠臧臺臻臾舁舂舅與舊舍舐舖舩舫舸舳艀艙艘艝艚艟艤'],","  [0xe480, '艢艨艪艫舮艱艷艸艾芍芒芫芟芻芬苡苣苟苒苴苳苺莓范苻苹苞茆苜茉苙茵茴茖茲茱荀茹荐荅茯茫茗茘莅莚莪莟莢莖茣莎莇莊荼莵荳荵莠莉莨菴萓菫菎菽萃菘萋菁菷萇菠菲萍萢萠莽萸蔆菻葭萪萼蕚蒄葷葫蒭葮蒂葩葆萬葯葹萵蓊葢蒹蒿蒟蓙蓍蒻蓚蓐蓁蓆蓖蒡蔡蓿蓴蔗蔘蔬蔟蔕蔔蓼蕀蕣蕘蕈'],","  [0xe540, '蕁蘂蕋蕕薀薤薈薑薊薨蕭薔薛藪薇薜蕷蕾薐藉薺藏薹藐藕藝藥藜藹蘊蘓蘋藾藺蘆蘢蘚蘰蘿虍乕虔號虧虱蚓蚣蚩蚪蚋蚌蚶蚯蛄蛆蚰蛉蠣蚫蛔蛞蛩蛬'],","  [0xe580, '蛟蛛蛯蜒蜆蜈蜀蜃蛻蜑蜉蜍蛹蜊蜴蜿蜷蜻蜥蜩蜚蝠蝟蝸蝌蝎蝴蝗蝨蝮蝙蝓蝣蝪蠅螢螟螂螯蟋螽蟀蟐雖螫蟄螳蟇蟆螻蟯蟲蟠蠏蠍蟾蟶蟷蠎蟒蠑蠖蠕蠢蠡蠱蠶蠹蠧蠻衄衂衒衙衞衢衫袁衾袞衵衽袵衲袂袗袒袮袙袢袍袤袰袿袱裃裄裔裘裙裝裹褂裼裴裨裲褄褌褊褓襃褞褥褪褫襁襄褻褶褸襌褝襠襞'],","  [0xe640, '襦襤襭襪襯襴襷襾覃覈覊覓覘覡覩覦覬覯覲覺覽覿觀觚觜觝觧觴觸訃訖訐訌訛訝訥訶詁詛詒詆詈詼詭詬詢誅誂誄誨誡誑誥誦誚誣諄諍諂諚諫諳諧'],","  [0xe680, '諤諱謔諠諢諷諞諛謌謇謚諡謖謐謗謠謳鞫謦謫謾謨譁譌譏譎證譖譛譚譫譟譬譯譴譽讀讌讎讒讓讖讙讚谺豁谿豈豌豎豐豕豢豬豸豺貂貉貅貊貍貎貔豼貘戝貭貪貽貲貳貮貶賈賁賤賣賚賽賺賻贄贅贊贇贏贍贐齎贓賍贔贖赧赭赱赳趁趙跂趾趺跏跚跖跌跛跋跪跫跟跣跼踈踉跿踝踞踐踟蹂踵踰踴蹊'],","  [0xe740, '蹇蹉蹌蹐蹈蹙蹤蹠踪蹣蹕蹶蹲蹼躁躇躅躄躋躊躓躑躔躙躪躡躬躰軆躱躾軅軈軋軛軣軼軻軫軾輊輅輕輒輙輓輜輟輛輌輦輳輻輹轅轂輾轌轉轆轎轗轜'],","  [0xe780, '轢轣轤辜辟辣辭辯辷迚迥迢迪迯邇迴逅迹迺逑逕逡逍逞逖逋逧逶逵逹迸遏遐遑遒逎遉逾遖遘遞遨遯遶隨遲邂遽邁邀邊邉邏邨邯邱邵郢郤扈郛鄂鄒鄙鄲鄰酊酖酘酣酥酩酳酲醋醉醂醢醫醯醪醵醴醺釀釁釉釋釐釖釟釡釛釼釵釶鈞釿鈔鈬鈕鈑鉞鉗鉅鉉鉤鉈銕鈿鉋鉐銜銖銓銛鉚鋏銹銷鋩錏鋺鍄錮'],","  [0xe840, '錙錢錚錣錺錵錻鍜鍠鍼鍮鍖鎰鎬鎭鎔鎹鏖鏗鏨鏥鏘鏃鏝鏐鏈鏤鐚鐔鐓鐃鐇鐐鐶鐫鐵鐡鐺鑁鑒鑄鑛鑠鑢鑞鑪鈩鑰鑵鑷鑽鑚鑼鑾钁鑿閂閇閊閔閖閘閙'],","  [0xe880, '閠閨閧閭閼閻閹閾闊濶闃闍闌闕闔闖關闡闥闢阡阨阮阯陂陌陏陋陷陜陞陝陟陦陲陬隍隘隕隗險隧隱隲隰隴隶隸隹雎雋雉雍襍雜霍雕雹霄霆霈霓霎霑霏霖霙霤霪霰霹霽霾靄靆靈靂靉靜靠靤靦靨勒靫靱靹鞅靼鞁靺鞆鞋鞏鞐鞜鞨鞦鞣鞳鞴韃韆韈韋韜韭齏韲竟韶韵頏頌頸頤頡頷頽顆顏顋顫顯顰'],","  [0xe940, '顱顴顳颪颯颱颶飄飃飆飩飫餃餉餒餔餘餡餝餞餤餠餬餮餽餾饂饉饅饐饋饑饒饌饕馗馘馥馭馮馼駟駛駝駘駑駭駮駱駲駻駸騁騏騅駢騙騫騷驅驂驀驃'],","  [0xe980, '騾驕驍驛驗驟驢驥驤驩驫驪骭骰骼髀髏髑髓體髞髟髢髣髦髯髫髮髴髱髷髻鬆鬘鬚鬟鬢鬣鬥鬧鬨鬩鬪鬮鬯鬲魄魃魏魍魎魑魘魴鮓鮃鮑鮖鮗鮟鮠鮨鮴鯀鯊鮹鯆鯏鯑鯒鯣鯢鯤鯔鯡鰺鯲鯱鯰鰕鰔鰉鰓鰌鰆鰈鰒鰊鰄鰮鰛鰥鰤鰡鰰鱇鰲鱆鰾鱚鱠鱧鱶鱸鳧鳬鳰鴉鴈鳫鴃鴆鴪鴦鶯鴣鴟鵄鴕鴒鵁鴿鴾鵆鵈'],","  [0xea40, '鵝鵞鵤鵑鵐鵙鵲鶉鶇鶫鵯鵺鶚鶤鶩鶲鷄鷁鶻鶸鶺鷆鷏鷂鷙鷓鷸鷦鷭鷯鷽鸚鸛鸞鹵鹹鹽麁麈麋麌麒麕麑麝麥麩麸麪麭靡黌黎黏黐黔黜點黝黠黥黨黯'],","  [0xea80, '黴黶黷黹黻黼黽鼇鼈皷鼕鼡鼬鼾齊齒齔齣齟齠齡齦齧齬齪齷齲齶龕龜龠堯槇遙瑤凜熙']","]","","module.exports = function toSJIS (utf8Char) {","  if (!utf8Char || utf8Char === '') return","","  for (var i = 0; i < SJIS_UTF8.length; i++) {","    var kanji = SJIS_UTF8[i][1]","","    var posIndex = kanji.indexOf(utf8Char)","    if (posIndex >= 0) {","      return SJIS_UTF8[i][0] + posIndex","    }","  }","}",""],"l":{"1":1,"89":1,"90":0,"92":0,"93":0,"95":0,"96":0,"97":0}},"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/utils/typedarray-buffer.js":{"path":"/home/travis/build/npmtest/node-npmtest-qrcode/node_modules/qrcode/lib/utils/typedarray-buffer.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":1,"16":0,"17":1,"18":0,"19":0,"20":0,"21":1,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":1,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":1,"125":0,"126":0,"127":0,"128":0,"129":0,"130":1,"131":0,"132":1,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":1,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":1,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":1,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":1,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":1,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":1,"264":1,"265":1,"266":0,"267":1},"b":{"1":[0,0],"2":[1,0],"3":[1,1,1],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0,0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0,0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"fnMap":{"1":{"name":"Buffer","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":38}}},"2":{"name":"checked","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":26}}},"3":{"name":"isnan","line":46,"loc":{"start":{"line":46,"column":0},"end":{"line":46,"column":21}}},"4":{"name":"createBuffer","line":50,"loc":{"start":{"line":50,"column":0},"end":{"line":50,"column":31}}},"5":{"name":"allocUnsafe","line":56,"loc":{"start":{"line":56,"column":0},"end":{"line":56,"column":28}}},"6":{"name":"fromString","line":60,"loc":{"start":{"line":60,"column":0},"end":{"line":60,"column":29}}},"7":{"name":"fromArrayLike","line":76,"loc":{"start":{"line":76,"column":0},"end":{"line":76,"column":31}}},"8":{"name":"fromArrayBuffer","line":85,"loc":{"start":{"line":85,"column":0},"end":{"line":85,"column":53}}},"9":{"name":"fromObject","line":108,"loc":{"start":{"line":108,"column":0},"end":{"line":108,"column":26}}},"10":{"name":"utf8ToBytes","line":138,"loc":{"start":{"line":138,"column":0},"end":{"line":138,"column":37}}},"11":{"name":"byteLength","line":218,"loc":{"start":{"line":218,"column":0},"end":{"line":218,"column":29}}},"12":{"name":"blitBuffer","line":236,"loc":{"start":{"line":236,"column":0},"end":{"line":236,"column":47}}},"13":{"name":"utf8Write","line":244,"loc":{"start":{"line":244,"column":0},"end":{"line":244,"column":49}}},"14":{"name":"from","line":248,"loc":{"start":{"line":248,"column":0},"end":{"line":248,"column":38}}},"15":{"name":"write","line":264,"loc":{"start":{"line":264,"column":25},"end":{"line":264,"column":65}}},"16":{"name":"slice","line":293,"loc":{"start":{"line":293,"column":25},"end":{"line":293,"column":53}}},"17":{"name":"copy","line":320,"loc":{"start":{"line":320,"column":24},"end":{"line":320,"column":72}}},"18":{"name":"fill","line":368,"loc":{"start":{"line":368,"column":24},"end":{"line":368,"column":56}}},"19":{"name":"concat","line":419,"loc":{"start":{"line":419,"column":16},"end":{"line":419,"column":47}}},"20":{"name":"isBuffer","line":452,"loc":{"start":{"line":452,"column":18},"end":{"line":452,"column":40}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":10,"column":32}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":29}},"3":{"start":{"line":14,"column":0},"end":{"line":20,"column":1}},"4":{"start":{"line":15,"column":2},"end":{"line":17,"column":3}},"5":{"start":{"line":16,"column":4},"end":{"line":16,"column":27}},"6":{"start":{"line":19,"column":2},"end":{"line":19,"column":34}},"7":{"start":{"line":22,"column":0},"end":{"line":22,"column":49}},"8":{"start":{"line":23,"column":0},"end":{"line":23,"column":29}},"9":{"start":{"line":26,"column":0},"end":{"line":34,"column":1}},"10":{"start":{"line":28,"column":2},"end":{"line":33,"column":4}},"11":{"start":{"line":36,"column":0},"end":{"line":44,"column":1}},"12":{"start":{"line":39,"column":2},"end":{"line":42,"column":3}},"13":{"start":{"line":40,"column":4},"end":{"line":41,"column":75}},"14":{"start":{"line":43,"column":2},"end":{"line":43,"column":19}},"15":{"start":{"line":46,"column":0},"end":{"line":48,"column":1}},"16":{"start":{"line":47,"column":2},"end":{"line":47,"column":20}},"17":{"start":{"line":50,"column":0},"end":{"line":54,"column":1}},"18":{"start":{"line":51,"column":2},"end":{"line":51,"column":34}},"19":{"start":{"line":52,"column":2},"end":{"line":52,"column":34}},"20":{"start":{"line":53,"column":2},"end":{"line":53,"column":12}},"21":{"start":{"line":56,"column":0},"end":{"line":58,"column":1}},"22":{"start":{"line":57,"column":2},"end":{"line":57,"column":55}},"23":{"start":{"line":60,"column":0},"end":{"line":74,"column":1}},"24":{"start":{"line":61,"column":2},"end":{"line":61,"column":37}},"25":{"start":{"line":62,"column":2},"end":{"line":62,"column":32}},"26":{"start":{"line":64,"column":2},"end":{"line":64,"column":32}},"27":{"start":{"line":66,"column":2},"end":{"line":71,"column":3}},"28":{"start":{"line":70,"column":4},"end":{"line":70,"column":30}},"29":{"start":{"line":73,"column":2},"end":{"line":73,"column":12}},"30":{"start":{"line":76,"column":0},"end":{"line":83,"column":1}},"31":{"start":{"line":77,"column":2},"end":{"line":77,"column":63}},"32":{"start":{"line":78,"column":2},"end":{"line":78,"column":32}},"33":{"start":{"line":79,"column":2},"end":{"line":81,"column":3}},"34":{"start":{"line":80,"column":4},"end":{"line":80,"column":27}},"35":{"start":{"line":82,"column":2},"end":{"line":82,"column":12}},"36":{"start":{"line":85,"column":0},"end":{"line":106,"column":1}},"37":{"start":{"line":86,"column":2},"end":{"line":88,"column":3}},"38":{"start":{"line":87,"column":4},"end":{"line":87,"column":55}},"39":{"start":{"line":90,"column":2},"end":{"line":92,"column":3}},"40":{"start":{"line":91,"column":4},"end":{"line":91,"column":55}},"41":{"start":{"line":94,"column":2},"end":{"line":94,"column":9}},"42":{"start":{"line":95,"column":2},"end":{"line":101,"column":3}},"43":{"start":{"line":96,"column":4},"end":{"line":96,"column":31}},"44":{"start":{"line":97,"column":9},"end":{"line":101,"column":3}},"45":{"start":{"line":98,"column":4},"end":{"line":98,"column":43}},"46":{"start":{"line":100,"column":4},"end":{"line":100,"column":51}},"47":{"start":{"line":104,"column":2},"end":{"line":104,"column":34}},"48":{"start":{"line":105,"column":2},"end":{"line":105,"column":12}},"49":{"start":{"line":108,"column":0},"end":{"line":136,"column":1}},"50":{"start":{"line":109,"column":2},"end":{"line":119,"column":3}},"51":{"start":{"line":110,"column":4},"end":{"line":110,"column":37}},"52":{"start":{"line":111,"column":4},"end":{"line":111,"column":31}},"53":{"start":{"line":113,"column":4},"end":{"line":115,"column":5}},"54":{"start":{"line":114,"column":6},"end":{"line":114,"column":16}},"55":{"start":{"line":117,"column":4},"end":{"line":117,"column":28}},"56":{"start":{"line":118,"column":4},"end":{"line":118,"column":14}},"57":{"start":{"line":121,"column":2},"end":{"line":133,"column":3}},"58":{"start":{"line":122,"column":4},"end":{"line":128,"column":5}},"59":{"start":{"line":124,"column":6},"end":{"line":126,"column":7}},"60":{"start":{"line":125,"column":8},"end":{"line":125,"column":30}},"61":{"start":{"line":127,"column":6},"end":{"line":127,"column":31}},"62":{"start":{"line":130,"column":4},"end":{"line":132,"column":5}},"63":{"start":{"line":131,"column":6},"end":{"line":131,"column":36}},"64":{"start":{"line":135,"column":2},"end":{"line":135,"column":107}},"65":{"start":{"line":138,"column":0},"end":{"line":216,"column":1}},"66":{"start":{"line":139,"column":2},"end":{"line":139,"column":27}},"67":{"start":{"line":140,"column":2},"end":{"line":140,"column":15}},"68":{"start":{"line":141,"column":2},"end":{"line":141,"column":28}},"69":{"start":{"line":142,"column":2},"end":{"line":142,"column":26}},"70":{"start":{"line":143,"column":2},"end":{"line":143,"column":16}},"71":{"start":{"line":145,"column":2},"end":{"line":213,"column":3}},"72":{"start":{"line":146,"column":4},"end":{"line":146,"column":36}},"73":{"start":{"line":149,"column":4},"end":{"line":181,"column":5}},"74":{"start":{"line":151,"column":6},"end":{"line":167,"column":7}},"75":{"start":{"line":153,"column":8},"end":{"line":161,"column":9}},"76":{"start":{"line":155,"column":10},"end":{"line":155,"column":61}},"77":{"start":{"line":155,"column":33},"end":{"line":155,"column":61}},"78":{"start":{"line":156,"column":10},"end":{"line":156,"column":18}},"79":{"start":{"line":157,"column":15},"end":{"line":161,"column":9}},"80":{"start":{"line":159,"column":10},"end":{"line":159,"column":61}},"81":{"start":{"line":159,"column":33},"end":{"line":159,"column":61}},"82":{"start":{"line":160,"column":10},"end":{"line":160,"column":18}},"83":{"start":{"line":164,"column":8},"end":{"line":164,"column":33}},"84":{"start":{"line":166,"column":8},"end":{"line":166,"column":16}},"85":{"start":{"line":170,"column":6},"end":{"line":174,"column":7}},"86":{"start":{"line":171,"column":8},"end":{"line":171,"column":59}},"87":{"start":{"line":171,"column":31},"end":{"line":171,"column":59}},"88":{"start":{"line":172,"column":8},"end":{"line":172,"column":33}},"89":{"start":{"line":173,"column":8},"end":{"line":173,"column":16}},"90":{"start":{"line":177,"column":6},"end":{"line":177,"column":79}},"91":{"start":{"line":178,"column":11},"end":{"line":181,"column":5}},"92":{"start":{"line":180,"column":6},"end":{"line":180,"column":57}},"93":{"start":{"line":180,"column":29},"end":{"line":180,"column":57}},"94":{"start":{"line":183,"column":4},"end":{"line":183,"column":24}},"95":{"start":{"line":186,"column":4},"end":{"line":212,"column":5}},"96":{"start":{"line":187,"column":6},"end":{"line":187,"column":33}},"97":{"start":{"line":187,"column":28},"end":{"line":187,"column":33}},"98":{"start":{"line":188,"column":6},"end":{"line":188,"column":27}},"99":{"start":{"line":189,"column":11},"end":{"line":212,"column":5}},"100":{"start":{"line":190,"column":6},"end":{"line":190,"column":33}},"101":{"start":{"line":190,"column":28},"end":{"line":190,"column":33}},"102":{"start":{"line":191,"column":6},"end":{"line":194,"column":7}},"103":{"start":{"line":195,"column":11},"end":{"line":212,"column":5}},"104":{"start":{"line":196,"column":6},"end":{"line":196,"column":33}},"105":{"start":{"line":196,"column":28},"end":{"line":196,"column":33}},"106":{"start":{"line":197,"column":6},"end":{"line":201,"column":7}},"107":{"start":{"line":202,"column":11},"end":{"line":212,"column":5}},"108":{"start":{"line":203,"column":6},"end":{"line":203,"column":33}},"109":{"start":{"line":203,"column":28},"end":{"line":203,"column":33}},"110":{"start":{"line":204,"column":6},"end":{"line":209,"column":7}},"111":{"start":{"line":211,"column":6},"end":{"line":211,"column":43}},"112":{"start":{"line":215,"column":2},"end":{"line":215,"column":14}},"113":{"start":{"line":218,"column":0},"end":{"line":234,"column":1}},"114":{"start":{"line":219,"column":2},"end":{"line":221,"column":3}},"115":{"start":{"line":220,"column":4},"end":{"line":220,"column":24}},"116":{"start":{"line":222,"column":2},"end":{"line":225,"column":3}},"117":{"start":{"line":224,"column":4},"end":{"line":224,"column":28}},"118":{"start":{"line":226,"column":2},"end":{"line":228,"column":3}},"119":{"start":{"line":227,"column":4},"end":{"line":227,"column":24}},"120":{"start":{"line":230,"column":2},"end":{"line":230,"column":25}},"121":{"start":{"line":231,"column":2},"end":{"line":231,"column":25}},"122":{"start":{"line":231,"column":17},"end":{"line":231,"column":25}},"123":{"start":{"line":233,"column":2},"end":{"line":233,"column":35}},"124":{"start":{"line":236,"column":0},"end":{"line":242,"column":1}},"125":{"start":{"line":237,"column":2},"end":{"line":240,"column":3}},"126":{"start":{"line":238,"column":4},"end":{"line":238,"column":62}},"127":{"start":{"line":238,"column":57},"end":{"line":238,"column":62}},"128":{"start":{"line":239,"column":4},"end":{"line":239,"column":28}},"129":{"start":{"line":241,"column":2},"end":{"line":241,"column":10}},"130":{"start":{"line":244,"column":0},"end":{"line":246,"column":1}},"131":{"start":{"line":245,"column":2},"end":{"line":245,"column":82}},"132":{"start":{"line":248,"column":0},"end":{"line":262,"column":1}},"133":{"start":{"line":249,"column":2},"end":{"line":251,"column":3}},"134":{"start":{"line":250,"column":4},"end":{"line":250,"column":64}},"135":{"start":{"line":253,"column":2},"end":{"line":255,"column":3}},"136":{"start":{"line":254,"column":4},"end":{"line":254,"column":49}},"137":{"start":{"line":257,"column":2},"end":{"line":259,"column":3}},"138":{"start":{"line":258,"column":4},"end":{"line":258,"column":36}},"139":{"start":{"line":261,"column":2},"end":{"line":261,"column":26}},"140":{"start":{"line":264,"column":0},"end":{"line":291,"column":1}},"141":{"start":{"line":266,"column":2},"end":{"line":281,"column":3}},"142":{"start":{"line":267,"column":4},"end":{"line":267,"column":24}},"143":{"start":{"line":268,"column":4},"end":{"line":268,"column":14}},"144":{"start":{"line":270,"column":9},"end":{"line":281,"column":3}},"145":{"start":{"line":271,"column":4},"end":{"line":271,"column":24}},"146":{"start":{"line":272,"column":4},"end":{"line":272,"column":14}},"147":{"start":{"line":274,"column":9},"end":{"line":281,"column":3}},"148":{"start":{"line":275,"column":4},"end":{"line":275,"column":23}},"149":{"start":{"line":276,"column":4},"end":{"line":280,"column":5}},"150":{"start":{"line":277,"column":6},"end":{"line":277,"column":25}},"151":{"start":{"line":279,"column":6},"end":{"line":279,"column":24}},"152":{"start":{"line":283,"column":2},"end":{"line":283,"column":38}},"153":{"start":{"line":284,"column":2},"end":{"line":284,"column":68}},"154":{"start":{"line":284,"column":50},"end":{"line":284,"column":68}},"155":{"start":{"line":286,"column":2},"end":{"line":288,"column":3}},"156":{"start":{"line":287,"column":4},"end":{"line":287,"column":66}},"157":{"start":{"line":290,"column":2},"end":{"line":290,"column":48}},"158":{"start":{"line":293,"column":0},"end":{"line":318,"column":1}},"159":{"start":{"line":294,"column":2},"end":{"line":294,"column":23}},"160":{"start":{"line":295,"column":2},"end":{"line":295,"column":17}},"161":{"start":{"line":296,"column":2},"end":{"line":296,"column":39}},"162":{"start":{"line":298,"column":2},"end":{"line":303,"column":3}},"163":{"start":{"line":299,"column":4},"end":{"line":299,"column":16}},"164":{"start":{"line":300,"column":4},"end":{"line":300,"column":28}},"165":{"start":{"line":300,"column":19},"end":{"line":300,"column":28}},"166":{"start":{"line":301,"column":9},"end":{"line":303,"column":3}},"167":{"start":{"line":302,"column":4},"end":{"line":302,"column":15}},"168":{"start":{"line":305,"column":2},"end":{"line":310,"column":3}},"169":{"start":{"line":306,"column":4},"end":{"line":306,"column":14}},"170":{"start":{"line":307,"column":4},"end":{"line":307,"column":24}},"171":{"start":{"line":307,"column":17},"end":{"line":307,"column":24}},"172":{"start":{"line":308,"column":9},"end":{"line":310,"column":3}},"173":{"start":{"line":309,"column":4},"end":{"line":309,"column":13}},"174":{"start":{"line":312,"column":2},"end":{"line":312,"column":30}},"175":{"start":{"line":312,"column":19},"end":{"line":312,"column":30}},"176":{"start":{"line":314,"column":2},"end":{"line":314,"column":40}},"177":{"start":{"line":316,"column":2},"end":{"line":316,"column":37}},"178":{"start":{"line":317,"column":2},"end":{"line":317,"column":15}},"179":{"start":{"line":320,"column":0},"end":{"line":366,"column":1}},"180":{"start":{"line":321,"column":2},"end":{"line":321,"column":23}},"181":{"start":{"line":321,"column":14},"end":{"line":321,"column":23}},"182":{"start":{"line":322,"column":2},"end":{"line":322,"column":42}},"183":{"start":{"line":322,"column":25},"end":{"line":322,"column":42}},"184":{"start":{"line":323,"column":2},"end":{"line":323,"column":63}},"185":{"start":{"line":323,"column":36},"end":{"line":323,"column":63}},"186":{"start":{"line":324,"column":2},"end":{"line":324,"column":35}},"187":{"start":{"line":324,"column":20},"end":{"line":324,"column":35}},"188":{"start":{"line":325,"column":2},"end":{"line":325,"column":41}},"189":{"start":{"line":325,"column":30},"end":{"line":325,"column":41}},"190":{"start":{"line":328,"column":2},"end":{"line":328,"column":29}},"191":{"start":{"line":328,"column":21},"end":{"line":328,"column":29}},"192":{"start":{"line":329,"column":2},"end":{"line":329,"column":56}},"193":{"start":{"line":329,"column":48},"end":{"line":329,"column":56}},"194":{"start":{"line":332,"column":2},"end":{"line":334,"column":3}},"195":{"start":{"line":333,"column":4},"end":{"line":333,"column":53}},"196":{"start":{"line":335,"column":2},"end":{"line":335,"column":90}},"197":{"start":{"line":335,"column":41},"end":{"line":335,"column":90}},"198":{"start":{"line":336,"column":2},"end":{"line":336,"column":62}},"199":{"start":{"line":336,"column":15},"end":{"line":336,"column":62}},"200":{"start":{"line":339,"column":2},"end":{"line":339,"column":42}},"201":{"start":{"line":339,"column":25},"end":{"line":339,"column":42}},"202":{"start":{"line":340,"column":2},"end":{"line":342,"column":3}},"203":{"start":{"line":341,"column":4},"end":{"line":341,"column":45}},"204":{"start":{"line":344,"column":2},"end":{"line":344,"column":23}},"205":{"start":{"line":345,"column":2},"end":{"line":345,"column":7}},"206":{"start":{"line":347,"column":2},"end":{"line":363,"column":3}},"207":{"start":{"line":349,"column":4},"end":{"line":351,"column":5}},"208":{"start":{"line":350,"column":6},"end":{"line":350,"column":47}},"209":{"start":{"line":352,"column":9},"end":{"line":363,"column":3}},"210":{"start":{"line":354,"column":4},"end":{"line":356,"column":5}},"211":{"start":{"line":355,"column":6},"end":{"line":355,"column":47}},"212":{"start":{"line":358,"column":4},"end":{"line":362,"column":5}},"213":{"start":{"line":365,"column":2},"end":{"line":365,"column":12}},"214":{"start":{"line":368,"column":0},"end":{"line":417,"column":1}},"215":{"start":{"line":370,"column":2},"end":{"line":385,"column":3}},"216":{"start":{"line":371,"column":4},"end":{"line":376,"column":5}},"217":{"start":{"line":372,"column":6},"end":{"line":372,"column":15}},"218":{"start":{"line":373,"column":6},"end":{"line":373,"column":23}},"219":{"start":{"line":374,"column":11},"end":{"line":376,"column":5}},"220":{"start":{"line":375,"column":6},"end":{"line":375,"column":23}},"221":{"start":{"line":377,"column":4},"end":{"line":382,"column":5}},"222":{"start":{"line":378,"column":6},"end":{"line":378,"column":34}},"223":{"start":{"line":379,"column":6},"end":{"line":381,"column":7}},"224":{"start":{"line":380,"column":8},"end":{"line":380,"column":18}},"225":{"start":{"line":383,"column":9},"end":{"line":385,"column":3}},"226":{"start":{"line":384,"column":4},"end":{"line":384,"column":19}},"227":{"start":{"line":388,"column":2},"end":{"line":390,"column":3}},"228":{"start":{"line":389,"column":4},"end":{"line":389,"column":46}},"229":{"start":{"line":392,"column":2},"end":{"line":394,"column":3}},"230":{"start":{"line":393,"column":4},"end":{"line":393,"column":15}},"231":{"start":{"line":396,"column":2},"end":{"line":396,"column":21}},"232":{"start":{"line":397,"column":2},"end":{"line":397,"column":51}},"233":{"start":{"line":399,"column":2},"end":{"line":399,"column":19}},"234":{"start":{"line":399,"column":12},"end":{"line":399,"column":19}},"235":{"start":{"line":401,"column":2},"end":{"line":401,"column":7}},"236":{"start":{"line":402,"column":2},"end":{"line":414,"column":3}},"237":{"start":{"line":403,"column":4},"end":{"line":405,"column":5}},"238":{"start":{"line":404,"column":6},"end":{"line":404,"column":19}},"239":{"start":{"line":407,"column":4},"end":{"line":409,"column":23}},"240":{"start":{"line":410,"column":4},"end":{"line":410,"column":26}},"241":{"start":{"line":411,"column":4},"end":{"line":413,"column":5}},"242":{"start":{"line":412,"column":6},"end":{"line":412,"column":38}},"243":{"start":{"line":416,"column":2},"end":{"line":416,"column":13}},"244":{"start":{"line":419,"column":0},"end":{"line":447,"column":1}},"245":{"start":{"line":420,"column":2},"end":{"line":422,"column":3}},"246":{"start":{"line":421,"column":4},"end":{"line":421,"column":70}},"247":{"start":{"line":424,"column":2},"end":{"line":426,"column":3}},"248":{"start":{"line":425,"column":4},"end":{"line":425,"column":32}},"249":{"start":{"line":428,"column":2},"end":{"line":428,"column":7}},"250":{"start":{"line":429,"column":2},"end":{"line":434,"column":3}},"251":{"start":{"line":430,"column":4},"end":{"line":430,"column":14}},"252":{"start":{"line":431,"column":4},"end":{"line":433,"column":5}},"253":{"start":{"line":432,"column":6},"end":{"line":432,"column":30}},"254":{"start":{"line":436,"column":2},"end":{"line":436,"column":34}},"255":{"start":{"line":437,"column":2},"end":{"line":437,"column":13}},"256":{"start":{"line":438,"column":2},"end":{"line":445,"column":3}},"257":{"start":{"line":439,"column":4},"end":{"line":439,"column":21}},"258":{"start":{"line":440,"column":4},"end":{"line":442,"column":5}},"259":{"start":{"line":441,"column":6},"end":{"line":441,"column":72}},"260":{"start":{"line":443,"column":4},"end":{"line":443,"column":25}},"261":{"start":{"line":444,"column":4},"end":{"line":444,"column":21}},"262":{"start":{"line":446,"column":2},"end":{"line":446,"column":15}},"263":{"start":{"line":449,"column":0},"end":{"line":449,"column":30}},"264":{"start":{"line":451,"column":0},"end":{"line":451,"column":33}},"265":{"start":{"line":452,"column":0},"end":{"line":454,"column":1}},"266":{"start":{"line":453,"column":2},"end":{"line":453,"column":37}},"267":{"start":{"line":456,"column":0},"end":{"line":456,"column":23}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":2},"end":{"line":15,"column":2}},{"start":{"line":15,"column":2},"end":{"line":15,"column":2}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":0},"end":{"line":26,"column":0}},{"start":{"line":26,"column":0},"end":{"line":26,"column":0}}]},"3":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":33}},{"start":{"line":26,"column":37},"end":{"line":26,"column":51}},{"start":{"line":27,"column":4},"end":{"line":27,"column":37}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"5":{"line":57,"type":"cond-expr","locations":[{"start":{"line":57,"column":33},"end":{"line":57,"column":34}},{"start":{"line":57,"column":37},"end":{"line":57,"column":54}}]},"6":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":2},"end":{"line":66,"column":2}},{"start":{"line":66,"column":2},"end":{"line":66,"column":2}}]},"7":{"line":77,"type":"cond-expr","locations":[{"start":{"line":77,"column":34},"end":{"line":77,"column":35}},{"start":{"line":77,"column":38},"end":{"line":77,"column":63}}]},"8":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":2},"end":{"line":86,"column":2}},{"start":{"line":86,"column":2},"end":{"line":86,"column":2}}]},"9":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":6},"end":{"line":86,"column":20}},{"start":{"line":86,"column":24},"end":{"line":86,"column":53}}]},"10":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":2},"end":{"line":90,"column":2}},{"start":{"line":90,"column":2},"end":{"line":90,"column":2}}]},"11":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":39},"end":{"line":90,"column":45}},{"start":{"line":90,"column":49},"end":{"line":90,"column":50}}]},"12":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":2},"end":{"line":95,"column":2}},{"start":{"line":95,"column":2},"end":{"line":95,"column":2}}]},"13":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":6},"end":{"line":95,"column":30}},{"start":{"line":95,"column":34},"end":{"line":95,"column":54}}]},"14":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":9},"end":{"line":97,"column":9}},{"start":{"line":97,"column":9},"end":{"line":97,"column":9}}]},"15":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":2},"end":{"line":109,"column":2}},{"start":{"line":109,"column":2},"end":{"line":109,"column":2}}]},"16":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":113,"column":4}},{"start":{"line":113,"column":4},"end":{"line":113,"column":4}}]},"17":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":2},"end":{"line":121,"column":2}},{"start":{"line":121,"column":2},"end":{"line":121,"column":2}}]},"18":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":4},"end":{"line":122,"column":4}},{"start":{"line":122,"column":4},"end":{"line":122,"column":4}}]},"19":{"line":122,"type":"binary-expr","locations":[{"start":{"line":122,"column":9},"end":{"line":122,"column":43}},{"start":{"line":123,"column":8},"end":{"line":123,"column":41}},{"start":{"line":123,"column":46},"end":{"line":123,"column":61}}]},"20":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":6},"end":{"line":124,"column":6}},{"start":{"line":124,"column":6},"end":{"line":124,"column":6}}]},"21":{"line":124,"type":"binary-expr","locations":[{"start":{"line":124,"column":10},"end":{"line":124,"column":40}},{"start":{"line":124,"column":44},"end":{"line":124,"column":61}}]},"22":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":4},"end":{"line":130,"column":4}},{"start":{"line":130,"column":4},"end":{"line":130,"column":4}}]},"23":{"line":130,"type":"binary-expr","locations":[{"start":{"line":130,"column":8},"end":{"line":130,"column":29}},{"start":{"line":130,"column":33},"end":{"line":130,"column":56}}]},"24":{"line":139,"type":"binary-expr","locations":[{"start":{"line":139,"column":10},"end":{"line":139,"column":15}},{"start":{"line":139,"column":19},"end":{"line":139,"column":27}}]},"25":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":4},"end":{"line":149,"column":4}},{"start":{"line":149,"column":4},"end":{"line":149,"column":4}}]},"26":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":8},"end":{"line":149,"column":26}},{"start":{"line":149,"column":30},"end":{"line":149,"column":48}}]},"27":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":6},"end":{"line":151,"column":6}},{"start":{"line":151,"column":6},"end":{"line":151,"column":6}}]},"28":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":8},"end":{"line":153,"column":8}},{"start":{"line":153,"column":8},"end":{"line":153,"column":8}}]},"29":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":10},"end":{"line":155,"column":10}},{"start":{"line":155,"column":10},"end":{"line":155,"column":10}}]},"30":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":15},"end":{"line":157,"column":15}},{"start":{"line":157,"column":15},"end":{"line":157,"column":15}}]},"31":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":10},"end":{"line":159,"column":10}},{"start":{"line":159,"column":10},"end":{"line":159,"column":10}}]},"32":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":6},"end":{"line":170,"column":6}},{"start":{"line":170,"column":6},"end":{"line":170,"column":6}}]},"33":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":8},"end":{"line":171,"column":8}},{"start":{"line":171,"column":8},"end":{"line":171,"column":8}}]},"34":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":11},"end":{"line":178,"column":11}},{"start":{"line":178,"column":11},"end":{"line":178,"column":11}}]},"35":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":6},"end":{"line":180,"column":6}},{"start":{"line":180,"column":6},"end":{"line":180,"column":6}}]},"36":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":4},"end":{"line":186,"column":4}},{"start":{"line":186,"column":4},"end":{"line":186,"column":4}}]},"37":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":6},"end":{"line":187,"column":6}},{"start":{"line":187,"column":6},"end":{"line":187,"column":6}}]},"38":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":11},"end":{"line":189,"column":11}},{"start":{"line":189,"column":11},"end":{"line":189,"column":11}}]},"39":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":6},"end":{"line":190,"column":6}},{"start":{"line":190,"column":6},"end":{"line":190,"column":6}}]},"40":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":11},"end":{"line":195,"column":11}},{"start":{"line":195,"column":11},"end":{"line":195,"column":11}}]},"41":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":6},"end":{"line":196,"column":6}},{"start":{"line":196,"column":6},"end":{"line":196,"column":6}}]},"42":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":11},"end":{"line":202,"column":11}},{"start":{"line":202,"column":11},"end":{"line":202,"column":11}}]},"43":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":6},"end":{"line":203,"column":6}},{"start":{"line":203,"column":6},"end":{"line":203,"column":6}}]},"44":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":2},"end":{"line":219,"column":2}},{"start":{"line":219,"column":2},"end":{"line":219,"column":2}}]},"45":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":2},"end":{"line":222,"column":2}},{"start":{"line":222,"column":2},"end":{"line":222,"column":2}}]},"46":{"line":222,"type":"binary-expr","locations":[{"start":{"line":222,"column":6},"end":{"line":222,"column":40}},{"start":{"line":222,"column":44},"end":{"line":222,"column":84}},{"start":{"line":223,"column":7},"end":{"line":223,"column":33}},{"start":{"line":223,"column":37},"end":{"line":223,"column":66}}]},"47":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":2},"end":{"line":226,"column":2}},{"start":{"line":226,"column":2},"end":{"line":226,"column":2}}]},"48":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":2},"end":{"line":231,"column":2}},{"start":{"line":231,"column":2},"end":{"line":231,"column":2}}]},"49":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":4},"end":{"line":238,"column":4}},{"start":{"line":238,"column":4},"end":{"line":238,"column":4}}]},"50":{"line":238,"type":"binary-expr","locations":[{"start":{"line":238,"column":9},"end":{"line":238,"column":33}},{"start":{"line":238,"column":39},"end":{"line":238,"column":54}}]},"51":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":2},"end":{"line":249,"column":2}},{"start":{"line":249,"column":2},"end":{"line":249,"column":2}}]},"52":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":2},"end":{"line":253,"column":2}},{"start":{"line":253,"column":2},"end":{"line":253,"column":2}}]},"53":{"line":253,"type":"binary-expr","locations":[{"start":{"line":253,"column":6},"end":{"line":253,"column":40}},{"start":{"line":253,"column":44},"end":{"line":253,"column":72}}]},"54":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":2},"end":{"line":257,"column":2}},{"start":{"line":257,"column":2},"end":{"line":257,"column":2}}]},"55":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":2},"end":{"line":266,"column":2}},{"start":{"line":266,"column":2},"end":{"line":266,"column":2}}]},"56":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":9},"end":{"line":270,"column":9}},{"start":{"line":270,"column":9},"end":{"line":270,"column":9}}]},"57":{"line":270,"type":"binary-expr","locations":[{"start":{"line":270,"column":13},"end":{"line":270,"column":33}},{"start":{"line":270,"column":37},"end":{"line":270,"column":63}}]},"58":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":9},"end":{"line":274,"column":9}},{"start":{"line":274,"column":9},"end":{"line":274,"column":9}}]},"59":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":4},"end":{"line":276,"column":4}},{"start":{"line":276,"column":4},"end":{"line":276,"column":4}}]},"60":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":2},"end":{"line":284,"column":2}},{"start":{"line":284,"column":2},"end":{"line":284,"column":2}}]},"61":{"line":284,"type":"binary-expr","locations":[{"start":{"line":284,"column":6},"end":{"line":284,"column":26}},{"start":{"line":284,"column":30},"end":{"line":284,"column":48}}]},"62":{"line":286,"type":"if","locations":[{"start":{"line":286,"column":2},"end":{"line":286,"column":2}},{"start":{"line":286,"column":2},"end":{"line":286,"column":2}}]},"63":{"line":286,"type":"binary-expr","locations":[{"start":{"line":286,"column":7},"end":{"line":286,"column":24}},{"start":{"line":286,"column":29},"end":{"line":286,"column":39}},{"start":{"line":286,"column":43},"end":{"line":286,"column":53}},{"start":{"line":286,"column":59},"end":{"line":286,"column":79}}]},"64":{"line":296,"type":"cond-expr","locations":[{"start":{"line":296,"column":28},"end":{"line":296,"column":31}},{"start":{"line":296,"column":34},"end":{"line":296,"column":39}}]},"65":{"line":298,"type":"if","locations":[{"start":{"line":298,"column":2},"end":{"line":298,"column":2}},{"start":{"line":298,"column":2},"end":{"line":298,"column":2}}]},"66":{"line":300,"type":"if","locations":[{"start":{"line":300,"column":4},"end":{"line":300,"column":4}},{"start":{"line":300,"column":4},"end":{"line":300,"column":4}}]},"67":{"line":301,"type":"if","locations":[{"start":{"line":301,"column":9},"end":{"line":301,"column":9}},{"start":{"line":301,"column":9},"end":{"line":301,"column":9}}]},"68":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":2},"end":{"line":305,"column":2}},{"start":{"line":305,"column":2},"end":{"line":305,"column":2}}]},"69":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":4},"end":{"line":307,"column":4}},{"start":{"line":307,"column":4},"end":{"line":307,"column":4}}]},"70":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":9},"end":{"line":308,"column":9}},{"start":{"line":308,"column":9},"end":{"line":308,"column":9}}]},"71":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":2},"end":{"line":312,"column":2}},{"start":{"line":312,"column":2},"end":{"line":312,"column":2}}]},"72":{"line":321,"type":"if","locations":[{"start":{"line":321,"column":2},"end":{"line":321,"column":2}},{"start":{"line":321,"column":2},"end":{"line":321,"column":2}}]},"73":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":2},"end":{"line":322,"column":2}},{"start":{"line":322,"column":2},"end":{"line":322,"column":2}}]},"74":{"line":322,"type":"binary-expr","locations":[{"start":{"line":322,"column":6},"end":{"line":322,"column":10}},{"start":{"line":322,"column":14},"end":{"line":322,"column":23}}]},"75":{"line":323,"type":"if","locations":[{"start":{"line":323,"column":2},"end":{"line":323,"column":2}},{"start":{"line":323,"column":2},"end":{"line":323,"column":2}}]},"76":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":2},"end":{"line":324,"column":2}},{"start":{"line":324,"column":2},"end":{"line":324,"column":2}}]},"77":{"line":325,"type":"if","locations":[{"start":{"line":325,"column":2},"end":{"line":325,"column":2}},{"start":{"line":325,"column":2},"end":{"line":325,"column":2}}]},"78":{"line":325,"type":"binary-expr","locations":[{"start":{"line":325,"column":6},"end":{"line":325,"column":13}},{"start":{"line":325,"column":17},"end":{"line":325,"column":28}}]},"79":{"line":328,"type":"if","locations":[{"start":{"line":328,"column":2},"end":{"line":328,"column":2}},{"start":{"line":328,"column":2},"end":{"line":328,"column":2}}]},"80":{"line":329,"type":"if","locations":[{"start":{"line":329,"column":2},"end":{"line":329,"column":2}},{"start":{"line":329,"column":2},"end":{"line":329,"column":2}}]},"81":{"line":329,"type":"binary-expr","locations":[{"start":{"line":329,"column":6},"end":{"line":329,"column":25}},{"start":{"line":329,"column":29},"end":{"line":329,"column":46}}]},"82":{"line":332,"type":"if","locations":[{"start":{"line":332,"column":2},"end":{"line":332,"column":2}},{"start":{"line":332,"column":2},"end":{"line":332,"column":2}}]},"83":{"line":335,"type":"if","locations":[{"start":{"line":335,"column":2},"end":{"line":335,"column":2}},{"start":{"line":335,"column":2},"end":{"line":335,"column":2}}]},"84":{"line":335,"type":"binary-expr","locations":[{"start":{"line":335,"column":6},"end":{"line":335,"column":15}},{"start":{"line":335,"column":19},"end":{"line":335,"column":39}}]},"85":{"line":336,"type":"if","locations":[{"start":{"line":336,"column":2},"end":{"line":336,"column":2}},{"start":{"line":336,"column":2},"end":{"line":336,"column":2}}]},"86":{"line":339,"type":"if","locations":[{"start":{"line":339,"column":2},"end":{"line":339,"column":2}},{"start":{"line":339,"column":2},"end":{"line":339,"column":2}}]},"87":{"line":340,"type":"if","locations":[{"start":{"line":340,"column":2},"end":{"line":340,"column":2}},{"start":{"line":340,"column":2},"end":{"line":340,"column":2}}]},"88":{"line":347,"type":"if","locations":[{"start":{"line":347,"column":2},"end":{"line":347,"column":2}},{"start":{"line":347,"column":2},"end":{"line":347,"column":2}}]},"89":{"line":347,"type":"binary-expr","locations":[{"start":{"line":347,"column":6},"end":{"line":347,"column":21}},{"start":{"line":347,"column":25},"end":{"line":347,"column":44}},{"start":{"line":347,"column":48},"end":{"line":347,"column":65}}]},"90":{"line":352,"type":"if","locations":[{"start":{"line":352,"column":9},"end":{"line":352,"column":9}},{"start":{"line":352,"column":9},"end":{"line":352,"column":9}}]},"91":{"line":370,"type":"if","locations":[{"start":{"line":370,"column":2},"end":{"line":370,"column":2}},{"start":{"line":370,"column":2},"end":{"line":370,"column":2}}]},"92":{"line":371,"type":"if","locations":[{"start":{"line":371,"column":4},"end":{"line":371,"column":4}},{"start":{"line":371,"column":4},"end":{"line":371,"column":4}}]},"93":{"line":374,"type":"if","locations":[{"start":{"line":374,"column":11},"end":{"line":374,"column":11}},{"start":{"line":374,"column":11},"end":{"line":374,"column":11}}]},"94":{"line":377,"type":"if","locations":[{"start":{"line":377,"column":4},"end":{"line":377,"column":4}},{"start":{"line":377,"column":4},"end":{"line":377,"column":4}}]},"95":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":6},"end":{"line":379,"column":6}},{"start":{"line":379,"column":6},"end":{"line":379,"column":6}}]},"96":{"line":383,"type":"if","locations":[{"start":{"line":383,"column":9},"end":{"line":383,"column":9}},{"start":{"line":383,"column":9},"end":{"line":383,"column":9}}]},"97":{"line":388,"type":"if","locations":[{"start":{"line":388,"column":2},"end":{"line":388,"column":2}},{"start":{"line":388,"column":2},"end":{"line":388,"column":2}}]},"98":{"line":388,"type":"binary-expr","locations":[{"start":{"line":388,"column":6},"end":{"line":388,"column":15}},{"start":{"line":388,"column":19},"end":{"line":388,"column":38}},{"start":{"line":388,"column":42},"end":{"line":388,"column":59}}]},"99":{"line":392,"type":"if","locations":[{"start":{"line":392,"column":2},"end":{"line":392,"column":2}},{"start":{"line":392,"column":2},"end":{"line":392,"column":2}}]},"100":{"line":397,"type":"cond-expr","locations":[{"start":{"line":397,"column":28},"end":{"line":397,"column":39}},{"start":{"line":397,"column":42},"end":{"line":397,"column":51}}]},"101":{"line":399,"type":"if","locations":[{"start":{"line":399,"column":2},"end":{"line":399,"column":2}},{"start":{"line":399,"column":2},"end":{"line":399,"column":2}}]},"102":{"line":402,"type":"if","locations":[{"start":{"line":402,"column":2},"end":{"line":402,"column":2}},{"start":{"line":402,"column":2},"end":{"line":402,"column":2}}]},"103":{"line":407,"type":"cond-expr","locations":[{"start":{"line":408,"column":8},"end":{"line":408,"column":11}},{"start":{"line":409,"column":8},"end":{"line":409,"column":23}}]},"104":{"line":420,"type":"if","locations":[{"start":{"line":420,"column":2},"end":{"line":420,"column":2}},{"start":{"line":420,"column":2},"end":{"line":420,"column":2}}]},"105":{"line":424,"type":"if","locations":[{"start":{"line":424,"column":2},"end":{"line":424,"column":2}},{"start":{"line":424,"column":2},"end":{"line":424,"column":2}}]},"106":{"line":429,"type":"if","locations":[{"start":{"line":429,"column":2},"end":{"line":429,"column":2}},{"start":{"line":429,"column":2},"end":{"line":429,"column":2}}]},"107":{"line":440,"type":"if","locations":[{"start":{"line":440,"column":4},"end":{"line":440,"column":4}},{"start":{"line":440,"column":4},"end":{"line":440,"column":4}}]},"108":{"line":453,"type":"binary-expr","locations":[{"start":{"line":453,"column":12},"end":{"line":453,"column":21}},{"start":{"line":453,"column":25},"end":{"line":453,"column":36}}]}},"code":["/**"," * Implementation of a subset of node.js Buffer methods for the browser."," * Based on https://github.com/feross/buffer"," */","","/* eslint-disable no-proto */","","'use strict'","","var isArray = require('isarray')","","var K_MAX_LENGTH = 0x7fffffff","","function Buffer (arg, offset, length) {","  if (typeof arg === 'number') {","    return allocUnsafe(arg)","  }","","  return from(arg, offset, length)","}","","Buffer.prototype.__proto__ = Uint8Array.prototype","Buffer.__proto__ = Uint8Array","","// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97","if (typeof Symbol !== 'undefined' && Symbol.species &&","    Buffer[Symbol.species] === Buffer) {","  Object.defineProperty(Buffer, Symbol.species, {","    value: null,","    configurable: true,","    enumerable: false,","    writable: false","  })","}","","function checked (length) {","  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when","  // length is NaN (which is otherwise coerced to zero.)","  if (length >= K_MAX_LENGTH) {","    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +","                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')","  }","  return length | 0","}","","function isnan (val) {","  return val !== val // eslint-disable-line no-self-compare","}","","function createBuffer (length) {","  var buf = new Uint8Array(length)","  buf.__proto__ = Buffer.prototype","  return buf","}","","function allocUnsafe (size) {","  return createBuffer(size < 0 ? 0 : checked(size) | 0)","}","","function fromString (string) {","  var length = byteLength(string) | 0","  var buf = createBuffer(length)","","  var actual = buf.write(string)","","  if (actual !== length) {","    // Writing a hex string, for example, that contains invalid characters will","    // cause everything after the first invalid character to be ignored. (e.g.","    // 'abxxcd' will be treated as 'ab')","    buf = buf.slice(0, actual)","  }","","  return buf","}","","function fromArrayLike (array) {","  var length = array.length < 0 ? 0 : checked(array.length) | 0","  var buf = createBuffer(length)","  for (var i = 0; i < length; i += 1) {","    buf[i] = array[i] & 255","  }","  return buf","}","","function fromArrayBuffer (array, byteOffset, length) {","  if (byteOffset < 0 || array.byteLength < byteOffset) {","    throw new RangeError('\\'offset\\' is out of bounds')","  }","","  if (array.byteLength < byteOffset + (length || 0)) {","    throw new RangeError('\\'length\\' is out of bounds')","  }","","  var buf","  if (byteOffset === undefined && length === undefined) {","    buf = new Uint8Array(array)","  } else if (length === undefined) {","    buf = new Uint8Array(array, byteOffset)","  } else {","    buf = new Uint8Array(array, byteOffset, length)","  }","","  // Return an augmented `Uint8Array` instance","  buf.__proto__ = Buffer.prototype","  return buf","}","","function fromObject (obj) {","  if (Buffer.isBuffer(obj)) {","    var len = checked(obj.length) | 0","    var buf = createBuffer(len)","","    if (buf.length === 0) {","      return buf","    }","","    obj.copy(buf, 0, 0, len)","    return buf","  }","","  if (obj) {","    if ((typeof ArrayBuffer !== 'undefined' &&","        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {","      if (typeof obj.length !== 'number' || isnan(obj.length)) {","        return createBuffer(0)","      }","      return fromArrayLike(obj)","    }","","    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {","      return fromArrayLike(obj.data)","    }","  }","","  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')","}","","function utf8ToBytes (string, units) {","  units = units || Infinity","  var codePoint","  var length = string.length","  var leadSurrogate = null","  var bytes = []","","  for (var i = 0; i < length; ++i) {","    codePoint = string.charCodeAt(i)","","    // is surrogate component","    if (codePoint > 0xD7FF && codePoint < 0xE000) {","      // last char was a lead","      if (!leadSurrogate) {","        // no lead yet","        if (codePoint > 0xDBFF) {","          // unexpected trail","          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)","          continue","        } else if (i + 1 === length) {","          // unpaired lead","          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)","          continue","        }","","        // valid lead","        leadSurrogate = codePoint","","        continue","      }","","      // 2 leads in a row","      if (codePoint < 0xDC00) {","        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)","        leadSurrogate = codePoint","        continue","      }","","      // valid surrogate pair","      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000","    } else if (leadSurrogate) {","      // valid bmp char, but last char was a lead","      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)","    }","","    leadSurrogate = null","","    // encode utf8","    if (codePoint < 0x80) {","      if ((units -= 1) < 0) break","      bytes.push(codePoint)","    } else if (codePoint < 0x800) {","      if ((units -= 2) < 0) break","      bytes.push(","        codePoint >> 0x6 | 0xC0,","        codePoint & 0x3F | 0x80","      )","    } else if (codePoint < 0x10000) {","      if ((units -= 3) < 0) break","      bytes.push(","        codePoint >> 0xC | 0xE0,","        codePoint >> 0x6 & 0x3F | 0x80,","        codePoint & 0x3F | 0x80","      )","    } else if (codePoint < 0x110000) {","      if ((units -= 4) < 0) break","      bytes.push(","        codePoint >> 0x12 | 0xF0,","        codePoint >> 0xC & 0x3F | 0x80,","        codePoint >> 0x6 & 0x3F | 0x80,","        codePoint & 0x3F | 0x80","      )","    } else {","      throw new Error('Invalid code point')","    }","  }","","  return bytes","}","","function byteLength (string) {","  if (Buffer.isBuffer(string)) {","    return string.length","  }","  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&","      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {","    return string.byteLength","  }","  if (typeof string !== 'string') {","    string = '' + string","  }","","  var len = string.length","  if (len === 0) return 0","","  return utf8ToBytes(string).length","}","","function blitBuffer (src, dst, offset, length) {","  for (var i = 0; i < length; ++i) {","    if ((i + offset >= dst.length) || (i >= src.length)) break","    dst[i + offset] = src[i]","  }","  return i","}","","function utf8Write (buf, string, offset, length) {","  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)","}","","function from (value, offset, length) {","  if (typeof value === 'number') {","    throw new TypeError('\"value\" argument must not be a number')","  }","","  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {","    return fromArrayBuffer(value, offset, length)","  }","","  if (typeof value === 'string') {","    return fromString(value, offset)","  }","","  return fromObject(value)","}","","Buffer.prototype.write = function write (string, offset, length) {","  // Buffer#write(string)","  if (offset === undefined) {","    length = this.length","    offset = 0","  // Buffer#write(string, encoding)","  } else if (length === undefined && typeof offset === 'string') {","    length = this.length","    offset = 0","  // Buffer#write(string, offset[, length])","  } else if (isFinite(offset)) {","    offset = offset | 0","    if (isFinite(length)) {","      length = length | 0","    } else {","      length = undefined","    }","  }","","  var remaining = this.length - offset","  if (length === undefined || length > remaining) length = remaining","","  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {","    throw new RangeError('Attempt to write outside buffer bounds')","  }","","  return utf8Write(this, string, offset, length)","}","","Buffer.prototype.slice = function slice (start, end) {","  var len = this.length","  start = ~~start","  end = end === undefined ? len : ~~end","","  if (start < 0) {","    start += len","    if (start < 0) start = 0","  } else if (start > len) {","    start = len","  }","","  if (end < 0) {","    end += len","    if (end < 0) end = 0","  } else if (end > len) {","    end = len","  }","","  if (end < start) end = start","","  var newBuf = this.subarray(start, end)","  // Return an augmented `Uint8Array` instance","  newBuf.__proto__ = Buffer.prototype","  return newBuf","}","","Buffer.prototype.copy = function copy (target, targetStart, start, end) {","  if (!start) start = 0","  if (!end && end !== 0) end = this.length","  if (targetStart >= target.length) targetStart = target.length","  if (!targetStart) targetStart = 0","  if (end > 0 && end < start) end = start","","  // Copy 0 bytes; we're done","  if (end === start) return 0","  if (target.length === 0 || this.length === 0) return 0","","  // Fatal error conditions","  if (targetStart < 0) {","    throw new RangeError('targetStart out of bounds')","  }","  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')","  if (end < 0) throw new RangeError('sourceEnd out of bounds')","","  // Are we oob?","  if (end > this.length) end = this.length","  if (target.length - targetStart < end - start) {","    end = target.length - targetStart + start","  }","","  var len = end - start","  var i","","  if (this === target && start < targetStart && targetStart < end) {","    // descending copy from end","    for (i = len - 1; i >= 0; --i) {","      target[i + targetStart] = this[i + start]","    }","  } else if (len < 1000) {","    // ascending copy from start","    for (i = 0; i < len; ++i) {","      target[i + targetStart] = this[i + start]","    }","  } else {","    Uint8Array.prototype.set.call(","      target,","      this.subarray(start, start + len),","      targetStart","    )","  }","","  return len","}","","Buffer.prototype.fill = function fill (val, start, end) {","  // Handle string cases:","  if (typeof val === 'string') {","    if (typeof start === 'string') {","      start = 0","      end = this.length","    } else if (typeof end === 'string') {","      end = this.length","    }","    if (val.length === 1) {","      var code = val.charCodeAt(0)","      if (code < 256) {","        val = code","      }","    }","  } else if (typeof val === 'number') {","    val = val & 255","  }","","  // Invalid ranges are not set to a default, so can range check early.","  if (start < 0 || this.length < start || this.length < end) {","    throw new RangeError('Out of range index')","  }","","  if (end <= start) {","    return this","  }","","  start = start >>> 0","  end = end === undefined ? this.length : end >>> 0","","  if (!val) val = 0","","  var i","  if (typeof val === 'number') {","    for (i = start; i < end; ++i) {","      this[i] = val","    }","  } else {","    var bytes = Buffer.isBuffer(val)","      ? val","      : new Buffer(val)","    var len = bytes.length","    for (i = 0; i < end - start; ++i) {","      this[i + start] = bytes[i % len]","    }","  }","","  return this","}","","Buffer.concat = function concat (list, length) {","  if (!isArray(list)) {","    throw new TypeError('\"list\" argument must be an Array of Buffers')","  }","","  if (list.length === 0) {","    return createBuffer(null, 0)","  }","","  var i","  if (length === undefined) {","    length = 0","    for (i = 0; i < list.length; ++i) {","      length += list[i].length","    }","  }","","  var buffer = allocUnsafe(length)","  var pos = 0","  for (i = 0; i < list.length; ++i) {","    var buf = list[i]","    if (!Buffer.isBuffer(buf)) {","      throw new TypeError('\"list\" argument must be an Array of Buffers')","    }","    buf.copy(buffer, pos)","    pos += buf.length","  }","  return buffer","}","","Buffer.byteLength = byteLength","","Buffer.prototype._isBuffer = true","Buffer.isBuffer = function isBuffer (b) {","  return !!(b != null && b._isBuffer)","}","","module.exports = Buffer",""],"l":{"10":1,"12":1,"14":1,"15":0,"16":0,"19":0,"22":1,"23":1,"26":1,"28":1,"36":1,"39":0,"40":0,"43":0,"46":1,"47":0,"50":1,"51":0,"52":0,"53":0,"56":1,"57":0,"60":1,"61":0,"62":0,"64":0,"66":0,"70":0,"73":0,"76":1,"77":0,"78":0,"79":0,"80":0,"82":0,"85":1,"86":0,"87":0,"90":0,"91":0,"94":0,"95":0,"96":0,"97":0,"98":0,"100":0,"104":0,"105":0,"108":1,"109":0,"110":0,"111":0,"113":0,"114":0,"117":0,"118":0,"121":0,"122":0,"124":0,"125":0,"127":0,"130":0,"131":0,"135":0,"138":1,"139":0,"140":0,"141":0,"142":0,"143":0,"145":0,"146":0,"149":0,"151":0,"153":0,"155":0,"156":0,"157":0,"159":0,"160":0,"164":0,"166":0,"170":0,"171":0,"172":0,"173":0,"177":0,"178":0,"180":0,"183":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"195":0,"196":0,"197":0,"202":0,"203":0,"204":0,"211":0,"215":0,"218":1,"219":0,"220":0,"222":0,"224":0,"226":0,"227":0,"230":0,"231":0,"233":0,"236":1,"237":0,"238":0,"239":0,"241":0,"244":1,"245":0,"248":1,"249":0,"250":0,"253":0,"254":0,"257":0,"258":0,"261":0,"264":1,"266":0,"267":0,"268":0,"270":0,"271":0,"272":0,"274":0,"275":0,"276":0,"277":0,"279":0,"283":0,"284":0,"286":0,"287":0,"290":0,"293":1,"294":0,"295":0,"296":0,"298":0,"299":0,"300":0,"301":0,"302":0,"305":0,"306":0,"307":0,"308":0,"309":0,"312":0,"314":0,"316":0,"317":0,"320":1,"321":0,"322":0,"323":0,"324":0,"325":0,"328":0,"329":0,"332":0,"333":0,"335":0,"336":0,"339":0,"340":0,"341":0,"344":0,"345":0,"347":0,"349":0,"350":0,"352":0,"354":0,"355":0,"358":0,"365":0,"368":1,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"377":0,"378":0,"379":0,"380":0,"383":0,"384":0,"388":0,"389":0,"392":0,"393":0,"396":0,"397":0,"399":0,"401":0,"402":0,"403":0,"404":0,"407":0,"410":0,"411":0,"412":0,"416":0,"419":1,"420":0,"421":0,"424":0,"425":0,"428":0,"429":0,"430":0,"431":0,"432":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"443":0,"444":0,"446":0,"449":1,"451":1,"452":1,"453":0,"456":1}}}